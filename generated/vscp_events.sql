 
--              !!!!!!!!!!!!!!!!!!!!  W A R N I N G  !!!!!!!!!!!!!!!!!!!!
--                             This file is auto-generated
--                  see https://github.com/grodansparadis/vscp-classes
--                          Generated: 2020-12-01 12:29:17.390102
 
-- Create the VSCP class table
CREATE TABLE "vscp_class" ( `class` INTEGER NOT NULL UNIQUE, `name` TEXT NOT NULL, `token` TEXT NOT NULL UNIQUE, `description` TEXT NOT NULL, PRIMARY KEY(class) ); ;
 
-- Create the VSCP type table
CREATE TABLE "vscp_type" ( `idxtype` INTEGER PRIMARY KEY AUTOINCREMENT, `type` INTEGER NOT NULL, `link_to_class` INTEGER NOT NULL, `token` TEXT NOT NULL, `description` TEXT ); ;
 
-- Create the VSCP measurement unit table
CREATE TABLE `vscp_unit` ( `idx_unit` INTEGER NOT NULL UNIQUE, `link_to_class` INTEGER NOT NULL, `link_to_type` INTEGER NOT NULL, `nunit` INTEGER NOT NULL, `name` TEXT NOT NULL, `description` TEXT NOT NULL, `conversion` TEXT NOT NULL DEFAULT 'val', PRIMARY KEY(idx_unit) ); ;
 
INSERT INTO vscp_class (class,name,token,description) VALUES (0,'VSCP Protocol Functionality','CLASS1.PROTOCOL','## Description\n\nThis class defines some types that must be implemented by every node that implements the VSCP protocol. The types in this class must be handled by all level I and Level II nodes. Note also that this class is repeated as Level II class=512 with the only difference that GUID''s are used instead of nicknames. This means that for all Level II class=512 events the data described here is preceded by the 16-bit destination GUID (address of receiver) stored with MSB first followed by the data specified here. Nickname is present also if documented below but have no meaning and should be discarded.\n\nAll other events are optional except for **one exception**. All nodes should send [CLASS1.INFORMATION, Type=9 (HEARTBEAT)](./class1.information.md#type9) at least once every minute.\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (1,'Alarm functionality','CLASS1.ALARM','## Description\n\nAlarm events that indicate that something not ordinary has occurred. Note that the priority bits can be used as a mean to level alarm for severity. \n');
INSERT INTO vscp_class (class,name,token,description) VALUES (2,'Security','CLASS1.SECURITY','## Description\n\nSecurity related events for alarms and similar devices. \n');
INSERT INTO vscp_class (class,name,token,description) VALUES (10,'Measurement','CLASS1.MEASUREMENT','## Description\n\nMeasurements are fetched from the [SI units and from SI derived units](https://en.wikipedia.org/wiki/International_System_of_Units). The SI unit (or the SI derived unit) is also used as the default unit. As in the SI unit standard, names for a unit is in lower case ("newton") and the unit ("N") is in upper case.\n\n**Byte 0** is the data coding byte for all measurement packages. The default unit has bits 0,1,2 set to 000 and the first optional unit 001 and so on. It also have a field for the item ( if more than one sensor is controlled by the node) that the value belongs to. See [data-coding](./vscp_data_coding.md) for a full description on data coding used.\n\nAll events in this class are mirrored in [CLASS1.MEASUREMENT32=70 (0x46)](./class1.measurement32.md_) as a single precision float. Default unit is used.\n\nAll events in this class are mirrored in [CLASS1.MEASUREMENT64=60 (0x3C)](./class1.measurement64.md) as floating point values using only the default unit .\n\nAll events in this class are mirrored in [CLASS1.MEASUREZONE=65 (0x41)](./class1.measurezone.md) as normalized integer values with index, zone, sub-zone. Default unit is used.\n\nAll events in this class are mirrored in [CLASS1.SETVALUEZONE=85 (0x55)](./class1.setvaluezone.md) as a normalized value using only the default unit but with index/zone/subzone.\n\nAll of the above is also available as [LEVEL I events over Level II](./class2.protocol1.md).\n\nAll events in this class are mirrored in\n[CLASS2.MEASUREMENT_STR=1040 (0x410)](./class2.measurement_str.md) as the events, in the range 0-255, which use decimal string values.\n\nAll events in this class are mirrored in\n[CLASS2.MEASUREMENT_FLOAT=1060 (0x424)](./class2.measurement_float.md) as the events, in the range 0-255, which use decimal float values.\n\nThe relationship between Level II measurement events and Level I measurement events is like this\n\n  - [CLASS1.MEASUREMENT=10 (0x0A)](./class1.measurement.md) which is mirrored as Level II measurements 0-255.\n  - [CLASS1.MEASUREMENT=11 (0x0B)](./class1.measurementx1.md) which is mirrored as Level II measurements 256-511.\n  - [CLASS1.MEASUREMENT=12 (0x0C)](./class1.measurementx2.md) which is mirrored as Level II measurements 512-767.\n  - [CLASS1.MEASUREMENT=13 (0x0D)](./class1.measurementx3.md) which is mirrored as Level II measurements 768-1023.\n  - [CLASS1.MEASUREMENT=14 (0x0E)](./class1.measurementx3.md) which is mirrored as Level II measurements 1024-1279.\n\nLevel II measurement events with type >= 1280 have no relation to any Level I measurement events.\n\n## Data format\n| Data byte | Description | \n | :---------: | ----------- | \n | 0 | [Data coding]((./vscp_measurements.md)).  | \n | 1-7 | Data with format defined by byte 0. | \n\n ');
INSERT INTO vscp_class (class,name,token,description) VALUES (11,'Measurement','CLASS1.MEASUREMENTX1','## Description\n\nMeasurements are fetched from the [SI units and from SI derived units](https://en.wikipedia.org/wiki/International_System_of_Units). The SI unit (or the SI derived unit) is also used as the default unit. As in the SI unit standard, names for a unit is in lower case ("newton") and the unit ("N") is in upper case.\n\n**Byte 0** is the data coding byte for all measurement packages. The default unit has bits 0,1,2 set to 000 and the first optional unit 001 and so on. It also have a field for the item ( if more than one sensor is controlled by the node) that the value belongs to. See [data-coding](./vscp_data_coding.md) for a full description on data coding used.\n\nAll events in this class are mirrored in [CLASS1.MEASUREMENT32=70 (0x46)](./class1.measurement32.md_) as a single precision float. Default unit is used.\n\nAll events in this class are mirrored in [CLASS1.MEASUREMENT64=60 (0x3C)](./class1.measurement64.md) as floating point values using only the default unit .\n\nAll events in this class are mirrored in [CLASS1.MEASUREZONE=65 (0x41)](./class1.measurezone.md) as normalized integer values with index, zone, sub-zone. Default unit is used.\n\nAll events in this class are mirrored in [CLASS1.SETVALUEZONE=85 (0x55)](./class1.setvaluezone.md) as a normalized value using only the default unit but with index/zone/subzone.\n\nAll of the above is also available as [LEVEL I events over Level II](./class2.protocol1.md).\n\nAll events in this class are mirrored in\n[CLASS2.MEASUREMENT_STR=1040 (0x410)](./class2.measurement_str.md) as the events, in the range 256-511, which use decimal string values.\n\nAll events in this class are mirrored in\n[CLASS2.MEASUREMENT_FLOAT=1060 (0x424)](./class2.measurement_float.md) as the events, in the range 256-511, which use decimal float values.\n\nThe relationship between Level II measurement events and Level I measurement events is like this\n\n  - [CLASS1.MEASUREMENT=10 (0x0A)](./class1.measurement.md) which is mirrored as Level II measurements 0-255.\n  - [CLASS1.MEASUREMENT=11 (0x0B)](./class1.measurementx1.md) which is mirrored as Level II measurements 256-511.\n  - [CLASS1.MEASUREMENT=12 (0x0C)](./class1.measurementx2.md) which is mirrored as Level II measurements 512-767.\n  - [CLASS1.MEASUREMENT=13 (0x0D)](./class1.measurementx3.md) which is mirrored as Level II measurements 768-1023.\n  - [CLASS1.MEASUREMENT=14 (0x0E)](./class1.measurementx3.md) which is mirrored as Level II measurements 1024-1279.\n\nLevel II measurement events with type >= 1280 have no relation to any Level I measurement events.\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (12,'Measurement','CLASS1.MEASUREMENTX2','## Description\n\nMeasurements are fetched from the [SI units and from SI derived units](https://en.wikipedia.org/wiki/International_System_of_Units). The SI unit (or the SI derived unit) is also used as the default unit. As in the SI unit standard, names for a unit is in lower case ("newton") and the unit ("N") is in upper case.\n\n**Byte 0** is the data coding byte for all measurement packages. The default unit has bits 0,1,2 set to 000 and the first optional unit 001 and so on. It also have a field for the item ( if more than one sensor is controlled by the node) that the value belongs to. See [data-coding](./vscp_data_coding.md) for a full description on data coding used.\n\nAll events in this class are mirrored in [CLASS1.MEASUREMENT32=70 (0x46)](./class1.measurement32.md_) as a single precision float. Default unit is used.\n\nAll events in this class are mirrored in [CLASS1.MEASUREMENT64=60 (0x3C)](./class1.measurement64.md) as floating point values using only the default unit .\n\nAll events in this class are mirrored in [CLASS1.MEASUREZONE=65 (0x41)](./class1.measurezone.md) as normalized integer values with index, zone, sub-zone. Default unit is used.\n\nAll events in this class are mirrored in [CLASS1.SETVALUEZONE=85 (0x55)](./class1.setvaluezone.md) as a normalized value using only the default unit but with index/zone/subzone.\n\nAll of the above is also available as [LEVEL I events over Level II](./class2.protocol1.md).\n\nAll events in this class are mirrored in\n[CLASS2.MEASUREMENT_STR=1040 (0x410)](./class2.measurement_str.md) as the events, in the range 512-767, which use decimal string values.\n\nAll events in this class are mirrored in\n[CLASS2.MEASUREMENT_FLOAT=1060 (0x424)](./class2.measurement_float.md) as the events, in the range 512-767, which use decimal float values.\n\nThe relationship between Level II measurement events and Level I measurement events is like this\n\n  - [CLASS1.MEASUREMENT=10 (0x0A)](./class1.measurement.md) which is mirrored as Level II measurements 0-255.\n  - [CLASS1.MEASUREMENT=11 (0x0B)](./class1.measurementx1.md) which is mirrored as Level II measurements 256-511.\n  - [CLASS1.MEASUREMENT=12 (0x0C)](./class1.measurementx2.md) which is mirrored as Level II measurements 512-767.\n  - [CLASS1.MEASUREMENT=13 (0x0D)](./class1.measurementx3.md) which is mirrored as Level II measurements 768-1023.\n  - [CLASS1.MEASUREMENT=14 (0x0E)](./class1.measurementx3.md) which is mirrored as Level II measurements 1024-1279.\n\nLevel II measurement events with type >= 1280 have no relation to any Level I measurement events.\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (13,'Measurement','CLASS1.MEASUREMENTX3','## Description\n\nMeasurements are fetched from the [SI units and from SI derived units](https://en.wikipedia.org/wiki/International_System_of_Units). The SI unit (or the SI derived unit) is also used as the default unit. As in the SI unit standard, names for a unit is in lower case ("newton") and the unit ("N") is in upper case.\n\n**Byte 0** is the data coding byte for all measurement packages. The default unit has bits 0,1,2 set to 000 and the first optional unit 001 and so on. It also have a field for the item ( if more than one sensor is controlled by the node) that the value belongs to. See [data-coding](./vscp_data_coding.md) for a full description on data coding used.\n\nAll events in this class are mirrored in [CLASS1.MEASUREMENT32=70 (0x46)](./class1.measurement32.md_) as a single precision float. Default unit is used.\n\nAll events in this class are mirrored in [CLASS1.MEASUREMENT64=60 (0x3C)](./class1.measurement64.md) as floating point values using only the default unit .\n\nAll events in this class are mirrored in [CLASS1.MEASUREZONE=65 (0x41)](./class1.measurezone.md) as normalized integer values with index, zone, sub-zone. Default unit is used.\n\nAll events in this class are mirrored in [CLASS1.SETVALUEZONE=85 (0x55)](./class1.setvaluezone.md) as a normalized value using only the default unit but with index/zone/subzone.\n\nAll of the above is also available as [LEVEL I events over Level II](./class2.protocol1.md).\n\nAll events in this class are mirrored in\n[CLASS2.MEASUREMENT_STR=1040 (0x410)](./class2.measurement_str.md) as the events, in the range 768-1023, which use decimal string values.\n\nAll events in this class are mirrored in\n[CLASS2.MEASUREMENT_FLOAT=1060 (0x424)](./class2.measurement_float.md) as the events, in the range 768-1023, which use decimal float values.\n\nThe relationship between Level II measurement events and Level I measurement events is like this\n\n  - [CLASS1.MEASUREMENT=10 (0x0A)](./class1.measurement.md) which is mirrored as Level II measurements 0-255.\n  - [CLASS1.MEASUREMENT=11 (0x0B)](./class1.measurementx1.md) which is mirrored as Level II measurements 256-511.\n  - [CLASS1.MEASUREMENT=12 (0x0C)](./class1.measurementx2.md) which is mirrored as Level II measurements 512-767.\n  - [CLASS1.MEASUREMENT=13 (0x0D)](./class1.measurementx3.md) which is mirrored as Level II measurements 768-1023.\n  - [CLASS1.MEASUREMENT=14 (0x0E)](./class1.measurementx3.md) which is mirrored as Level II measurements 1024-1279.\n\nLevel II measurement events with type >= 1280 have no relation to any Level I measurement events.\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (14,'Measurement','CLASS1.MEASUREMENTX4','## Description\n\nMeasurements are fetched from the [SI units and from SI derived units](https://en.wikipedia.org/wiki/International_System_of_Units). The SI unit (or the SI derived unit) is also used as the default unit. As in the SI unit standard, names for a unit is in lower case ("newton") and the unit ("N") is in upper case.\n\n**Byte 0** is the data coding byte for all measurement packages. The default unit has bits 0,1,2 set to 000 and the first optional unit 001 and so on. It also have a field for the item ( if more than one sensor is controlled by the node) that the value belongs to. See [data-coding](./vscp_data_coding.md) for a full description on data coding used.\n\nAll events in this class are mirrored in [CLASS1.MEASUREMENT32=70 (0x46)](./class1.measurement32.md_) as a single precision float. Default unit is used.\n\nAll events in this class are mirrored in [CLASS1.MEASUREMENT64=60 (0x3C)](./class1.measurement64.md) as floating point values using only the default unit .\n\nAll events in this class are mirrored in [CLASS1.MEASUREZONE=65 (0x41)](./class1.measurezone.md) as normalized integer values with index, zone, sub-zone. Default unit is used.\n\nAll events in this class are mirrored in [CLASS1.SETVALUEZONE=85 (0x55)](./class1.setvaluezone.md) as a normalized value using only the default unit but with index/zone/subzone.\n\nAll of the above is also available as [LEVEL I events over Level II](./class2.protocol1.md).\n\nAll events in this class are mirrored in\n[CLASS2.MEASUREMENT_STR=1040 (0x410)](./class2.measurement_str.md) as the events, in the range 1024-1279, which use decimal string values.\n\nAll events in this class are mirrored in\n[CLASS2.MEASUREMENT_FLOAT=1060 (0x424)](./class2.measurement_float.md) as the events, in the range 1024-1279, which use decimal float values.\n\nThe relationship between Level II measurement events and Level I measurement events is like this\n\n  - [CLASS1.MEASUREMENT=10 (0x0A)](./class1.measurement.md) which is mirrored as Level II measurements 0-255.\n  - [CLASS1.MEASUREMENT=11 (0x0B)](./class1.measurementx1.md) which is mirrored as Level II measurements 256-511.\n  - [CLASS1.MEASUREMENT=12 (0x0C)](./class1.measurementx2.md) which is mirrored as Level II measurements 512-767.\n  - [CLASS1.MEASUREMENT=13 (0x0D)](./class1.measurementx3.md) which is mirrored as Level II measurements 768-1023.\n  - [CLASS1.MEASUREMENT=14 (0x0E)](./class1.measurementx3.md) which is mirrored as Level II measurements 1024-1279.\n\nLevel II measurement events with type >= 1280 have no relation to any Level I measurement events.\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (15,'Data','CLASS1.DATA','## Description\n\nRepresentation for different general data types. **Byte 0** is the data coding byte described [here](./data_coding.md). Unit may not have meaning for some of the types and should be set to zero in that case.\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (20,'Information','CLASS1.INFORMATION','## Description\n\nMost of the events below have an index parameter that can be used to indicate which of several SECO (sensor/control) units on a node originated the event. Set to zero if the node only control one item. \n');
INSERT INTO vscp_class (class,name,token,description) VALUES (30,'Control','CLASS1.CONTROL','## Description\n\nControl functionality. One of the main concepts of VSCP is that it is an event driven protocol. Commands are sent out as events to the network not as events to specific devices. A device can belong to a zone which select limit events of interest for the particular node.. If there is a need to control a specific device the registry model should be used. This is the only way to directly control a device. \n');
INSERT INTO vscp_class (class,name,token,description) VALUES (40,'Multimedia','CLASS1.MULTIMEDIA','## Description\n\nDedicated class for multimedia functionality. This class was introduced to supplement the control class and to offer multimedia specific control events.\n\nThe Play/Pause/Stop etc. events in the CLASS1.CONTROL class can also be used for media control.\n\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (50,'Alert On LAN','CLASS1.AOL','## Description\n\nAOL Event. The main idea of AOL is to send warnings to remote administrators about different PC conditions using a LAN. Info here [https://en.wikipedia.org/wiki/Alert_on_LAN](https://en.wikipedia.org/wiki/Alert_on_LAN)\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (60,'Double precision floating point measurement','CLASS1.MEASUREMENT64','## Description\n\nFloating point double precision measurements. This class mirrors the standard measurement events is [CLASS1.MEASUREMENT=10](./class1.measurement.md). The measurement unit is always expressed in the standard unit.\n\nThe value is a "double"\t- IEEE-754, 64 Bits, double precision.\n\n    s eeeeeeeeeee mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm\n    s = sign bit ( 1-bit )\n    e = exponent ( 11-bits )\n    m = mantissa ( 52-bits )\n\n | Byte | Description                     |\n | ---- | -----------                     |\n | 0    | s e10 e9 e8 e7 e6 e5 e4         |\n | 1    | e3 e2 e1 e0 m51 m50 m49 m48     |\n | 2    | m47 m46 m45 m44 m43 m42 m41 m40 |\n | 3    | m39 m38 m37 m36 m35 m34 m33 m32 |\n | 4    | m31 m30 m29 m28 m27 m26 m25 m24 |\n | 5    | m23 m22 m21 m20 m19 m18 m17 m16 |\n | 6    | m15 m14 m13 m12 m11 m10 m9 m8   |\n | 7    | m7 m6 m5 m4 m3 m2 m1 m0         |\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (61,'Double precision floating point measurement','CLASS1.MEASUREMENT64X1','## Description\n\nFloating point double precision measurements. This class mirrors the standard measurement events is [CLASS1.MEASUREMENT=11](./class1.measurementx1.md). The measurement unit is always expressed in the standard unit.\n\nThe value is a "double"\t- IEEE-754, 64 Bits, double precision.\n\n    s eeeeeeeeeee mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm\n    s = sign bit ( 1-bit )\n    e = exponent ( 11-bits )\n    m = mantissa ( 52-bits )\n\n | Byte | Description                     |\n | ---- | -----------                     |\n | 0    | s e10 e9 e8 e7 e6 e5 e4         |\n | 1    | e3 e2 e1 e0 m51 m50 m49 m48     |\n | 2    | m47 m46 m45 m44 m43 m42 m41 m40 |\n | 3    | m39 m38 m37 m36 m35 m34 m33 m32 |\n | 4    | m31 m30 m29 m28 m27 m26 m25 m24 |\n | 5    | m23 m22 m21 m20 m19 m18 m17 m16 |\n | 6    | m15 m14 m13 m12 m11 m10 m9 m8   |\n | 7    | m7 m6 m5 m4 m3 m2 m1 m0         |\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (62,'Double precision floating point measurement','CLASS1.MEASUREMENT64X2','## Description\n\nFloating point double precision measurements. This class mirrors the standard measurement events is [CLASS1.MEASUREMENT=12](./class1.measurementx2.md). The measurement unit is always expressed in the standard unit.\n\nThe value is a "double"\t- IEEE-754, 64 Bits, double precision.\n\n    s eeeeeeeeeee mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm\n    s = sign bit ( 1-bit )\n    e = exponent ( 11-bits )\n    m = mantissa ( 52-bits )\n\n | Byte | Description                     |\n | ---- | -----------                     |\n | 0    | s e10 e9 e8 e7 e6 e5 e4         |\n | 1    | e3 e2 e1 e0 m51 m50 m49 m48     |\n | 2    | m47 m46 m45 m44 m43 m42 m41 m40 |\n | 3    | m39 m38 m37 m36 m35 m34 m33 m32 |\n | 4    | m31 m30 m29 m28 m27 m26 m25 m24 |\n | 5    | m23 m22 m21 m20 m19 m18 m17 m16 |\n | 6    | m15 m14 m13 m12 m11 m10 m9 m8   |\n | 7    | m7 m6 m5 m4 m3 m2 m1 m0         |\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (63,'Double precision floating point measurement','CLASS1.MEASUREMENT64X3','## Description\n\nFloating point double precision measurements. This class mirrors the standard measurement events is [CLASS1.MEASUREMENT=13](./class1.measurementx3.md). The measurement unit is always expressed in the standard unit.\n\nThe value is a "double"\t- IEEE-754, 64 Bits, double precision.\n\n    s eeeeeeeeeee mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm\n    s = sign bit ( 1-bit )\n    e = exponent ( 11-bits )\n    m = mantissa ( 52-bits )\n\n | Byte | Description                     |\n | ---- | -----------                     |\n | 0    | s e10 e9 e8 e7 e6 e5 e4         |\n | 1    | e3 e2 e1 e0 m51 m50 m49 m48     |\n | 2    | m47 m46 m45 m44 m43 m42 m41 m40 |\n | 3    | m39 m38 m37 m36 m35 m34 m33 m32 |\n | 4    | m31 m30 m29 m28 m27 m26 m25 m24 |\n | 5    | m23 m22 m21 m20 m19 m18 m17 m16 |\n | 6    | m15 m14 m13 m12 m11 m10 m9 m8   |\n | 7    | m7 m6 m5 m4 m3 m2 m1 m0         |\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (64,'Double precision floating point measurement','CLASS1.MEASUREMENT64X4','## Description\n\nFloating point double precision measurements. This class mirrors the standard measurement events is [CLASS1.MEASUREMENT=14](./class1.measurementx4.md). The measurement unit is always expressed in the standard unit.\n\nThe value is a "double"\t- IEEE-754, 64 Bits, double precision.\n\n    s eeeeeeeeeee mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm\n    s = sign bit ( 1-bit )\n    e = exponent ( 11-bits )\n    m = mantissa ( 52-bits )\n\n | Byte | Description                     |\n | ---- | -----------                     |\n | 0    | s e10 e9 e8 e7 e6 e5 e4         |\n | 1    | e3 e2 e1 e0 m51 m50 m49 m48     |\n | 2    | m47 m46 m45 m44 m43 m42 m41 m40 |\n | 3    | m39 m38 m37 m36 m35 m34 m33 m32 |\n | 4    | m31 m30 m29 m28 m27 m26 m25 m24 |\n | 5    | m23 m22 m21 m20 m19 m18 m17 m16 |\n | 6    | m15 m14 m13 m12 m11 m10 m9 m8   |\n | 7    | m7 m6 m5 m4 m3 m2 m1 m0         |\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (65,'Measurement with zone','CLASS1.MEASUREZONE','## Description\n\nMeasurements with zone information. This class mirrors the standard measurement events is [CLASS1.MEASUREMENT=10](./class1.measurement.md) with the difference that index, zone, and sub-zone is added. This in turn limits the data-coding options to normalized integer (see [Data-coding](./data_coding.md) for a description). The default unit for the measurement should always be used.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index for device (This is NOT the same as senorindex is in data coding byte). | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n | 3    | Data coding.                                                       | \n | 4-7  | Data with format defined by byte 0.                                | \n\n\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (66,'Measurement with zone','CLASS1.MEASUREZONEX1','## Description\n\nMeasurements with zone information. This class mirrors the standard measurement events is [CLASS1.MEASUREMENT=11](./class1.measurementx1.md) with the difference that index, zone, and sub-zone is added. This in turn limits the data-coding options to normalized integer (see [Data-coding](./data_coding.md) for a description). The default unit for the measurement should always be used.\n\n | Byte | Description                                                        |\n | :----: | -----------                                                        |\n | 0    | Index for sensor.                                                  |\n | 1    | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |\n | 3    | Data coding.                                                       |\n | 4-7  | Data with format defined by byte 0.                                |\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (67,'Measurement with zone','CLASS1.MEASUREZONEX2','## Description\n\nMeasurements with zone information. This class mirrors the standard measurement events is [CLASS1.MEASUREMENT=12](./class1.measurementx2.md) with the difference that index, zone, and sub-zone is added. This in turn limits the data-coding options to normalized integer (see [Data-coding](./data_coding.md) for a description). The default unit for the measurement should always be used.\n\n | Byte | Description                                                        |\n | :----: | -----------                                                        |\n | 0    | Index for sensor.                                                  |\n | 1    | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |\n | 3    | Data coding.                                                       |\n | 4-7  | Data with format defined by byte 0.                                |\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (68,'Measurement with zone','CLASS1.MEASUREZONEX3','## Description\n\nMeasurements with zone information. This class mirrors the standard measurement events is [CLASS1.MEASUREMENT=13](./class1.measurementx3.md) with the difference that index, zone, and sub-zone is added. This in turn limits the data-coding options to normalized integer (see [Data-coding](./data_coding.md) for a description). The default unit for the measurement should always be used.\n\n | Byte | Description                                                        |\n | :----: | -----------                                                        |\n | 0    | Index for sensor.                                                  |\n | 1    | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |\n | 3    | Data coding.                                                       |\n | 4-7  | Data with format defined by byte 0.                                |\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (69,'Measurement with zone','CLASS1.MEASUREZONEX4','## Description\n\nMeasurements with zone information. This class mirrors the standard measurement events is [CLASS1.MEASUREMENT=14](./class1.measurementx4.md) with the difference that index, zone, and sub-zone is added. This in turn limits the data-coding options to normalized integer (see [Data-coding](./data_coding.md) for a description). The default unit for the measurement should always be used.\n\n | Byte | Description                                                        |\n | :----: | -----------                                                        |\n | 0    | Index for sensor.                                                  |\n | 1    | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |\n | 3    | Data coding.                                                       |\n | 4-7  | Data with format defined by byte 0.                                |\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (70,'Single precision floating point measurement','CLASS1.MEASUREMENT32','## Description\n\nFloating point single precision measurements. This class mirrors the standard measurement events is [CLASS1.MEASUREMENT=10](./class1.measurement.md). The measurement unit is always the standard unit. \n\nThe value is a "float"\t- IEEE-754, 32 Bits, single precision. \n\n    s eeeeeeeeeee mmmmmmmmmmmmmmmmmmmmmmm\n    s = sign bit ( 1-bit )\n    e = exponent ( 8-bits )\n    m = mantissa ( 23-bits )\n\nThat is a total of 32-bits. The most significant byte is stored in byte 0.\n\n | Byte | Description                    | \n | ---- | -----------                    | \n | 0    | s e7 e6 e5 e4 e3 e2 e1         | \n | 1    | e0 m22 m21 m20 m19 m18 m17 m16 | \n | 2    | m15 m14 m13 m12 m11 m19 m9 m8  | \n | 3    | m7 m6 m5 m4 m3 m2 m1 m0        | \n');
INSERT INTO vscp_class (class,name,token,description) VALUES (71,'Single precision floating point measurement','CLASS1.MEASUREMENT32X1','## Description\n\nFloating point single precision measurements. This class mirrors the standard measurement events is [CLASS1.MEASUREMENT=11](./class1.measurementx1.md). The measurement unit is always the standard unit.\n\nThe value is a "float"\t- IEEE-754, 32 Bits, single precision.\n\n    s eeeeeeeeeee mmmmmmmmmmmmmmmmmmmmmmm\n    s = sign bit ( 1-bit )\n    e = exponent ( 8-bits )\n    m = mantissa ( 23-bits )\n\nThat is a total of 32-bits. The most significant byte is stored in byte 0.\n\n | Byte | Description                    |\n | ---- | -----------                    |\n | 0    | s e7 e6 e5 e4 e3 e2 e1         |\n | 1    | e0 m22 m21 m20 m19 m18 m17 m16 |\n | 2    | m15 m14 m13 m12 m11 m19 m9 m8  |\n | 3    | m7 m6 m5 m4 m3 m2 m1 m0        |\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (72,'Single precision floating point measurement','CLASS1.MEASUREMENT32X2','## Description\n\nFloating point single precision measurements. This class mirrors the standard measurement events is [CLASS1.MEASUREMENT=12](./class1.measurementx2.md). The measurement unit is always the standard unit.\n\nThe value is a "float"\t- IEEE-754, 32 Bits, single precision.\n\n    s eeeeeeeeeee mmmmmmmmmmmmmmmmmmmmmmm\n    s = sign bit ( 1-bit )\n    e = exponent ( 8-bits )\n    m = mantissa ( 23-bits )\n\nThat is a total of 32-bits. The most significant byte is stored in byte 0.\n\n | Byte | Description                    |\n | ---- | -----------                    |\n | 0    | s e7 e6 e5 e4 e3 e2 e1         |\n | 1    | e0 m22 m21 m20 m19 m18 m17 m16 |\n | 2    | m15 m14 m13 m12 m11 m19 m9 m8  |\n | 3    | m7 m6 m5 m4 m3 m2 m1 m0        |\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (73,'Single precision floating point measurement','CLASS1.MEASUREMENT32X3','## Description\n\nFloating point single precision measurements. This class mirrors the standard measurement events is [CLASS1.MEASUREMENT=13](./class1.measurementx3.md). The measurement unit is always the standard unit.\n\nThe value is a "float"\t- IEEE-754, 32 Bits, single precision.\n\n    s eeeeeeeeeee mmmmmmmmmmmmmmmmmmmmmmm\n    s = sign bit ( 1-bit )\n    e = exponent ( 8-bits )\n    m = mantissa ( 23-bits )\n\nThat is a total of 32-bits. The most significant byte is stored in byte 0.\n\n | Byte | Description                    |\n | ---- | -----------                    |\n | 0    | s e7 e6 e5 e4 e3 e2 e1         |\n | 1    | e0 m22 m21 m20 m19 m18 m17 m16 |\n | 2    | m15 m14 m13 m12 m11 m19 m9 m8  |\n | 3    | m7 m6 m5 m4 m3 m2 m1 m0        |\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (74,'Single precision floating point measurement','CLASS1.MEASUREMENT32X4','## Description\n\nFloating point single precision measurements. This class mirrors the standard measurement events is [CLASS1.MEASUREMENT=14](./class1.measurementx4.md). The measurement unit is always the standard unit.\n\nThe value is a "float"\t- IEEE-754, 32 Bits, single precision.\n\n    s eeeeeeeeeee mmmmmmmmmmmmmmmmmmmmmmm\n    s = sign bit ( 1-bit )\n    e = exponent ( 8-bits )\n    m = mantissa ( 23-bits )\n\nThat is a total of 32-bits. The most significant byte is stored in byte 0.\n\n | Byte | Description                    |\n | ---- | -----------                    |\n | 0    | s e7 e6 e5 e4 e3 e2 e1         |\n | 1    | e0 m22 m21 m20 m19 m18 m17 m16 |\n | 2    | m15 m14 m13 m12 m11 m19 m9 m8  |\n | 3    | m7 m6 m5 m4 m3 m2 m1 m0        |\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (85,'Set value with zone','CLASS1.SETVALUEZONE','## Description\n\nThis class mirrors the standard measurement events is [CLASS1.MEASUREMENT=10](./class1.measurement.md) but also have zone information and is intended for setting a value instead of providing a measurement.\n\nThis class can for example be used to set setpoints on a node. If 256 set points is enough (!!!) use index to identify the setpoint. If more is needed use subzone as a page into this storage and make this configurable on the node.\n\nFor large integers and strings several events may need to be used to set a single value.\n\n | Byte | Description                                                        |\n | ---- | -----------                                                        |\n | 0    | Index for device (This is NOT the same as senorindex is in data coding byte). |\n | 1    | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |\n | 3    | Data coding.                                                       |\n | 4-7  | Data with format defined by byte 0.                                |\n \n');
INSERT INTO vscp_class (class,name,token,description) VALUES (86,'Set value with zone','CLASS1.SETVALUEZONEX1','## Description\n\nThis class mirrors the standard measurement events is [CLASS1.MEASUREMENT=11](./class1.measurementx1.md) but also have zone information and is intended for setting a value instead of providing a measurement.\n\n | Byte | Description                                                        |\n | ---- | -----------                                                        |\n | 0    | Index for sensor.                                                  |\n | 1    | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |\n | 3    | Data coding.                                                       |\n | 4-7  | Data with format defined by byte 0.                                |\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (87,'Set value with zone','CLASS1.SETVALUEZONEX2','## Description\n\nThis class mirrors the standard measurement events is [CLASS1.MEASUREMENT=12](./class1.measurementx2.md) but also have zone information and is intended for setting a value instead of providing a measurement.\n\n | Byte | Description                                                        |\n | ---- | -----------                                                        |\n | 0    | Index for sensor.                                                  |\n | 1    | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |\n | 3    | Data coding.                                                       |\n | 4-7  | Data with format defined by byte 0.                                |\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (88,'Set value with zone','CLASS1.SETVALUEZONEX3','## Description\n\nThis class mirrors the standard measurement events is [CLASS1.MEASUREMENT=13](./class1.measurementx3.md) but also have zone information and is intended for setting a value instead of providing a measurement.\n\n | Byte | Description                                                        |\n | ---- | -----------                                                        |\n | 0    | Index for sensor.                                                  |\n | 1    | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |\n | 3    | Data coding.                                                       |\n | 4-7  | Data with format defined by byte 0.                                |\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (89,'Set value with zone','CLASS1.SETVALUEZONEX4','## Description\n\nThis class mirrors the standard measurement events is [CLASS1.MEASUREMENT=14](./class1.measurement.md) but also have zone information and is intended for setting a value instead of providing a measurement.\n\n | Byte | Description                                                        |\n | ---- | -----------                                                        |\n | 0    | Index for sensor.                                                  |\n | 1    | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |\n | 3    | Data coding.                                                       |\n | 4-7  | Data with format defined by byte 0.                                |\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (90,'Weather','CLASS1.WEATHER','## Description\n\nFuzzy values for weather indications. Intended for warning and information signs.\n\nWeather reporting. Used to report current weather conditions. \n');
INSERT INTO vscp_class (class,name,token,description) VALUES (95,'Weather forecast','CLASS1.WEATHER_FORECAST','## Description\n\nWeather reporting forecast. The class have the same types as [CLASS1.WEATHER](./class1.weather.md)\n\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (100,'Phone','CLASS1.PHONE','## Description\n\nThis class is for phone related functionality. \n');
INSERT INTO vscp_class (class,name,token,description) VALUES (102,'Display','CLASS1.DISPLAY','## Description\n\nThis is generic display related functionality. Show info on a screen, LED-display diode, etc.\n\nThe [CAN4VSCP New York module](https://www.grodansparadis.com) is an example on the how this can be implemented in a module. \n\n##### Escape sequences\n\nAn escape sequence is preceded with a %. As a result to display **”%”** instead **"%%"** should be used.\n\nThe first character after the % is the escape-type. This character is case sensitive. That is “e” is not the same as “E”. \n\n##### Escape character Description\n\n | Escape type | Decription | \n | :-----------: | ---------- | \n | **$**       | Zero terminated string | \n | **!**       | Boolean value | \n | **b**       | signed char | \n | **B**       | unsigned char | \n | **s**       | signed short | \n | **S**       | unsigned short | \n | **i**       | signed int | \n | **I**       | unsigned int | \n | **l**       | signed long | \n | **L**       | unsigned long | \n | **f**       | floating point decimal | \n | **d**       | date format | \n | **t**       | time | \n | **n**       | normalized integer | \n | **p**       | **Parameter data:** Display parameter escapes. The format is <br>**%p001**<br> where “001” is the ID that identifies the parameter. This escape is used for hard parameters displayed by the display maker. Se Type=6 below. | \n | **e**       | **Event data:** Event data escapes. The format is <br>**%eclass,type,r**<br> where class and type tells which event is of interest and r have the same format as the r escape | \n\nThe above is just a recommendation. Anyone can of course use any format they like.');
INSERT INTO vscp_class (class,name,token,description) VALUES (110,'IR Remote I/f','CLASS1.IR','## Description\n\nThis is the IR code sent/received from common remote controls. \n');
INSERT INTO vscp_class (class,name,token,description) VALUES (120,'Configure','CLASS1.CONFIGURE','## Description\n\nEvents for configuration of sets and parameters on nodes without register manipulation.\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (206,'Position (GNSS)','CLASS1.GNSS','## Description\n\nControl and interface for the global navigation satellite system (GNSS) (for example GPS) protocols (NMEA, SIRF etc)to VSCP\n\n\n*  For Angle use CLASS1.MEASUREMENT, Type = 30 (0x1E) Angle \n\n*  For Altitude use CLASS1.MEASUREMENT, Type = 51 (0x33) Altitude. \n\n*  For Speed use CLASS1.MEASUREMENT, Type = 32 (0x20) Speed \n\n*  For Signal Quality use CLASS1.DATA, Type = 5 (0x05) Signal Quality \n\n*  For Time-stamp use CLASS1.MEASUREMENT, Type = 4 (0x04) Time\n\nTypically one NMEA, SIRF etc frame with information needs to be translated to many VSCP events. It is possible to group the events together with\n\n\n*  CLASS1.INFORMATION, Type=46 (0x2E) Start of record \n\n*  CLASS1.INFORMATION, Type=47 (0x2F) End of record\n\nif preferred to hold the events together. ');
INSERT INTO vscp_class (class,name,token,description) VALUES (212,'Wireless','CLASS1.WIRELESS','## Description\n\nThis class of events is used for wireless equipment such as cellular phones etc.\n\n\n*  For IMEI code use CLASS1.INFORMATION, Type = 37 (0x25) Token Activity.\n*  For IMSI code use CLASS1.INFORMATION, Type = 37 (0x25) Token Activity .\n*  For Signal Quality use CLASS1.DATA, Type = 5 (0x05) Signal Quality\n*  For Time-stamp use CLASS1.MEASUREMENT, Type = 4 (0x04) Time\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (506,'Diagnostic','CLASS1.DIAGNOSTIC','## Description\n\nDiagnostic functionality. \n\nThe diagnostic events can be used to report malfunctions and errors. \n');
INSERT INTO vscp_class (class,name,token,description) VALUES (508,'Error','CLASS1.ERROR','## Description\n\nError reporting functionality that follow the errors defined in the [vscp.h](https://github.com/grodansparadis/vscp_software/blob/master/src/vscp/common/vscp.h) header file.\n\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (509,'Logging','CLASS1.LOG','## Description\n\nLogging functionality. \n\nThe log can be used by a device to send logging information to a central or distributed place. To use this functionality\n\n\n*  Open a log channel with a specific id.\n\n*  Send logging events.\n\n*  Close when no more logging events will be sent on that channel.\n\nThe logging message can be a maximum of five byte for each event. If you need more space for logging data, send multiple log events and increase the index (starting at zero) for each event that is part of the logging message. Repeating this process next time you need to send logging data by again starting at index 0 and increasing for every part sent. \n\nThe id is something you set that have meaning for you. Typically it can be used as an index for a channel you send log messages on in a system where several subsystems needs to be logged and which log info need to be separated. \n\nRemember that the receiving side also have the originating id (GUID) as an identification from where a logging event originates.\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (510,'Laboratory use','CLASS1.LABORATORY','## Description\n\nThis class is intended for lab usage. No production device should use this event type. \n');
INSERT INTO vscp_class (class,name,token,description) VALUES (511,'Local use','CLASS1.LOCAL','## Description\n\nThis event type is for local defined events. It is thus possible to add user defined events here. In a public environment the risk for collisions with other devices that also use CLASS.LOCAL should be noted. It is good to make user events configurable in the device to give users a chance to avoid problems.\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (512,'Class2 Level I Protocol','CLASS2.LEVEL1.PROTOCOL','## Description\n\nThis class mirrors the [CLASS1.PROTOCOL](./class1.protocol.md) class but use a different data format.\n\nClass 512-1023 is reserved for events that should stay in the Level 2 network but that in all other aspects (the lower nine bits + type) are defined in the same manner as for Level I. For [CLASS2.PROTOCOL1](./class1.protocol.md) the first 16 bytes of the data field is the GUID of the node the event is intended for. \n\nThis is used for translation in the VSCP daemon for instance where a level II client can send events that are automatically sent to the correct interface and is addressed to the correct device in question. To use this feature send events with the GUID of the i/f where the device is located when addressing is needed. The correct nickname is needed and it should be set in GUID byte 16.\n\nAn event with a class >= 512 but < 1024 will be sent to all Level II clients and to the correct i/f (the one that have the addressed GUID). A response form the device will go out as as a Level II event using the GUID of the interface but class will always have a value < 512 for a response event just as all events originating from a device. If you send 512-events with an external node as destination GUID (which is not the GUID of an interface) the event will be put through all interfaces.\n\nNote that the LSB of an interface GUID is always the nickname-ID for a device interface. \n\n###  Some Examples \n\n#### Type = 6 (0x06) Set nickname-ID for node.\n\nTo set a new nickname for a node send the following event\n\n    Class=512, Level I Protocol, Type=6 (0x06)  \n    Set nickname-ID for node. \n\n | Byte | Description | \n | :----: | ----------- | \n | 0-15 | GUID for Interface where node is located. | \n | 16   | Old nickname for node. | \n | 17   | The nickname for the node. | \n\nResponse is\n\n    Class=0, Level I Protocol, Type=7 (0x07) \n    Nickname-ID accepted. \n    \nNo data bytes\n\nNote the the LSB of the GUID contains the nickname is in both cases but that this is of no use when the event is sent but should be used to verify that the correct node answered when the response is received.\n\n#### Type = 9 (0x09) Read register.\n\nTo read a register of a node send the following event\n\n    Class=512, Level I Protocol, Type=9 (0x09) \n    Read register. \n\n | Byte | Description | \n | :----: | ----------- | \n | 0-15 | GUID for Interface where node is located. LSB is nickname for node. | \n | 16   | Nickname for node. | \n | 17   | Register to read. | \n\nResponse is\n\n    Class=0, Level I Protocol, Type=10 (0x0A) \n    Read/Write response.\n\n | Byte | Description | \n | :----: | ----------- | \n | 0    | Register read/written. | \n | 1    | Content of register.   | \n\n\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (513,'Class2 Level I Alarm','CLASS2.LEVEL1.ALARM','## Description\n\nThis class mirrors the [CLASS1.ALARM](./class1.alarm.md) class but use a different data format with a GUID stored in the first 16 bytes of the data followed by the standard data thus offset with 16-bytes.\n\nSee [CLASS2.PROTOCOL1](./class2.protocol1.md) for more information on the data format.\n\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (514,'Class2 Level I Security','CLASS2.LEVEL1.SECURITY','## Description\n\nThis class mirrors the [CLASS1.SECURITY](./class1.security.md) class but use a different data format with a GUID stored in the first 16 bytes of the data followed by the standard data thus offset with 16-bytes.\n\nSee [CLASS2.PROTOCOL1](./class2.protocol1.md) for more information on the data format.');
INSERT INTO vscp_class (class,name,token,description) VALUES (522,'Class2 Level I Measurements','CLASS2.LEVEL1.MEASUREMENT','## Description\n\nThis class mirrors the [CLASS1.MEASUREMENT](./class1.measurement.md) class but use a different data format with a GUID stored in the first 16 bytes of the data followed by the standard data thus offset with 16-bytes.\n\nSee [CLASS1.MEASUREMENT](./class1.measurement.md) for more information on the data format.');
INSERT INTO vscp_class (class,name,token,description) VALUES (523,'Class2 Level I Measurements','CLASS2.LEVEL1.MEASUREMENTX1','## Description\n\nThis class mirrors the [CLASS1.MEASUREMENTX1](./class1.measurementx1.md) class but use a different data format with a GUID stored in the first 16 bytes of the data followed by the standard data thus offset with 16-bytes.\n\nSee [CLASS1.MEASUREMENT](./class1.measurement.md) for more information on the data format.');
INSERT INTO vscp_class (class,name,token,description) VALUES (524,'Class2 Level I Measurements','CLASS2.LEVEL1.MEASUREMENTX2','## Description\n\nThis class mirrors the [CLASS1.MEASUREMENTX2](./class1.measurementx2.md) class but use a different data format with a GUID stored in the first 16 bytes of the data followed by the standard data thus offset with 16-bytes.\n\nSee [CLASS1.MEASUREMENT](./class1.measurement.md) for more information on the data format.');
INSERT INTO vscp_class (class,name,token,description) VALUES (525,'Class2 Level I Measurements','CLASS2.LEVEL1.MEASUREMENTX3','## Description\n\nThis class mirrors the [CLASS1.MEASUREMENTX3](./class1.measurementx3.md) class but use a different data format with a GUID stored in the first 16 bytes of the data followed by the standard data thus offset with 16-bytes.\n\nSee [CLASS1.MEASUREMENT](./class1.measurement.md) for more information on the data format.');
INSERT INTO vscp_class (class,name,token,description) VALUES (526,'Class2 Level I Measurements','CLASS2.LEVEL1.MEASUREMENTX4','## Description\n\nThis class mirrors the [CLASS1.MEASUREMENTX4](./class1.measurementx4.md) class but use a different data format with a GUID stored in the first 16 bytes of the data followed by the standard data thus offset with 16-bytes.\n\nSee [CLASS1.MEASUREMENT](./class1.measurement.md) for more information on the data format.');
INSERT INTO vscp_class (class,name,token,description) VALUES (527,'Class2 Level I Data','CLASS2.LEVEL1.DATA','## Description\n\nThis class mirrors the [CLASS1.DATA](./class1.data.md) class but use a different data format with a GUID stored in the first 16 bytes of the data followed by the standard data thus offset with 16-bytes.\n\nSee [CLASS2.PROTOCOL1](./class2.protocol1.md) for more information on the data format.');
INSERT INTO vscp_class (class,name,token,description) VALUES (532,'Class2 Level I Information','CLASS2.LEVEL1.INFORMATION1','## Description\n\nThis class mirrors the [CLASS1.INFORMATION](./class1.information.md) class but use a different data format with a GUID stored in the first 16 bytes of the data followed by the standard data thus offset with 16-bytes.\n\nSee [CLASS2.PROTOCOL1](./class2.protocol1.md) for more information on the data format.');
INSERT INTO vscp_class (class,name,token,description) VALUES (542,'Class2 Level I Control','CLASS2.LEVEL1.CONTROL','## Description\n\nThis class mirrors the [CLASS1.CONTROL](./class1.control.md) class but use a different data format with a GUID stored in the first 16 bytes of the data followed by the standard data thus offset with 16-bytes.\n\nSee [CLASS2.PROTOCOL1](./class2.protocol1.md) for more information on the data format.');
INSERT INTO vscp_class (class,name,token,description) VALUES (552,'Class2 Level I Multimedia','CLASS2.LEVEL1.MULTIMEDIA','## Description\n\nThis class mirrors the [CLASS1.MULTIMEDIA](./class1.multimedia.md) class but use a different data format with a GUID stored in the first 16 bytes of the data followed by the standard data thus offset with 16-bytes.\n\nSee [CLASS2.PROTOCOL1](./class2.protocol1.md) for more information on the data format.');
INSERT INTO vscp_class (class,name,token,description) VALUES (562,'Class2 Level I AOL','CLASS2.LEVEL1.AOL','## Description\n\nThis class mirrors the [CLASS1.AOL](./class1.aol.md) class but use a different data format with a GUID stored in the first 16 bytes of the data followed by the standard data thus offset with 16-bytes.\n\nSee [CLASS2.PROTOCOL1](./class2.protocol1.md) for more information on the data format.');
INSERT INTO vscp_class (class,name,token,description) VALUES (572,'Class2 Level I Measurement64','CLASS2.LEVEL1.MEASUREMENT64','## Description\n\nThis class mirrors the [CLASS1.MEASUREMENT64](./class1.measurement64.md) class but use a different data format with a GUID stored in the first 16 bytes of the data followed by the standard data thus offset with 16-bytes.\n\nSee [CLASS2.PROTOCOL1](./class2.protocol1.md) for more information on the data format.\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (573,'Class2 Level I Measurement64','CLASS2.LEVEL1.MEASUREMENT64X1','## Description\n\nThis class mirrors the [CLASS1.MEASUREMENT64X1](./class1.measurement64.md) class but use a different data format with a GUID stored in the first 16 bytes of the data followed by the standard data thus offset with 16-bytes.\n\nSee [CLASS2.PROTOCOL1](./class2.protocol1.md) for more information on the data format.\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (574,'Class2 Level I Measurement64','CLASS2.LEVEL1.MEASUREMENT64X2','## Description\n\nThis class mirrors the [CLASS1.MEASUREMENT64X2](./class1.measurement64.md) class but use a different data format with a GUID stored in the first 16 bytes of the data followed by the standard data thus offset with 16-bytes.\n\nSee [CLASS2.PROTOCOL1](./class2.protocol1.md) for more information on the data format.\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (575,'Class2 Level I Measurement64','CLASS2.LEVEL1.MEASUREMENT64X3','## Description\n\nThis class mirrors the [CLASS1.MEASUREMENT64X3](./class1.measurement64.md) class but use a different data format with a GUID stored in the first 16 bytes of the data followed by the standard data thus offset with 16-bytes.\n\nSee [CLASS2.PROTOCOL1](./class2.protocol1.md) for more information on the data format.\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (576,'Class2 Level I Measurement64','CLASS2.LEVEL1.MEASUREMENT64X4','## Description\n\nThis class mirrors the [CLASS1.MEASUREMENT64X4](./class1.measurement64.md) class but use a different data format with a GUID stored in the first 16 bytes of the data followed by the standard data thus offset with 16-bytes.\n\nSee [CLASS2.PROTOCOL1](./class2.protocol1.md) for more information on the data format.\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (577,'Class2 Level I Measurementzone','CLASS2.LEVEL1.MEASUREZONE','## Description\n\nThis class mirrors the [CLASS1.MEASUREZONE](./class1.measurezone.md) class but use a different data format with a GUID stored in the first 16 bytes of the data followed by the standard data thus offset with 16-bytes.\n\nSee [CLASS2.PROTOCOL1](./class2.protocol1.md) for more information on the data format.\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (578,'Class2 Level I Measurementzone','CLASS2.LEVEL1.MEASUREZONEX1','## Description\n\nThis class mirrors the [CLASS1.MEASUREZONEX1](./class1.measurezone.md) class but use a different data format with a GUID stored in the first 16 bytes of the data followed by the standard data thus offset with 16-bytes.\n\nSee [CLASS2.PROTOCOL1](./class2.protocol1.md) for more information on the data format.\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (579,'Class2 Level I Measurementzone','CLASS2.LEVEL1.MEASUREZONEX2','## Description\n\nThis class mirrors the [CLASS1.MEASUREZONEX2](./class1.measurezone.md) class but use a different data format with a GUID stored in the first 16 bytes of the data followed by the standard data thus offset with 16-bytes.\n\nSee [CLASS2.PROTOCOL1](./class2.protocol1.md) for more information on the data format.\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (580,'Class2 Level I Measurementzone','CLASS2.LEVEL1.MEASUREZONEX3','## Description\n\nThis class mirrors the [CLASS1.MEASUREZONEX3](./class1.measurezone.md) class but use a different data format with a GUID stored in the first 16 bytes of the data followed by the standard data thus offset with 16-bytes.\n\nSee [CLASS2.PROTOCOL1](./class2.protocol1.md) for more information on the data format.\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (581,'Class2 Level I Measurementzone','CLASS2.LEVEL1.MEASUREZONEX4','## Description\n\nThis class mirrors the [CLASS1.MEASUREZONEX4](./class1.measurezone.md) class but use a different data format with a GUID stored in the first 16 bytes of the data followed by the standard data thus offset with 16-bytes.\n\nSee [CLASS2.PROTOCOL1](./class2.protocol1.md) for more information on the data format.\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (582,'Class2 Level I Measuremet32','CLASS2.LEVEL1.MEASUREMENT32','## Description\n\nThis class mirrors the [CLASS1.MEASUREMENT32](./class1.measurement32.md) class but use a different data format with a GUID stored in the first 16 bytes of the data followed by the standard data thus offset with 16-bytes.\n\nSee [CLASS2.PROTOCOL1](./class2.protocol1.md) for more information on the data format.\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (583,'Class2 Level I Measuremet32','CLASS2.LEVEL1.MEASUREMENT32X1','## Description\n\nThis class mirrors the [CLASS1.MEASUREMENT32X1](./class1.measurement32.md) class but use a different data format with a GUID stored in the first 16 bytes of the data followed by the standard data thus offset with 16-bytes.\n\nSee [CLASS2.PROTOCOL1](./class2.protocol1.md) for more information on the data format.\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (584,'Class2 Level I Measuremet32','CLASS2.LEVEL1.MEASUREMENT32X2','## Description\n\nThis class mirrors the [CLASS1.MEASUREMENT32X2](./class1.measurement32.md) class but use a different data format with a GUID stored in the first 16 bytes of the data followed by the standard data thus offset with 16-bytes.\n\nSee [CLASS2.PROTOCOL1](./class2.protocol1.md) for more information on the data format.\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (585,'Class2 Level I Measuremet32','CLASS2.LEVEL1.MEASUREMENT32X3','## Description\n\nThis class mirrors the [CLASS1.MEASUREMENT32X3](./class1.measurement32.md) class but use a different data format with a GUID stored in the first 16 bytes of the data followed by the standard data thus offset with 16-bytes.\n\nSee [CLASS2.PROTOCOL1](./class2.protocol1.md) for more information on the data format.\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (586,'Class2 Level I Measuremet32','CLASS2.LEVEL1.MEASUREMENT32X4','## Description\n\nThis class mirrors the [CLASS1.MEASUREMENT32X4](./class1.measurement32.md) class but use a different data format with a GUID stored in the first 16 bytes of the data followed by the standard data thus offset with 16-bytes.\n\nSee [CLASS2.PROTOCOL1](./class2.protocol1.md) for more information on the data format.\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (597,'Class2 Level I SetValueZone','CLASS2.LEVEL1.SETVALUEZONE','## Description\n\nThis class mirrors the [CLASS1.SETVALUEZONE](./class1.setvaluezone.md) class but use a different data format with a GUID stored in the first 16 bytes of the data followed by the standard data thus offset with 16-bytes.\n\nSee [CLASS2.PROTOCOL1](./class2.protocol1.md) for more information on the data format.\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (598,'Class2 Level I SetValueZone','CLASS2.LEVEL1.SETVALUEZONEX1','## Description\n\nThis class mirrors the [CLASS1.SETVALUEZONEX1](./class1.setvaluezone.md) class but use a different data format with a GUID stored in the first 16 bytes of the data followed by the standard data thus offset with 16-bytes.\n\nSee [CLASS2.PROTOCOL1](./class2.protocol1.md) for more information on the data format.\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (599,'Class2 Level I SetValueZone','CLASS2.LEVEL1.SETVALUEZONEX2','## Description\n\nThis class mirrors the [CLASS1.SETVALUEZONEX2](./class1.setvaluezone.md) class but use a different data format with a GUID stored in the first 16 bytes of the data followed by the standard data thus offset with 16-bytes.\n\nSee [CLASS2.PROTOCOL1](./class2.protocol1.md) for more information on the data format.\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (600,'Class2 Level I SetValueZone','CLASS2.LEVEL1.SETVALUEZONEX3','## Description\n\nThis class mirrors the [CLASS1.SETVALUEZONEX3](./class1.setvaluezone.md) class but use a different data format with a GUID stored in the first 16 bytes of the data followed by the standard data thus offset with 16-bytes.\n\nSee [CLASS2.PROTOCOL1](./class2.protocol1.md) for more information on the data format.\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (601,'Class2 Level I SetValueZone','CLASS2.LEVEL1.SETVALUEZONEX4','## Description\n\nThis class mirrors the [CLASS1.SETVALUEZONEX4](./class1.setvaluezone.md) class but use a different data format with a GUID stored in the first 16 bytes of the data followed by the standard data thus offset with 16-bytes.\n\nSee [CLASS2.PROTOCOL1](./class2.protocol1.md) for more information on the data format.\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (602,'Class2 Level I Weather','CLASS2.LEVEL1.WEATHER','## Description\n\nThis class mirrors the [CLASS1.WEATHER](./class1.weather.md) class but use a different data format with a GUID stored in the first 16 bytes of the data followed by the standard data thus offset with 16-bytes.\n\nSee [CLASS2.PROTOCOL1](./class2.protocol1.md) for more information on the data format.');
INSERT INTO vscp_class (class,name,token,description) VALUES (607,'Class2 Level I Weather Forecast','CLASS2.LEVEL1.WEATHERFORECAST','## Description\n\nThis class mirrors the [CLASS1.WEATHER](./class1.weather.md) class but use a different data format with a GUID stored in the first 16 bytes of the data followed by the standard data thus offset with 16-bytes.\n\nSee [CLASS2.PROTOCOL1](./class2.protocol1.md) for more information on the data format.\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (612,'Class2 Level I Phone','CLASS2.LEVEL1.PHONE','## Description\n\nThis class mirrors the [CLASS1.PHONE](./class1.phone.md) class but use a different data format with a GUID stored in the first 16 bytes of the data followed by the standard data thus offset with 16-bytes.\n\nSee [CLASS2.PROTOCOL1](./class2.protocol1.md) for more information on the data format.');
INSERT INTO vscp_class (class,name,token,description) VALUES (614,'Class2 Level I Display','CLASS2.LEVEL1.DISPLAY','## Description\n\nThis class mirrors the [CLASS1.DISPLAY](./class1.display.md) class but use a different data format with a GUID stored in the first 16 bytes of the data followed by the standard data thus offset with 16-bytes.\n\nSee [CLASS2.PROTOCOL1](./class2.protocol1.md) for more information on the data format.');
INSERT INTO vscp_class (class,name,token,description) VALUES (622,'Class2 Level I IR','CLASS2.LEVEL1.IR','## Description\n\nThis class mirrors the [CLASS1.IR](./class1.ir.md) class but use a different data format with a GUID stored in the first 16 bytes of the data followed by the standard data thus offset with 16-bytes.\n\nSee [CLASS2.PROTOCOL1](./class2.protocol1.md) for more information on the data format.');
INSERT INTO vscp_class (class,name,token,description) VALUES (718,'Class2 Level I GNSS','CLASS2.LEVEL1.GNSS','## Description\n\nThis class mirrors the [CLASS1.GNSS](./class1.gnss.md) class but use a different data format with a GUID stored in the first 16 bytes of the data followed by the standard data thus offset with 16-bytes.\n\nSee [CLASS2.PROTOCOL1](./class2.protocol1.md) for more information on the data format.');
INSERT INTO vscp_class (class,name,token,description) VALUES (724,'Class2 Level I Wireless','CLASS2.LEVEL1.WIRELESS','## Description\n\nThis class mirrors the [CLASS1.WIRELESS](./class1.wireless.md) class but use a different data format with a GUID stored in the first 16 bytes of the data followed by the standard data thus offset with 16-bytes.\n\nSee [CLASS2.PROTOCOL1](./class2.protocol1.md) for more information on the data format.');
INSERT INTO vscp_class (class,name,token,description) VALUES (1018,'Class2 Level I Diagnostic','CLASS2.LEVEL1.DIAGNOSTIC','## Description\n\nThis class mirrors the [CLASS1.DIAGNOSTIC](./class1.diagnostic.md) class but use a different data format with a GUID stored in the first 16 bytes of the data followed by the standard data thus offset with 16-bytes.\n\nSee [CLASS2.PROTOCOL1](./class2.protocol1.md) for more information on the data format.');
INSERT INTO vscp_class (class,name,token,description) VALUES (1020,'Class2 Level I Error','CLASS2.LEVEL1.ERROR','## Description\n\nThis class mirrors the [CLASS1.ERROR](./class1.error.md) class but use a different data format with a GUID stored in the first 16 bytes of the data followed by the standard data thus offset with 16-bytes.\n\nSee [CLASS2.PROTOCOL1](./class2.protocol1.md) for more information on the data format.');
INSERT INTO vscp_class (class,name,token,description) VALUES (1021,'Class2 Level I Log','CLASS2.LEVEL1.LOG','## Description\n\nThis class mirrors the [CLASS1.LOG](./class1.log.md) class but use a different data format with a GUID stored in the first 16 bytes of the data followed by the standard data thus offset with 16-bytes.\n\nSee [CLASS2.PROTOCOL1](./class2.protocol1.md) for more information on the data format.');
INSERT INTO vscp_class (class,name,token,description) VALUES (1022,'Class2 Level I Laboratory','CLASS2.LEVEL1.LABORATORY','## Description\n\nThis class mirrors the [CLASS1.LABORATORY](./class1.laboratory.md) class but use a different data format with a GUID stored in the first 16 bytes of the data followed by the standard data thus offset with 16-bytes.\n\nSee [CLASS2.PROTOCOL1](./class2.protocol1.md) for more information on the data format.');
INSERT INTO vscp_class (class,name,token,description) VALUES (1023,'Class2 Level I Local','CLASS2.LEVEL1.LOCAL','## Description\n\nThis class mirrors the [CLASS1.LOCAL](./class1.local.md) class but use a different data format with a GUID stored in the first 16 bytes of the data followed by the standard data thus offset with 16-bytes.\n\nSee [CLASS2.PROTOCOL1](./class2.protocol1.md) for more information on the data format.');
INSERT INTO vscp_class (class,name,token,description) VALUES (1024,'Level II Protocol Functionality','CLASS2.PROTOCOL','## Description\n\nFor Level I events class=0 defines protocol control functionality. All events of this class are repeated at class=512 for use on Level II networks. The only difference is that the GUID is used instead of the Level I nickname.\n\nThis class defines protocol functionality for Level II. To simplify the handling of level II events, the data portion of the VSCP event can be considered as being made up of two parts. An 8-byte code portion (size of long integer) followed by a data portion if required. This is simply done to make processing level II events a little easier. The following events have been added to the level II control events to support configuration management. \n');
INSERT INTO vscp_class (class,name,token,description) VALUES (1025,'Level II Control','CLASS2.CONTROL','## Description\n\nLevel II Control functionality.');
INSERT INTO vscp_class (class,name,token,description) VALUES (1026,'Level II Information','CLASS2.INFORMATION','## Description\n\nLevel II Information events.');
INSERT INTO vscp_class (class,name,token,description) VALUES (1027,'Text to speech','CLASS2.TEXT2SPEECH','## Description\n\nThis is an interface that translates text to speech \n');
INSERT INTO vscp_class (class,name,token,description) VALUES (1028,'High Level Object','CLASS2.HLO','## Description\n\nHLO (High Level Object) class. This class is used to talk to drivers and nodes using XML or JSON or other higher level formats. ');
INSERT INTO vscp_class (class,name,token,description) VALUES (1029,'Level II Custom','CLASS2.CUSTOM','## Description\n\nAn implementer can design their own events in this class. Care must be taken not to cause conflicts by selecting types used by other implementors. \n');
INSERT INTO vscp_class (class,name,token,description) VALUES (1030,'Level II Display','CLASS2.DISPLAY','## Description\n\nLevel II specific display functionality. Also look at [CLASS1.DISPLAY](./class1.display.md) \n');
INSERT INTO vscp_class (class,name,token,description) VALUES (1040,'Measurement string','CLASS2.MEASUREMENT_STR','## Description\n\nThis is a mirror of [CLASS1_MEASUREMENT](./class1.measurement.md),[CLASS1_MEASUREMENTX1](./class1.measurementx1.md),[CLASS1_MEASUREMENTX2](./class1.measurementx2.md),[CLASS1_MEASUREMENTX3](./class1.measurementx3.md) and [CLASS1_MEASUREMENTX4](./class1.measurementx4.md) where the data is in string form. The zero terminated string has the following form “sensor-index, value-unit, zone, subzone, value” where the value is a floating point value in string form and the senor-index and value-unit is the same as for [CLASS1_MEASUREMENT](./class1.measurement.md),[CLASS1_MEASUREMENTX1](./class1.measurementx1.md),[CLASS1_MEASUREMENTX2](./class1.measurementx2.md),[CLASS1_MEASUREMENTX3](./class1.measurementx3.md) and [CLASS1_MEASUREMENTX4](./class1.measurementx4.md) but where sensor index''s can be in the range 0-255 and value-unit in the range 0-255 (3 is standard).\n\n  * 0-255 is mirrored to [CLASS1_MEASUREMENT](./class1.measurement.md)\n  * 256-511 is mirrored to [CLASS1_MEASUREMENTX1](./class1.measurementx1.md)\n  * 512-767 is mirrored to [CLASS1_MEASUREMENTX2](./class1.measurementx2.md)\n  * 768-1023 is mirrored to [CLASS1_MEASUREMENTX3](./class1.measurementx3.md)\n  * 1024-1279 is mirrored to [CLASS1_MEASUREMENTX4](./class1.measurementx4.md)\n  * Events with type >= 1270 are only available in Level II.\n\nFloating point numbers should be written as "2345.456" **NOT** as "2345,456" independent of locale and the maximum number can have 483 digits including a possible decimal point.\n\n | Byte | Description |\n | :----: | ----------- |\n | 0    | Index for sensor, 0-255. |\n | 1    | Zone, 0-255. |\n | 2    | Subzone, 0-255. |\n | 3    | Unit from measurements, 0-255. |\n | 4..  | String up to the maximum data size 483 digits including a possible decimal point. The decimal point should always be a "." independent of locale. |\n\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (1060,'Measurement float','CLASS2.MEASUREMENT_FLOAT','## Description\n\nThis is a mirror of [CLASS1_MEASUREMENT](./class1.measurement.md),[CLASS1_MEASUREMENTX1](./class1.measurementx1.md),[CLASS1_MEASUREMENTX2](./class1.measurementx2.md),[CLASS1_MEASUREMENTX3](./class1.measurementx3.md) and [CLASS1_MEASUREMENTX4](./class1.measurementx4.md) where the data is in string form. The zero terminated string has the following form “sensor-index, value-unit, zone, subzone, value” where the value is a double precision floating point value and the senor-index and value-unit is the same as for [CLASS1_MEASUREMENT](./class1.measurement.md),[CLASS1_MEASUREMENTX1](./class1.measurementx1.md),[CLASS1_MEASUREMENTX2](./class1.measurementx2.md),[CLASS1_MEASUREMENTX3](./class1.measurementx3.md) and [CLASS1_MEASUREMENTX4](./class1.measurementx4.md) but where sensor index''s can be in the range 0-255 and value-unit in the range 0-255.\n\n  * 0-255 is mirrored to [CLASS1_MEASUREMENT](./class1.measurement.md)\n  * 256-511 is mirrored to [CLASS1_MEASUREMENTX1](./class1.measurementx1.md)\n  * 512-767 is mirrored to [CLASS1_MEASUREMENTX2](./class1.measurementx2.md)\n  * 768-1023 is mirrored to [CLASS1_MEASUREMENTX3](./class1.measurementx3.md)\n  * 1024-1279 is mirrored to [CLASS1_MEASUREMENTX4](./class1.measurementx4.md)\n  * Events with type >= 1270 are oinly available in Level II.\n\n| Byte | Description |\n| :----: | ----------- |\n| 0    | Index for sensor, 0-255. |\n| 1    | Zone, 0-255. |\n| 2    | Sub zone, 0-255.|\n| 3    | Unit from measurements, 0-255.|\n| 4-11 | 64-bit double precision floating point value stored MSB first. |\n\n\n');
INSERT INTO vscp_class (class,name,token,description) VALUES (65535,'VSCP Daemon internal events','CLASS2.VSCPD','## Description\n\nThis class is reserved for internal events used by the damon to communicate with level III drivers. Events of this type should never be visible on a physical bus. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,0,'CLASS1.PROTOCOL','General Event.');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (1,0,'CLASS1.PROTOCOL','**Not mandatory.** Implement in device if needed by application. \n\nA segment controller sends this event once a second on the segment that it controls. The data field contains the 8-bit CRC of the segment controller GUID and the time since the epoch (00:00:00 UTC, January 1, 1970) as a 32-bit value. A node that receive (and recognize) this event could respond with a CLASS1.INFORMATION, Type=9 event (HEARTBEAT) and should do so if it does not send out a regular heartbeat event.\n\nOther nodes can originate this event on the segment. For these nodes the data part, as specified below, should be omitted. A better choice for periodic heartbeat events from a node may be [CLASS1.INFORMATION, Type=9 (HEARTBEAT)](./class1.information.md#type9)\n\nAll nodes that recognize this event should save the 8-bit CRC in non-volatile storage and use it on power up. When a node starts up on a segment it should begin to listen for the Segment controller heartbeat. When/if it is received the node compares it with the stored value and if equal and the node is assigned a nickname-ID it continues to its working mode. If different, the node has detected that it has been moved to a new segment and therefore must drop its nickname-ID and enters the configuration mode to obtain a new nickname-ID from the segment controller.\n\nIf the node is in working mode and its nickname-ID changes, the node should do a complete restart after first setting all controls to their default state.\n\nAs a segment can be without a segment controller this event is not available on all segments and is not mandatory. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | 8-bit CRC of the segment controller GUID. | \n | 1 | MSB of time since epoch (optional). |\n | 2  | Time since epoch (optional). | \n | 3         | Time since epoch (optional).|\n | 4         | LSB of time since epoch | \n\nUninitiated nodes have the CRC of the segment controller set to 0xFF.\n\nA node that is initialized on a segment and does not receive a Heartbeat can take the role of segment controller if it wishes to do so. Only one node one a segment are allowed to do this fully by setting its nickname=0 and therefore a standard node should not have this feature built in. Any node can however behave like a segment controller but use a nickname other then zero. \n\nTime is UTC.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (2,0,'CLASS1.PROTOCOL','**Mandatory.** Must be implemented by all devices.\n\nThis is intended for nodes that have been initiated, is part of the segment and is powered up. All nodes that have a nickname-ID that is not set to 0xFF should send this event before they go on line to do their “day to day” work.\n\nNormally all nodes should save their assigned nickname-ID in non-volatile memory and use this assigned ID when powered up. A segment controller can however keep track of nodes that it controls and reassign the ID to a node that it did not get a new node on-line event from. This is the method a segment controller uses to detect nodes that have been removed from the segment.\n\nFor the nickname discovery procedure this event is used as the probe. The difference between a probe and a new node on line is that the later has the same originating nickname as value in byte 0.\n\nIf a node send this event with the unassigned ID 0xFF and byte 0 set to 0xFF it has given up the search for a free ID.\n\nIt is recommended that also level II nodes send this event when they come alive. In this case the target address is the 16-byte data GUID of the node with MSB in the first byte. \n\n | Data | Description | \n | :----: | ----------- | \n | 0    | **Target address**. This is the probe nickname that the new node is using to test if this is a valid target node. If there is a node with this nickname address it should answer with probe ACK. A probe always has 0xff as it''s own temporary nickname while a new node on line use a non 0xff nickname. | \n\nOn a Level II system.\n\n | Data | Description | \n | :----: | ----------- | \n | 0-15 | **GUID**. This is the GUID of the node. MSB in byte 0. | \n\n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (3,0,'CLASS1.PROTOCOL','**Mandatory.** Must be implemented by all devices.\n\nThis event is sent from a node as a response to a probe. There are no arguments.\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (4,0,'CLASS1.PROTOCOL','Reserved for future use.\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (5,0,'CLASS1.PROTOCOL','Reserved for future use.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (6,0,'CLASS1.PROTOCOL','**Mandatory.** Must be implemented by all devices.\n\nThis event can be used to change the nickname for a node. The node just uses the new nickname and don''t start nickname discovery or similar.\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0  | Old nickname for node. | \n | 1  | The new nickname for the node. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (7,0,'CLASS1.PROTOCOL','**Mandatory.** Must be implemented by all devices.\n\nA node sends this event to confirm that it accepts its assigned nickname-ID. When sending this event the node uses its newly assigned nickname address.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (8,0,'CLASS1.PROTOCOL','**Mandatory.** Must be implemented by all devices.\n\nRequest a node to drop its nickname. The node should drop its nickname and then behave in the same manner as when it was first powered up on the segment. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0  | The current nickname for the node. |\n | 1  | **Optional:** Flags. | \n | 2  | **Optional:** Time the node should wait before it starts a nickname discovery or starts the device. The time is in seconds. | \n\n**Optional byte 1 flags**\n\n | Bit | Description | \n | :---: | ----------- | \n | 0   | Reserved. | \n | 1   | Reserved. | \n | 2   | Reserved. | \n | 3   | Reserved. | \n | 4   | Reserved. | \n | 5   | Reset device. Keep nickname. | \n | 6   | Set persistent storage to default.| \n | 7   | Go idle. Do not start up again. | \n\nSo if byte 1 and 2 is not in event restart device, set default parameters and do a nickname discovery. If byte 1 and 2 are present and bit 5 is set load defaults into device, restart but keep nickname. In all cases byte 2 delays before the node is restarted.\n\n 1.  With just one byte as an argument. The node should do a standard node discovery in the same way as if the status button of the node is pressed. Preserve initiated data,\n 2.  If byte 1 is present bit 5: Just restart. Don''t change any data. not even nickname. bit 6: Restart write default to persistent storage. bit 7: die die my darling. If both bit 5 and 6 is set, do 5 and then 6 == 6 or do 6 and then 5 == 6\n 3.  Byte 1 + byte 2 Wait this amount of seconds after the above operation has been carried out.\n\nThere is a variant of this where the GUID is used instead of the nickname to identify the device, [CLASS1.PROTOCOL, Type=23 (GUID drop nickname-ID / reset device.)](./class1.protocol.md#type23).\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (9,0,'CLASS1.PROTOCOL','**Mandatory.** Must be implemented by all devices.\n\nRead a register from a node. \n\n*If a node have several pages with user defined registers Extended Register Read is a better choice to choose for reading as the page also is set when reading register using that type. The standard registers can always be read without setting a page though as they are always mapped into the upper 128 bytes.*\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | Node address. | \n | 1 | Register to read. | \n\nA read/write response event is returned on success.\n\nThe following format can be used for nodes on a Level II segment as a midway between a full Level II handling as specified in Class=1024 and Level I.\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0-15 | GUID (MSB -> LSB). | \n | 16 | Reserved. | \n | 17 | Register to read. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (10,0,'CLASS1.PROTOCOL','**Mandatory.** Must be implemented by all devices.\n\nResponse for a read/write event. . Note that the data is returned for both a read and a write and can and probably should be checked for validity. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | Register read/written. | \n | 1 | Content of register.   | \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (11,0,'CLASS1.PROTOCOL','**Mandatory.** Must be implemented by all devices.\n\nWrite register content to a node. \n\n*If a node have several pages with user defined registers Extended Register Write is a better choice to choose for writing as the page is also set when writing a register using that type. The standard registers can always be read without setting a page though as they are always mapped into the upper 128 bytes.*\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | Node address.         | \n | 1 | Register to write.    | \n | 2 | Content for register. | \n\nA read/write response event is returned on success.\n\nThe following format can be used for nodes on a Level II segment as a midway between a full Level II handling as specified in Class=1024 and Level I. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0-15 | GUID (MSB -> LSB). | \n | 16 | Reserved. | \n | 17 | Register to write.   | \n | 18 | Content of register. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (12,0,'CLASS1.PROTOCOL','\n**Mandatory.** Must be implemented by all devices.\n\nSend NACK (Class=0,Type=14 if no boot-loader implemented)\n\nThis is the first event in the boot loader sequence. The node should stop all other activities when in boot loader mode. This also means that the node should not react on other events (commands) then the boot loader related.\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | The nickname for the node. | \n | 1 | Code that select boot loader algorithm to use. | \n | 2 | GUID byte 0 (MSB) | \n | 3 | GUID byte 3 (MSB + 3) | \n | 4 | GUID byte 5 (MSB + 5) | \n | 5 | GUID byte 7 (MSB + 7) | \n | 6 | Content of register 0x92, Page select MSB. | \n | 7 | Content of register 0x93, Page select LSB. | \n\nThe following format can be used for nodes on a Level II segment as a midway between a full Level II handling as specified in Class=1024 and Level I. \n\n | Data byte | Description |\n | :---------: | ----------- | \n | 0-15 | GUID. | \n | 16   | Boot-loader algorithm code. |\n\n\n**Boot-loader Codes**\n\n\n | Code | Algorithm               | \n | :----: | ---------             | \n | 0x00 | VSCP algorithm.         | \n | 0x01 | Microchip PIC algorithm | \n | 0x10 | Atmel AVR algorithm 0   | \n | 0x20 | NXP ARM algorithm 0     | \n | 0x30 | ST ARM algorithm 0      | \n\nAll other codes reserved.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (13,0,'CLASS1.PROTOCOL','**Not mandatory.** Only needed if a VSCP boot-loader algorithm is used.\n\nThis event has no meaning for any node that is not in boot mode and should be disregarded.\n\nThe node confirms that it has entered boot loader mode. This is only sent for the VSCP boot loader algorithm. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | MSB of flash block size.            | \n | 1 | Flash block size.                   | \n | 2 | Flash block size.                   | \n | 3 | LSB of flash block size.            | \n | 4 | MSB of number of block s available. | \n | 5 | Number of block s available.        | \n | 6 | Number of block s available.        | \n | 7 | LSB of number of blocks available.  |\n\n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (14,0,'CLASS1.PROTOCOL','**Mandatory.** Should be implemented by all devices.\n\nThe node was unable to enter boot loader mode. The reason is given by a user specified error code byte. This event has no meaning for any node that is not in boot mode and should be disregarded.\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | Optional user defined error code. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (15,0,'CLASS1.PROTOCOL','**Not mandatory.** Only needed if a VSCP boot-loader algorithm is used.\n\nBegin transfer of data for a block of memory. This event has no meaning for any node that is not in boot mode and should be disregarded.\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0         | MSB of block number. | \n | 1         | Block number. | \n | 2         | Block number. | \n | 3         | LSB of block number. | \n | 4         | (optional) Type of Memory we want to write. See table below | \n | 5         | (optional) Bank/Image to be written Used together with byte 4 to specify either separate Flash or EEPROM/MRAM spaces. If absent or set to zero normally, means first memory from the view of the node creator, e.g. internal Flash, internal EEPROM etc. Useful for projects that have internal as well as external EEPROMs so the external one could be addressed with byte5=1. Also with byte4=0 and byte5=1 an SD-Card as well as a second firmware image inside the flash could be addressed. |\n\n**Type of memory to write (byte 4)**\n\n\n | Memory type | Description | \n | :-----------: | ----------- | \n | 0 or byte absent | PROGRAM Flash (status quo for old nodes) | \n | 1 | DATA (EEPROM, MRAM, FRAM) | \n | 2 | CONFIG (Fuses, CPU configuration) | \n | 3 | RAM | \n | 4-255  | Currently undefined - send a NACK as response | \n\nResponse can be \n\n   [CLASS1.PROTOCOL, Type=50 (Start block data transfer ACK)](./class1.protocol.md#type50) \n   \n   or \n   \n   [CLASS1.PROTOCOL, Type=51 (Start block data transfer NACK)](./class1.protocol.md#type51).\n\n   ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (16,0,'CLASS1.PROTOCOL','**Not mandatory.** Only needed if a VSCP boot-loader algorithm is used.\n\nData for a block of memory. This event has no meaning for any node that is not in boot mode and should be disregarded.\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0         | Data.       | \n | 1         | Data.       | \n | 2         | Data.       | \n | 3         | Data.       | \n | 4         | Data.       | \n | 5         | Data.       | \n | 6         | Data.       | \n | 7         | Data.       | \n\nA [CLASS1.PROTOCOL, Type=50 (Block Data ACK)](./class1.protocol.md#type50)\nis sent as a response for each event received.\n\nA [CLASS1.PROTOCOL, Type=51 (Block Data NACK)](./class1.protocol.md#type51)\nis sent on failure.\n\n**Note** If the block to fill is not a multiple of eight the receiving node should handle and discard any excess data. This is true also if more block data frames are received than the block can hold.\n\n**Level II** The size of the block is 1-max data.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (17,0,'CLASS1.PROTOCOL','**Not mandatory.** Only needed if a VSCP boot-loader algorithm is used.\n\nConfirm the reception of a complete data block. This event has no meaning for any node that is not in boot mode and should be disregarded.\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | MSB of 16-bit CRC for block. | \n | 1 | LSB for 16-bit CRC for block. | \n | 2 | MSB of write pointer.         | \n | 3 | write pointer.                | \n | 4 | write pointer.                | \n | 5 | LSB of write pointer.         | \n\nThe write pointer is the actual pointer after the last data has been written i,e the next position on which data will be written. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (18,0,'CLASS1.PROTOCOL','\n**Not mandatory.** Only needed if a VSCP boot-loader algorithm is used.\n\nNACK the reception of data block. This event has no meaning for any node that is not in boot mode and should be disregarded.\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | User defined error code. | \n | 1 | MSB of write pointer.    | \n | 2 | write pointer.           | \n | 3 | write pointer.           | \n | 4 | LSB of write pointer.    | \n\nThe write pointer is the actual pointer after the last data has been written i,e the next position on which data will be written. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (19,0,'CLASS1.PROTOCOL','**Not mandatory.** Only needed if a VSCP boot-loader algorithm is used.\n\nRequest from a node to program a data block that has been uploaded and confirmed. This event has no meaning for any node that is not in boot mode and should be disregarded.\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | MSB of block number. | \n | 1 | Block number.        | \n | 2 | Block number.        | \n | 3 | LSB of block number. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (20,0,'CLASS1.PROTOCOL','**Not mandatory.** Only needed if a VSCP boot-loader algorithm is used.\n\nA node confirms the successful programming of a block. This event has no meaning for any node that is not in boot mode and should be disregarded.\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | MSB of block number. | \n | 1 | Block number.        | \n | 2 | Block number.        | \n | 3 | LSB of block number. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (21,0,'CLASS1.PROTOCOL','**Not mandatory.** Only needed if a VSCP boot-loader algorithm is used.\n\nA node failed to program a data block. This event has no meaning for any node that is not in boot mode and should be disregarded.\n\n | Data byte | Description              | \n | :---------: | -----------              | \n | 0         | User defined error code. | \n | 1         | MSB of block number.     | \n | 2         | Block number.            | \n | 3         | Block number.            | \n | 4         | LSB of block number.     | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (22,0,'CLASS1.PROTOCOL','**Not mandatory.** Only needed if a VSCP boot-loader algorithm is used.\n\nThis command is sent as the last command during the boot-loader sequence. It resets the device and starts it up using the newly loaded code. The 16-bit CRC for the entire program block is sent as an argument. This must be correct for the reset/activation to be performed. NACK boot loader mode will be sent if the CRC is not correct and the node will not leave boot loader mode. \n\n | Data byte | Description | \n | :-------: | ----------- | \n | 0 | 16 bit CRC of full flash data block, MSB | \n | 1 | 16 bit CRC of full flash data block LSB  | \n\nTo leave boot mode just send this event and a dummy CRC. Other methods could have been used to load the code but it can still be activated with this event as long as the CRC is correct. This event has no meaning for any node that is not in boot mode and should be disregarded. \n\nResponse can be \n\n[CLASS1.PROTOCOL, Type=48 (Activate new image ACK)](./class1.protocol.md#type48)\n\nor\n\n[CLASS1.PROTOCOL, Type=49 (Activate new image NACK)](./class1.protocol.md#type49). \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (23,0,'CLASS1.PROTOCOL','**Mandatory.** Should be implemented by all devices.\n\n> Added in version 1.4.0\n\nThis is a variant of Class=0, Type=8 but here the full GUID is used instead of the nickname to identify the node that should drop its current nickname and enter the node-name discovery procedure.\n\nAs the GUID is 16 bytes this is a multi-frame event. To ease the storage requirements on the nodes only four GUID bytes are send in each frame. The frames must be sent out within one second interval. \n\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0         | index.      | \n | 1         | GUID byte.  | \n | 2         | GUID byte.  | \n | 3         | GUID byte.  | \n | 4         | GUID byte.  | \n\nwhere index goes from 0-3 and GUID bytes are sent MSB first, like\n\n | Index = Byte 0 | Byte 1 | Byte 2 | Byte 3 | Byte 4 | \n | -------------- | ------       | ------       | ------       | ------       | \n | Index = 0      | GUID byte 15 | GUID byte 14 | GUID byte 13 | GUID byte 12 | \n | Index = 1      | GUID byte 11 | GUID byte 10 | GUID byte 9  | GUID byte 8  | \n | Index = 2      | GUID byte 7  | GUID byte 6  | GUID byte 5  | GUID byte 4  | \n | Index = 3      | GUID byte 3  | GUID byte 2  | GUID byte 1  | GUID byte 0  | \n\nA device can use just one byte to detect this. This byte is initialized to zero and holds four bits that match correct frames. That is, when this register is equal to 0x0f the nickname should be dropped and the nickname discovery sequence started. The node must also have a timer that reset this byte one second after any of the above frames have been received or when the nickname discovery sequence is started.\n\nHi-level software must take this one second interval into account when more then one node should be initialized. This event can be used to assign nickname-IDs to silent nodes. This is nodes that does not start the nickname discovery process on startup and instead just sits and wait until they are assigned an ID with this event. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (24,0,'CLASS1.PROTOCOL','**Mandatory.** Should be implemented by all devices.\n\nThe page read is implemented to make it possible to read/write larger blocks of data. Two register positions are reserved to select a base into this storage. This is a 16-bit number pointing to a 256-byte page. This means that a total of 65535 * 256 bytes are accessible with this method (page 0 is the standard registers).\n\nTo read a block of data from the storage, first write the base registers then issue this event and n events will be sent out from the node containing the data from the specified area. If the count pass the border it of the page ( > 0xFF) the transfer will end there.\n\nNote that the page select registers only selects a virtual page that can be accessed with page read/write and not with the ordinary read/write.\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | Node-ID which registers should be read. | \n | 1 | Index into page. | \n | 2 | Number of bytes to read (1-255). | \n\nResponse is \n\n[CLASS1.PROTOCOL, Type=26 (Read page response)](./class1.protocol.md#type26)\n\n\nThe following format can be used for nodes on a Level II segment as a midway between a full Level II handling as specified in Class=1024 and Level I. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0-15 | GUID. |\n | 16 | Index into page. | \n | 17 | Number of bytes to read (1-255). | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (25,0,'CLASS1.PROTOCOL','**Mandatory.** Should be implemented by all devices.\n\nThe write page is implemented to make it possible to write larger blocks of data. One data-space positions is reserved to select a base into this storage. See Page read for a full description.\n\nIt is only possible to write one 6-byte chunk at a time in contrast to reading several. This is because VSCP at Level I is aimed at low end devices with limited resources meaning little room for buffers. \n\n | Data byte | Description  | \n | :---------: | ----------- |\n | 0 | Node-ID         |\n | 1 | Register start. |\n | 2-7 | Data. |\n\nResponse is \n\n[CLASS1.PROTOCOL, Type=26 (Read Page Response)](./class1.protocol.md#type26)\n\nThe following format can be used for nodes on a Level II segment as a midway between a full Level II handling as specified in Class=1024 and Level I. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0-15      | GUID.       | \n | 16        | Base index. | \n | 17-…    | Data.       | \n\nData count can be as many as the buffer of the Level II node accepts. \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (26,0,'CLASS1.PROTOCOL','**Mandatory.** Should be implemented by all devices.\n\nThis is a response frame for the read/write page command. The Sequence number goes from 0 up to the last sent frame for a read page request. \n\n | Data byte | Description      | \n | :---------: | -----------      | \n | 0         | Sequence number. | \n | 1-7       | Data.            | \n\nThe following format can be used for nodes on a Level II segment as a midway between a full Level II handling as specified in Class=1024 and Level I. \n\n | Data byte | Description      | \n | :---------: | -----------      | \n | 0-15      | GUID.            | \n | 16        | Sequence number. | \n | 17-…    | Data.            | \n\nData count can be as many as the buffer of the Level II node accepts. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (27,0,'CLASS1.PROTOCOL','Should be implemented by all devices that work over 802.15.4/Ethernet/Internet or other high end protocols.This event can be broadcasted on a segment by a node to get information about available servers. \n\nThe [VSCP daemon documentation](https://grodansparadis.gitbooks.io/the-vscp-daemon) have a description on how server/service discovery works. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (28,0,'CLASS1.PROTOCOL','Should be implemented by all devices that work on 802.15.4/Ethernet/Internet and have a Level I link. This is because a Level II device can be present on a Level I bus. A typical example is a Bluetooth gateway. A user find the bud/segment by the Bluetooth device and can then discover other parts of the system through it.\n\nA Level II node respond with [CLASS2.PROTOCOL, Type=32 Level II who is response](./class2.protocol.md#type32) to this event. It is also possible to listen for  [CLASS2.PROTOCOL, Type=20 (0x14) High end server capabilities](./class2.protocol.md#type20) to discover Level II nodes.\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | VSCP server low 16-bit capability code MSB | \n | 1 | VSCP server low 16-bit capability code LSB | \n | 2 | Server IP address MSB - or other relevant data as of server capabilities (Network byte order) | \n | 3 | Server IP address - or other relevant data as of server capabilities (Network byte order)     | \n | 4 | Server IP address - or other relevant data as of server capabilities (Network byte order)     | \n | 5 | Server IP address LSB - or other relevant data as of server capabilities (Network byte order) | \n | 6 | Server Port MSB - or other relevant data as of server capabilities | \n | 7 | Server Port LSB - or other relevant data as of server capabilities | \n\nBit codes for capabilities is the same as for the lower 16 bits of [CLASS2.PROTOCOL, Type=20 (0x14) High end server capabilities](class2.protocol.md#type20).\n\n**For programmers:** Bits are defined in [vscp.h](https://github.com/grodansparadis/vscp/blob/master/src/vscp/common/vscp.h).\n\nA node that need a TCP connection to a host. Broadcast HIGH END SERVER PROBE on the segment and waits for HIGH END SERVER RESPONSE from one or more servers to connect to. If a suitable server has responded it can decide to connect to that server. Note that one server can reply with **none, one or many** HIGH END SERVER RESPONSE events.\n\nA server like the VSCP server can span multiple segments and a reply can therefore be received from a remote segment as well. This can be an advantage in some cases and unwanted in some cases. The server configuration should have control on how it is handled. \n\nThe [VSCP daemon documentation](https://grodansparadis.gitbooks.io/the-vscp-daemon) have a description on how server/service discovery works. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (29,0,'CLASS1.PROTOCOL','**Mandatory.** Should be implemented by all devices.\n\nIncrement a register content by one with no risk of it changing in between \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | Node-ID | \n | 1 | Register to increment. | \n\nNode should answer with [CLASS1.PROTOCOL, Type=10 (Read/Write register response)](./class1.protocol.md#type10).\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (30,0,'CLASS1.PROTOCOL','**Mandatory.** Should be implemented by all devices.\n\nDecrement a register content by one with no risk of it changing in between \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | Node-ID                | \n | 1 | Register to decrement. | \n\nNode should answer with [CLASS1.PROTOCOL, Type=10 (Read/Write register response)](./class1.protocol.md#type10).\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (31,0,'CLASS1.PROTOCOL','**Mandatory.** Must be implemented by all devices.\n\nThis event can be used as a fast way to find out which nodes there is on a segment. All nodes receiving it should respond. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | Node-ID or 0xFF for all nodes. | \n\nResponse for a Level I node is [CLASS1.PROTOCOL, Type=32 (Who is there response)](./class1.prototocol.md#type32).\n    \nA Level II node respond with [CLASS2.PROTOCOL, Type=32 (Level II who is response)](./class2.protocol.md#type32) to this event.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (32,0,'CLASS1.PROTOCOL','**Mandatory.** Must be implemented by all devices.\n\nResponse from node(s) looks like this \n\n | byte 0 | byte 1 | byte 2 | byte 3 | byte 4 | byte 5 | byte 6 | byte 7 | \n | :------: | ------ | ------ | ------ | ------ | ------ | ------ | ------ | \n | 0      | GUID15 | GUID14 | GUID13 | GUID12 | GUID11 | GUID10 | GUID9  | \n | 1      | GUID8  | GUID7  | GUID6  | GUID5  | GUID4  | GUID3  | GUID2  | \n | 2      | GUID1  | GUID0  | MDF0   | MDF1   | MDF2   | MDF3   | MDF4   | \n | 3      | MDF5   | MDF6   | MDF7   | MD8    | MDF9   | MDF10  | MDF11  | \n | 4      | MDF12  | MDF13  | MDF14  | MDF15  | MDF16  | MDF17  | MDF18  | \n | 5      | MDF19  | MDF20  | MDF21  | MDF22  | MDF23  | MDF24  | MDF25  | \n | 6      | MDF26  | MDF27  | MDF28  | MDF29  | MDF30  | MDF31  | 0      | \n\n\nAll seven frames should be sent also if the MDF URL is shorter than 32 characters,\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (33,0,'CLASS1.PROTOCOL','**Mandatory**\n\nRequest a node to report size and offset for its decision matrix. \n\n | Data byte | Description   | \n | :---------: | -----------   | \n | 0 | Node address. | \n\nThe following format can be used for nodes on a Level II segment as a midway between a full Level II handling as specified in Class=1024 and Level I. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0-15 | GUID.       | \n\nA node that does not have a decision matrix should return zero rows.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (34,0,'CLASS1.PROTOCOL','**Mandatory** for nodes with a decision matrix\n\nReport the size for the decision matrix and the offset to its storage. The reported size is the number of decision matrix lines. The offset is the offset in the register address counter from 0x00 (See the register model in this document). If the size returned is zero the node does not have a decision matrix. A node without a decision matrix can also skip to implement this event but it''s better if it returns a decision matrix size of zero. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0  | Matrix size (number of rows). Zero for a device with no decision matrix. | \n | 1 | Offset in register space. | \n | 2 | Optional page start MSB ( Interpret as zero if not sent ) | \n | 3 | Optional page start LSB ( Interpret as zero if not sent ) | \n | 4 | Optional page end MSB ( Interpret as zero if not sent ) Deprecated. Set to zero. | \n | 5 | Optional page end LSB ( Interpret as zero if not sent ) Deprecated. Set to zero. | \n | 6 | For a Level II node this is the size of a decision matrix row. | \n\nThe decision matrix can as noted be stored in paged registers and if so it must be accessed with the paged read/write. The decision matrix can also be stored indexed. In that case the first byte is the index and the second is the data. If the index is in location 0x7f then an indexed matrix is assumed. \n\n | Register position | Description | \n | :-----------------: | -----------  | \n | 0x77 | Index for row in decision matrix. | \n | 0x78-0x7F | Level I decision matrix row. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (35,0,'CLASS1.PROTOCOL','**Not mandatory.**\n\nA node that get this event and has an embedded MDF description in flash or similar respond with the description . \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | Node-ID.    | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (36,0,'CLASS1.PROTOCOL','**Not mandatory.** \n\nThis is the response from a Get embedded MDF. The response consist of several frames where an index in byte0/1 is incremented for each frame and MDF data is in byte 2-7.\n\nIf an embedded MDF is not available a response on the form\n\n     byte 0 = 0 \n     byte 1 = 0 \n     byte 2 = 0\n\nshould be sent. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | High byte of MDF description index. |\n | 1 | Low byte of MDF description index.  |\n | 2-7 | MDF data. | \n\nNote that if sending the events back to back some devices will not be able to cope with the data stream. It is therefor advisable to have a short delay between each mdf data frame sent out.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (37,0,'CLASS1.PROTOCOL','**Mandatory.** Must be implemented by all devices.\n\nRead a register from a node with page information.\n\nImplementation must take care so all page register change done by these routines must restore the content of the page registers to there original content when they are done. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | Node address. | \n | 1 | MSB of page where the register is located. | \n | 2 | LSB of page where the register is located. | \n | 3 | Register to read (offset into page). | \n | 4 | Optional: Number of registers to read.     | \n\nIf the number of registers to read is set to zero 256 registers will be read. __Some nodes my have small buffers so this bursts of messages may be a problem.__\n\nAn extended read/write response event is returned on success.\n\nThis means that a register (or a maximum of 256 consecutive registers) located on any page can be read in a single operation.\n\nThe following format can be used for nodes on a Level II segment as a midway between a full Level II handling as specified in Class=1024 and Level I. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0-15 | GUID. | \n | 16 | MSB of page where the register is located. | \n | 17 | LSB of page where the register is located. | \n | 18  | Register to read. | \n | 19   | Optional: bytes to read (1-255). |\n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (38,0,'CLASS1.PROTOCOL','**Mandatory.** Must be implemented by all devices.\n\nWrite register content to a node.\n\nImplementation must take care so all page register change done by these routines must restore the content of the page registers to there original content when they are done. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | Node address. | \n | 1 | MSB of page where the register is located. | \n | 2 | LSB of page where the register is located. | \n | 3 | Register to write. | \n | 4 | Content for register. | \n | 5,6,7 | Optional extra data bytes to write. | \n\nA read/write response event is returned on success.\n\nEvent allows a register (or a maximum of four consecutive registers) located on any page can be written in a single operation.\n\nThe following format can be used for nodes on a Level II segment as a midway between a full Level II handling as specified in Class=1024 and Level I.\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0-15 | GUID. | \n | 16 | MSB of page where the register is located. | \n | 17 | LSB of page where the register is located. | \n | 18 | Register to write. | \n | 19  | Content of register. byte 20-buffer-size Optional extra data bytes to write. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (39,0,'CLASS1.PROTOCOL','**Mandatory.** Must be implemented by all devices.\n\nThis is the replay sent for events CLASS1.PROTOCOL, Type=40,41. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | Index (starts at zero). | \n | 1 | MSB of page where the register is located. | \n | 2 | LSB of page where the register is located. | \n | 3 | Register read/written. | \n | 4 | Content of register. | \n | 5-7 | Content of register if multi register read/write. | \n\nA multi. register read/write can generate up to 256 events of this type. Index will then be increased by one for each event sent. __Some nodes my have small buffers so this bursts of messages may be a problem. Therefore send them with a low priority.__\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (40,0,'CLASS1.PROTOCOL','**Not Mandatory.** Implemented if needed.\n\nIt is possible to ask a node which event(s) it is interested in with this event. If not implemented the node is supposed to be interested in all events.\n\nAll nodes are by default interested in **CLASS1.PROTOCOL**.\n\nThe event is intended for very low bandwidth nodes like low power wireless nodes where it saves a lot of bandwidth if only events that really concerns the node is sent to them. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (41,0,'CLASS1.PROTOCOL','**Not mandatory.** Implemented if needed.\n\nResponse for event [CLASS1.PROTOCOL, Type=40 (Get event interest)](./class1.protocol.md#type40). The node report all events it is interested in. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | Index | \n | 1 | class bit 9 (see table) | \n | 2 | class 1 | \n | 3 | type 1 | \n | 4 | class 2 | \n | 5 | type 2 | \n | 6 | class 3 | \n | 7 | type 3 | \n\n | Bit | Description | \n | :---: | ----------- | \n | 0 | Bit 9 for class 1 | \n | 1 | Bit 9 for class 2 | \n | 2 | Bit 9 for class 3 | \n | 3 | All Type 1 is recognized (set type to zero). | \n | 4 | All Type 2 is recognized (set type to zero). | \n | 5 | All Type 3 is recognized (set type to zero). | \n | 6 | 0  | \n | 7 | 0  | \n\nA node that is interested in everything just send a [CLASS1.PROTOCOL, Type=41 (Get event interest response)](./class1.protocol.md#type41) with no data.\n\nNodes that want to specify events of interest fill them in. If all types of a class should be recognized set the corresponding bit in byte 1 and the related type to zero.\n\nA maximum of 255 frames (index = 0-254) may be sent. \n\nFill unused pairs with zero.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (48,0,'CLASS1.PROTOCOL','**Not mandatory.** Only needed if a VSCP boot-loader algorithm is used.\n\nPart of the VSCP boot-loader functionality. This is the positive response after a node received a [CLASS1.PROTOCOL, Type=22 (Activate new image)](./class1.protocol.md#type22). It is sent by the node before the new firmware is booted into.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (49,0,'CLASS1.PROTOCOL','**Not mandatory.** Only needed if a VSCP boot-loader algorithm is used.\n\nPart of the VSCP boot-loader functionality. This is the negative response after a node received a [CLASS1.PROTOCOL, Type=22 (Activate new image)](./class1.protocol.md#type22). It is sent by the node to inform it that it will (or can not) switch to the new firmware image. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (50,0,'CLASS1.PROTOCOL','**Not mandatory** Only needed if a VSCP boot loader algorithm is used.\n\nPart of the VSCP boot-loader functionality. This is the positive response after a node received a [CLASS1.PROTOCOL, Type=16 (Block data)](./class1.protocol.md#type16) event. It is sent by the node as a validation that it can handle the block data transfer. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (51,0,'CLASS1.PROTOCOL','**Not mandatory.** Only needed if a VSCP boot-loader algorithm is used.\n\nPart of the VSCP boot-loader functionality. This is the negative response after a node received a [CLASS1.PROTOCOL, Type=16 (Block data)](./class1.protocol.md#type16) event. It is sent by the node as an indication that it can NOT handle the block data transfer. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,1,'CLASS1.ALARM','General Event. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (1,1,'CLASS1.ALARM','Indicates a warning condition. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | **0**=off. **1**=on. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones. | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (2,1,'CLASS1.ALARM','Indicates an alarm condition.\n\n | Data byte | Description                                                        |\n | :-------: | ------------------------------------------------------------------ |\n |     0     | Alarm byte from standard register 128/0x80.                             |\n |     1     | Zone for which event applies to (0-255). 255 is all zones.         |\n |     2     | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |\n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (3,1,'CLASS1.ALARM','Alarm sound should be turned on or off. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | **0**=off. **1**=on. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones. | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (4,1,'CLASS1.ALARM','Alarm light should be turned on or off. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | **0**=off. **1**=on. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones. | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (5,1,'CLASS1.ALARM','Power has been lost or is available again. \n\n | Data byte | Description | \n | :---------: | -----------  | \n | 0 | **0**=off. **1**=on. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones. | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones.| \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (6,1,'CLASS1.ALARM','Emergency stop has been hit/activated. All systems on the zone/sub-zone should go to their inactive/safe state.\n \n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | **0**=off. **1**=on. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (7,1,'CLASS1.ALARM','Emergency pause has been hit/activated. All systems on the zone/sub-zone should go to their inactive/safe state but preserve there settings. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | **0**=off. **1**=on. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones. | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all subzones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (8,1,'CLASS1.ALARM','Issued after an emergency stop or pause in order for nodes to reset and start operating .\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | **0**=off. **1**=on. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones. | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (9,1,'CLASS1.ALARM','Issued after an emergency pause in order for nodes to start operating from where they left of without resetting their registers . \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | **0**=off. **1**=on. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (10,1,'CLASS1.ALARM','Issued after an alarm system has been armed. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | **0**=off. **1**=on. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (11,1,'CLASS1.ALARM','Issued after an alarm system has been disarmed. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | **0**=off. **1**=on. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (12,1,'CLASS1.ALARM','Issued when a watchdog has been triggered. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | index. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255.\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,2,'CLASS1.SECURITY','General Event.');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (1,2,'CLASS1.SECURITY','A motion has been detected. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | User defined data. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones. | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (2,2,'CLASS1.SECURITY','A glass break event has been detected. \n\n | Data byte | Description | \n | :---------: | -----------  | \n | 0 | User defined data. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones. | \n | 2  | Sub-zone for which event applies to (0-255). 255 is all subzones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (3,2,'CLASS1.SECURITY','A beam break event has been detected. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | User defined data. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (4,2,'CLASS1.SECURITY','A sensor tamper has been detected. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | User defined data. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (5,2,'CLASS1.SECURITY','A shock sensor event has been detected. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | User defined data. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (6,2,'CLASS1.SECURITY','A smoke sensor event has been detected. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | User defined data. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (7,2,'CLASS1.SECURITY','A heat sensor event has been detected. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | User defined data. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (8,2,'CLASS1.SECURITY','A panic switch event has been detected. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | User defined data. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (9,2,'CLASS1.SECURITY','Indicates a door sensor reports that a door is open. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | User defined data. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones. | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (10,2,'CLASS1.SECURITY','Indicates a window sensor reports that a window is open.\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | User defined data. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (11,2,'CLASS1.SECURITY','CO sensor has detected CO at non secure level\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | User defined data. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (12,2,'CLASS1.SECURITY','A frost sensor condition is detected\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | User defined data. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (13,2,'CLASS1.SECURITY','Flame is detected.\n\n | Data byte | Description | \n | :---------: | -----------  | \n | 0 | User defined data. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (14,2,'CLASS1.SECURITY','Low oxygen level detected.\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | User defined data. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (15,2,'CLASS1.SECURITY','Weight-detector triggered.\n\n | Data byte | Description | \n | :---------: | -----------  | \n | 0 | User defined data. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (16,2,'CLASS1.SECURITY','Water has been detected.\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | User defined data. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (17,2,'CLASS1.SECURITY','Condensation (humidity) detected.\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | User defined data. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones. | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (18,2,'CLASS1.SECURITY','Noise (sound) has been detected.\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | User defined data. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (19,2,'CLASS1.SECURITY','Harmful sound levels detected.\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | User defined data. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (20,2,'CLASS1.SECURITY','Tamper detected.\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | User defined data. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (21,2,'CLASS1.SECURITY','Authenticated. A user or a device has been authenticated.\n\n | Data byte | Description |\n | :---------: | ----------- |\n | 0 | User defined data. |\n | 1 | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (22,2,'CLASS1.SECURITY','Unauthenticated. A user or a device has failed authentication.\n\n | Data byte | Description |\n | :---------: | ----------- |\n | 0 | User defined data. |\n | 1 | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (23,2,'CLASS1.SECURITY','Authorized. A user or a device has been authorized.\n\n | Data byte | Description |\n | :---------: | ----------- |\n | 0 | User defined data. |\n | 1 | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (24,2,'CLASS1.SECURITY','Unauthorized. A user or a device has failed authorization.\n\n | Data byte | Description |\n | :---------: | ----------- |\n | 0 | User defined data. |\n | 1 | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (25,2,'CLASS1.SECURITY','ID Check. A user or a device has gone through an identification test and is either allowed or not allowed access according to bits in byte 0.\n\n | Data byte | Description |\n | :---------: | ----------- |\n | 0 | ID check bits. |\n | 1 | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |\n\n **ID Check bits**\n \n | Bit | Description |\n | :---------: | ----------- |\n | 0 | Authenticated if set to one. |\n | 1 | Authorized if set to one. |\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (26,2,'CLASS1.SECURITY','Valid pin. A valid pin has been entered by a device or user.\n\n | Data byte | Description |\n | :---------: | ----------- |\n | 0 | User defined data. |\n | 1 | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (27,2,'CLASS1.SECURITY','Invalid pin. An invalid pin has been entered by a device or user.\n\n | Data byte | Description |\n | :---------: | ----------- |\n | 0 | User defined data. |\n | 1 | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (28,2,'CLASS1.SECURITY','Pin warning. An invalid pin has been entered by a device or user and a warning has been given. This warning is typically a warning that the pin will be unusable if further failures are detected.\n\n | Data byte | Description |\n | :---------: | ----------- |\n | 0 | User defined data. |\n | 1 | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (29,2,'CLASS1.SECURITY','Pin error. An invalid pin has been entered by a device or user and it has failed so many times that the pin is now locked and unusable.\n\n | Data byte | Description |\n | :---------: | ----------- |\n | 0 | User defined data. |\n | 1 | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (30,2,'CLASS1.SECURITY','Valid password. A valid password has been entered by a device or user.\n\n | Data byte | Description |\n | :---------: | ----------- |\n | 0 | User defined data. |\n | 1 | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (31,2,'CLASS1.SECURITY','Invalid password. An invalid password has been entered by a device or user.\n\n | Data byte | Description |\n | :---------: | ----------- |\n | 0 | User defined data. |\n | 1 | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (32,2,'CLASS1.SECURITY','Password warning. An invalid password has been entered by a device or user and a warning has been given. This warning is typically a warning that the password will be unusable if further failures are detected.\n\n | Data byte | Description |\n | :---------: | ----------- |\n | 0 | User defined data. |\n | 1 | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (33,2,'CLASS1.SECURITY','Password error. An invalid password has been entered by a device or user and it has failed so many times that the password is now locked and unusable.\n\n | Data byte | Description |\n | :---------: | ----------- |\n | 0 | User defined data. |\n | 1 | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,10,'CLASS1.MEASUREMENT','This is a general (custom) measurement event that can be used if no other event is suitable. \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (1,10,'CLASS1.MEASUREMENT','This is a discrete value typical for a count. There is no unit for this measurement just a discrete value. \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (2,10,'CLASS1.MEASUREMENT','**Default unit:** Meter. \n\nThis is a measurement of a length or a distance.\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (3,10,'CLASS1.MEASUREMENT','**Default unit:** Kilogram.\n\nThis is a measurement of a mass. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (4,10,'CLASS1.MEASUREMENT','A time measurement.\n\n**Default unit:** Seconds.  \n**Opt. unit:** (1) Milliseconds. Absolute: (2) y-y-m-d-h-m-s (binary). String: (3) "HHMMSS". \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (5,10,'CLASS1.MEASUREMENT','**Default unit:** Ampere.\n\nThis is a measurement of an electric current. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (6,10,'CLASS1.MEASUREMENT','**Default unit:** Kelvin.  \n**Opt. unit:** Degree Celsius (1), Fahrenheit (2)\n\nThis is a measurement of a temperature. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (7,10,'CLASS1.MEASUREMENT','**Default unit:** Mole.\n\nThis is a measurement of an amount of a substance. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (8,10,'CLASS1.MEASUREMENT','**Default unit:** Candela.\n\nThis is a measurement of luminous intensity. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (9,10,'CLASS1.MEASUREMENT','\n**Default unit:** Hertz.\n\nThis is a measurement of regular events during a second. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (10,10,'CLASS1.MEASUREMENT','**Default unit:** becquerel.\n**Optional unit:** curie (1)\n\nThis is a measurement of rates of things, which happen randomly, or are unpredictable. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (11,10,'CLASS1.MEASUREMENT','**Default unit:** newton.\n\nThis is a measurement of force. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (12,10,'CLASS1.MEASUREMENT','**Default unit:** pascal.  \n**Opt. unit:** bar (1), psi (2)\n\nThis is a measurement of pressure. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (13,10,'CLASS1.MEASUREMENT','**Default unit:** Joule.  \n**Optional unit:** KWh (1)\n\nThis is a measurement of energy. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (14,10,'CLASS1.MEASUREMENT','**Default unit:** watt.  \n**Optional unit:** Horse power (1).\n\nThis is a measurement of power. \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (15,10,'CLASS1.MEASUREMENT','**Default unit:** coulomb.\n\nThis is a measurement electrical charge. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (16,10,'CLASS1.MEASUREMENT','**Default unit:** volt.\n\nThis is a measurement of electrical potential. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (17,10,'CLASS1.MEASUREMENT','**Default unit:** farad (F).\n\nThis is a measurement of electric capacitance.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (18,10,'CLASS1.MEASUREMENT','**Default unit:** ohm (Ω).\n\nThis is a measurement of resistance. \n\n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (19,10,'CLASS1.MEASUREMENT','**Default unit:** siemens.\n\nThis is a measurement of electrical conductance. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (20,10,'CLASS1.MEASUREMENT','**Default unit:** amperes per meter (H).  \n**Optional units:** teslas (B) (1)\n\nThis is a measurement of magnetic field strength. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (21,10,'CLASS1.MEASUREMENT','**Default unit:** weber (Wb).\n\nThis is a measurement of magnetic flux. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (22,10,'CLASS1.MEASUREMENT','**Default unit:** tesla (B).\n\n**Optional unit:** Gauss (1)\n\nThis is a measurement of flux density or field strength for magnetic fields (also called the magnetic induction). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (23,10,'CLASS1.MEASUREMENT','**Default unit:** henry (H).\n\nThis is a measurement of inductance. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (24,10,'CLASS1.MEASUREMENT','**Default unit:** Lumen (lm= cd * sr)\n\nThis is a measurement of luminous Flux. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (25,10,'CLASS1.MEASUREMENT','**Default unit:** lux (lx) ( lx = lm / m² )\n\nThis is used to express both Illuminance (incidence of light) and Luminous Emittance (emission of light). \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (26,10,'CLASS1.MEASUREMENT','**Default unit:** gray (Gy).   \n\n\nThis is a measurement of a radiation dose (Absorbed dose of ionizing radiation). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (27,10,'CLASS1.MEASUREMENT','**Default unit:** katal (kat).\n\nThis is a measurement of catalytic activity used in biochemistry. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (28,10,'CLASS1.MEASUREMENT','**Default unit:** cubic meter (m³)   \n**Opt. unit:** Liter (dm³) (1), decilitre (100 cm³) (2), centilitre (10 cm³) (3), millilitre (cm³) (4) where unit 4 is only available for Level II measurement events where units can hold this value.\n\nThis is a measurement of volume. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (29,10,'CLASS1.MEASUREMENT','**Default unit:** W/m2, watt per square meter. \n\nThis is a measurement of sound intensity (acoustic intensity). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (30,10,'CLASS1.MEASUREMENT','* **Default unit:** radian (rad) (Plane angles).   \n* **Opt Unit:** degree (1).\n* **Opt Unit:** arcminute (2).\n* **Opt Unit:** arcseconds (3).\n\nThis is a measurement of an angle. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (31,10,'CLASS1.MEASUREMENT','**Default unit:** Longitude.  \n**Opt. unit:** Latitude.\n\nThis is a (decimal) measurement of a position as of WGS 84. Normally given as a floating point value. See [./class1.gps.md](CLASS1.GPS) for a better candidate to use for position data.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (32,10,'CLASS1.MEASUREMENT','**Default unit:** Meters per second.   \n**Optional unit:** Kilometers per hour (1) Miles per hour (2)\n\nThis is a measurement of a speed. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (33,10,'CLASS1.MEASUREMENT','**Default unit:** Meters per second/second (m/s2).\n\nThis is a measurement of acceleration. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (34,10,'CLASS1.MEASUREMENT','**Default unit:** N/m.\n\nThis is a measurement of tension. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (35,10,'CLASS1.MEASUREMENT','**Default unit:** Relative percentage 0-100%.\n\nThis is a measurement of relative moistness (Humidity). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (36,10,'CLASS1.MEASUREMENT','**Default unit:** Cubic meters/second.   \n**Opt Unit:** Liters/Second.\n\nThis is a measurement of flow. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (37,10,'CLASS1.MEASUREMENT','**Default unit:** Thermal ohm K/W.\n\nThis is a measurement of thermal resistance. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (38,10,'CLASS1.MEASUREMENT','**Default unit:** dioptre (dpt) m-1.\n\nThis is a measurement of refractive (optical) power. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (39,10,'CLASS1.MEASUREMENT','**Default unit:**  pascal second\n**optional units** poiseuille (Pl) = 1, poise (P) = 2\n\nThis is a measurement of dynamic viscosity. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (40,10,'CLASS1.MEASUREMENT','**Default unit:** rayl (Pa·s/m)\n\nThis is a measurement of sound impedance. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (41,10,'CLASS1.MEASUREMENT','**Default unit:** Acoustic ohm Pa · s/ m³.\n\nThis is a measurement of sound resistance.\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (42,10,'CLASS1.MEASUREMENT','**Default unit:** daraf (f-1).\n\nThis is a measurement of electric elasticity. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (43,10,'CLASS1.MEASUREMENT','**Default unit:** talbot ( tb = lm * s) \n\nThis is a measurement of luminous energy.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (44,10,'CLASS1.MEASUREMENT','**Default unit:** cd / m²) (non SI unit = nit)\n\nThis is a measurement of luminance.\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (45,10,'CLASS1.MEASUREMENT','**Default unit:** mol/m3.\n\nThis is a measurement of chemical mol concentration. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (46,10,'CLASS1.MEASUREMENT','**Default unit:** kg/m3.\n\nThis is a measurement of chemical mass concentration. ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (47,10,'CLASS1.MEASUREMENT','Reserved\n\n\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (48,10,'CLASS1.MEASUREMENT','Reserved \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (49,10,'CLASS1.MEASUREMENT','**Default unit:** Kelvin.  \n**Opt. unit:** Degree Celsius (1), Fahrenheit (2)\n\nThis is a measurement of the Dew Point. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (50,10,'CLASS1.MEASUREMENT','**Default unit:** Relative value.\n\nThis is a relative value for a level measurement without a unit. It is just relative to the min/max value for the selected data representation, typically percentage or per mille or similar. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (51,10,'CLASS1.MEASUREMENT','**Default unit:** Meter.  \n**Opt. unit:** Feet(1), inches (2)\n\nAltitude in meters. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (52,10,'CLASS1.MEASUREMENT','**Default unit:** square meter (m²)\n\nArea in square meter. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (53,10,'CLASS1.MEASUREMENT','**Default unit:** watt per steradian ( W / sr )\n\nRadiated power per room angle. \n\n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (54,10,'CLASS1.MEASUREMENT','**Default unit:** watt per steradian per square metre ( W / (sr * m²) )\n\nThis is the radiant flux emitted, reflected, transmitted or received by a surface.\n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (55,10,'CLASS1.MEASUREMENT','**Default unit:** watt per square metre ( W / m² )\n\nPower emitted from or striking onto a surface or area. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (56,10,'CLASS1.MEASUREMENT','**Default unit:** watt per steradian per square metre per nm (W·sr-1·m-2·nm-1)    \n**Opt. unit:** watt per steradian per meter3 (W·sr-1·m-3) (1), watt per steradian per square metre per hertz (W·sr-1·m-3) (2)\n\nRadiance of a surface per unit frequency or wavelength.\n\n                        \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (57,10,'CLASS1.MEASUREMENT','**Default unit:** watt per square metre per nm (W·m-2·nm-1)   \n**Opt. unit:** watt per metre3 (W·m-3) (1), watt per square metre per hertz (W·m-2·Hz-1) (2)\n\nIrradiance of a surface per unit frequency or wavelength.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (58,10,'CLASS1.MEASUREMENT','**Default unit:** pascal (Pa) \n\nThis is a measurement of sound pressure (acoustic pressure). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (59,10,'CLASS1.MEASUREMENT','**Default unit:** pascal (Pa) \n\nSound energy density or sound density is the sound energy per unit volume.\n\n                        ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (60,10,'CLASS1.MEASUREMENT','**Default unit:** decibel (dB) \n\nSound level expressed in decibel. This event is supplied for convenience.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (61,10,'CLASS1.MEASUREMENT','**Default unit:** sievert (Sv).\n\n**Optional unit** rem (1)\n\nThis is a measurement of a radiation dose (Equivalent dose of ionizing radiation). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (62,10,'CLASS1.MEASUREMENT','**Default unit:** coulomb per kilogram (C/kg).   \n**Optional unit:** Röntgen/R (1)\n\nThis is a measurement of a radiation dose (Exposed dose of ionizing radiation). \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,11,'CLASS1.MEASUREMENTX1','\nThis is a general (custom) event that can be used if no other event is suitable. \n \n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,12,'CLASS1.MEASUREMENTX2','General Event.\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,13,'CLASS1.MEASUREMENTX3','General Event.\n\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,14,'CLASS1.MEASUREMENTX4','General Event.\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,15,'CLASS1.DATA','General event.\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (1,15,'CLASS1.DATA','General I/O value. First data byte defines format. \n\n | Data byte | Description                         | \n | :---------: | -----------                       | \n | 0         | Data coding.                        | \n | 1-7       | Data with format defined by byte 0. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (2,15,'CLASS1.DATA','General A/D value. First data byte defines format. \n\n | Data byte | Description                         | \n | :---------: | -----------                       | \n | 0         | Data coding.                        | \n | 1-7       | Data with format defined by byte 0. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (3,15,'CLASS1.DATA','General D/A value. First data byte defines format. \n\n | Data byte | Description                         | \n | :---------: | -----------                       | \n | 0         | Data coding.                        | \n | 1-7       | Data with format defined by byte 0. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (4,15,'CLASS1.DATA','Relative strength.  \n\n | Data byte | Description                         | \n | :---------: | -----------                       | \n | 0         | Data coding.                        | \n | 1-7       | Data with format defined by byte 0. | \n\n### Coding of units (Level I)\n\n | Code | Description  | \n | :----: | ----------- | \n | 0    | **Byte count = 2**: Min = 0, Max = 255 <br> **Byte count = 3**: Min = 0, Max = 65535 <br> and so on... | \n | 1    | db (decibel) | \n | 2    | dbV (decibel volts) | \n | 3    | Undefined | \n\nUnits for Level II are the same as for Level I for the first four units.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (5,15,'CLASS1.DATA','Signal Level is a relative strength value that (as default) has its maximum at 100 and minimum at 0 interpreted as a percentage. For a digital transmission Signal Level it can be used to give an indication of the analogue signal and [CLASS1.DATA, Type = 6, Signal Quality](./class1.data.md#type6) can be used to give an indication of the quality of the digital part as BER (Bit Error Ratio) for example.\n\n | Data byte | Description                         | \n | :---------: | -----------                         | \n | 0         | Data coding.                        | \n | 1-7       | Data with format defined by byte 0. | \n\n### Coding of units (Level I)\n | Code | Description                                                                                        | \n | :----: | -----------                                                                                        | \n | 0    | (0-100) percentage.                                                                               | \n | 1    | **Byte count = 2**: Min = 0, Max = 255<br>**Byte count = 3**: Min = 0, Max = 65535<br>  and so on... | \n\n\nUnits for Level II are the same as for Level I for the first four units.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (6,15,'CLASS1.DATA','Signal Quality be used to give an indication of the quality of the digital part as BER (Bit Error Ratio) for example.\n\n | Data byte | Description                         |\n | :---------: | -----------                       |\n | 0         | Data coding.                        |\n | 1-7       | Data with format defined by byte 0. |\n\n### Coding of units (Level I)\n\n | Code | Description                                                                                        |\n | :----: | -----------                                                                                        |\n | 0    | 0-100, Percent                                                                                     |\n | 1    | **Byte count = 2**: Min = 0, Max = 255  **Byte count = 3**: Min = 0, Max = 65535  and so on... |\n | 2    | dBm  |\n | 3    | To be defined |\n\nUnits for Level II are the same as for Level I for the first four units.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,20,'CLASS1.INFORMATION','General Event.');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (1,20,'CLASS1.INFORMATION','A button has been pressed/released. \n\n | Data byte | Description                                                                                                                                                        | \n | :---------: | -----------                                                                                                                                                        | \n | 0         | Bits 0,1,2 If 0 the button has been released. If 1 the button is pressed. If equal to 2 this is a key value (press followed by release). Bits 3-7 is repeats 0-32. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones                                                                                                          | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones                                                                                                  | \n | 3         | MSB of code for button.                                                                                                                                            | \n | 4         | LSB of code for button.                                                                                                                                            | \n | 5         | MSB of optional code-page.                                                                                                                                         | \n | 6         | LSB of optional code-page.                                                                                                                                         | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (2,20,'CLASS1.INFORMATION','A mouse movement has occurred. \n\n | Data byte | Description                                                                       | \n | :---------: | -----------                                                                       | \n | 0         | If zero absolute coordinates follow. If equal to one relative coordinates follow. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones                         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones                 | \n | 3         | MSB of normalized X-coordinate.                                                   | \n | 4         | LSB of normalized X-coordinate.                                                   | \n | 5         | MSB of normalized Y-coordinate.                                                   | \n | 6         | LSB of normalized Y-coordinate.                                                   | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (3,20,'CLASS1.INFORMATION','A node indicates that a condition is in its on state. Heater on, lights on are two examples. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | index. Often used as an index for channels within a module.        | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (4,20,'CLASS1.INFORMATION','A node indicates that a condition is in its off state. Heater off, lights off are two examples. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index.                                                             | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (5,20,'CLASS1.INFORMATION','A node tells the world that it is alive. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | User specified.                                                    | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (6,20,'CLASS1.INFORMATION','A node tells the world that it is terminating. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | User specified.                                                    | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nByte2 Sub-zone for which event applies to (0-255). 255 is all sub-zones.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (7,20,'CLASS1.INFORMATION','A node indicates that an open has occurred. This can be a door/window open, a modem line open etc. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | User specified.                                                    | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (8,20,'CLASS1.INFORMATION','A node indicates that a close has occurred. This can be a door/window close, a modem line closure etc. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | User specified.                                                    | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (9,20,'CLASS1.INFORMATION','Heartbeats can be used to indicate that a unit is alive or to send periodic data. This can be sent out at predefined intervals to indicate that the node is alive, however, it does not necessarily mean the node is functioning as it should. It simply states that the node is connected to the network. To check if a node is functioning, other properties such as a measurement event or registry should be used. This event should be sent as a response to a “Segment Status Heartbeat” (CLASS1.PROTOCOL, Type=1) in order to provide a method of finding out what is connected to the network. The data bytes from byte 3 and forward can be used to send a descriptive/user friendly name if desired.\n\n**Mandatory.** All nodes should send this event at least once each minute. A Level II node should normally not send this event but instead send [Level II node heartbeat](./class2.information.md#type2). Recommended interval is 30-60 seconds but in a node that need to sleep longer to save resources a longer interval can be used.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | User specified.                                                    | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (10,20,'CLASS1.INFORMATION','This indicates that the node has a condition that is below a configurable limit. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (11,20,'CLASS1.INFORMATION','This indicates that the node has a condition that is above a configurable limit. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (12,20,'CLASS1.INFORMATION','This can be used for slow pulse counts. This can be an S0-pulse interface or something similar. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (13,20,'CLASS1.INFORMATION','A node indicates that an error occurred. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (14,20,'CLASS1.INFORMATION','A node indicates that it has resumed operation. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (15,20,'CLASS1.INFORMATION','A node indicates that it has paused. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (16,20,'CLASS1.INFORMATION','A node indicates that it entered a sleeping state. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (17,20,'CLASS1.INFORMATION','The system should enter its morning state. This can be a user pressing a button to set his/her house to its morning state. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (18,20,'CLASS1.INFORMATION','The system should enter its day state. This can be a user pressing a button to set his/her house to its day state. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (19,20,'CLASS1.INFORMATION','The system should enter its afternoon state. This can be a user pressing a button to set his/her house to its afternoon state. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (20,20,'CLASS1.INFORMATION','The system should enter its evening state. This can be a user pressing a button to set his/her house to its evening state. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (21,20,'CLASS1.INFORMATION','The system should enter its night state. This can be a user pressing a button to set his/her house to its night state. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (22,20,'CLASS1.INFORMATION','The system should be on a temporary alert. This can be a user locking the door to go out to the waste bin or similar situation. An alarm system should not be activated in this situation. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (23,20,'CLASS1.INFORMATION','The system should be on a goodbye alert. This can be a user locking the door to go out for a days work or similar situation. All alarm systems should be activated in this situation. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (24,20,'CLASS1.INFORMATION','A node indicates that a stop event occurred. This can for example be a motor stopping. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (25,20,'CLASS1.INFORMATION','A node indicates that a start event occurred. This can be a motor starting. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (26,20,'CLASS1.INFORMATION','A node indicates that a reset occurred. This can be a node doing a warm start. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (27,20,'CLASS1.INFORMATION','A node indicates that a reset occurred. This can also be a node doing a warm start. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (28,20,'CLASS1.INFORMATION','A node indicates that a sleep event occurred. This can be a node going to its inactive state. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (29,20,'CLASS1.INFORMATION','A node indicates that a wakeup event occurred. This can be a node going to it awake state. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (30,20,'CLASS1.INFORMATION','A node indicates that the system should enter its dusk state. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (31,20,'CLASS1.INFORMATION','A node indicates that the system should enter its dawn state. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (32,20,'CLASS1.INFORMATION','A node indicates that its active. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (33,20,'CLASS1.INFORMATION','A node indicates that its inactive. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (34,20,'CLASS1.INFORMATION','A node indicates that its busy. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (35,20,'CLASS1.INFORMATION','A node indicates that its idle. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (36,20,'CLASS1.INFORMATION','A steam of information from a node can be reported with this event. This can be a serial RS-232 channel or some other sequential stream. \n\n | Data byte | Description                                                                                                                                                                                                                                  | \n | :---------: | -----------                                                                                                                                                                                                                                  | \n | 0         | Sequence number which is increased by one for every new event with stream data. The sequence number is increased for every frame sent going from 0 - 255 and back to 0 and so on if needed. A new stream starts with a sequence number of 0. | \n | 1-7       | Stream data.                                                                                                                                                                                                                                 | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (37,20,'CLASS1.INFORMATION','This event is used for cards, RFID''s, iButtons, GSM phones and other identification devices. The event is generated when the token device is attached/detached to/from the system. Level II has a counterpart to this event that can take more data. CLASS2.INFORMATION Type=1\n\nDepending on the Token device type a number of this event are sent on the segment with frame index increase for each event. The total expected number can be deduced from the type. \n\n | Data byte | Description                                                                                      | \n | :---------: | -----------                                                                                      | \n | 0         | Bit 0,1 - Event code. Bit 2-7 - Token device type code.                                          | \n | 1         | Zone.                                                                                            | \n | 2         | Sub-zone.                                                                                        | \n | 3         | Frame index (Increase by one for every frame sent out for one token activity. Start with zero ). | \n | 4-7       | Token data.                                                                                      | \n\n#####  Event codes\n\n | Code | Description           | \n | ---- | -----------           | \n | 0    | Touched and released. | \n | 1    | Touched.              | \n | 2    | Released.             | \n | 3    | Reserved.             | \n\n##### Token device type codes\n\n | Code  | Description                                                                                                                     | Size    \n | ----  | -----------                                                                                                                     | ----    \n | 0     | Unknown Token.                                                                                                                  | 128-bits | \n | 1     | iButton 64-bit token.                                                                                                           | 64-bits  | \n | 2     | RFID Token.                                                                                                                     | 64-bits  | \n | 3     | RFID Token.                                                                                                                     | 128-bits | \n | 4     | RFID Token.                                                                                                                     | 256-bits | \n | 5-8   | Reserved.                                                                                                                       |          | \n | 9     | ID/Credit card.                                                                                                                 | 128-bits | \n | 10-15 | Reserved.                                                                                                                       |          | \n | 16    | Biometric device.                                                                                                               | 256-bits | \n | 17    | Biometric device.                                                                                                               | 64-bits  | \n | 18    | Bluetooth device.                                                                                                               | 48-bits  | \n | 19    | GSM IMEI code (International Mobile Equipment Identity) AA-BBBBBB-CCCCCC-D packed in 64 bits. https://en.wikipedia.org/wiki/IMEI | 64-bits  | \n | 20    | GSM IMSI code (International Mobile Subscriber Identity) packed in 64 bits. https://en.wikipedia.org/wiki/IMSI                   | 64-bits  | \n | 21    | RFID Token.                                                                                                                     | 40-bits  | \n | 22    | RFID Token.                                                                                                                     | 32-bits  | \n | 23    | RFID Token.                                                                                                                     | 24-bits  | \n | 24    | RFID Token.                                                                                                                     | 16-bits  | \n | 25    | RFID Token.                                                                                                                     | 8-bits   | \n | 26-63 | Reserved.                         |          | ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (38,20,'CLASS1.INFORMATION','A steam of information from a node can be reported with this event. This can be a serial RS-232 channel or some other sequential stream. \n\n | Data byte | Description                                                                                                                                                                                                                                  | \n | :---------: | -----------                                                                                                                                                                                                                                  | \n | 0         | Zone.                                                                                                                                                                                                                                        | \n | 1         | Sub-zone.                                                                                                                                                                                                                                    | \n | 2         | Sequence number which is increased by one for every new event with stream data. The sequence number is increased for every frame sent going from 0 - 255 and back to 0 and so on if needed. A new stream starts with a sequence number of 0. | \n | 3-7       | Stream data.                                                                                                                                                                                                                                | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (39,20,'CLASS1.INFORMATION','This event can be used as a general confirm event for zoned and stream data. \n\n | Data byte | Description             | \n | :---------: | -----------           | \n | 0         | Zone.                   | \n | 1         | Sub-zone.               | \n | 2         | Sequence number byte    |\n | 3         | Class MSB.              | \n | 4         | Class LSB.              | \n | 5         | Type MSB.               | \n | 6         | Type LSB.               | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (40,20,'CLASS1.INFORMATION','Response/confirmation from ex. a dimmer control after a dimmer command or some other unit that change a level. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Relative or absolute level.                                        | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (41,20,'CLASS1.INFORMATION',' A node indicates that a warning condition occurred. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0         | Reserved level. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones. | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (42,20,'CLASS1.INFORMATION','A node indicates that a state change has occurred. Th numerical ID for the current state and the state that is about to become active is supplied. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | User specified.                                                    | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n | 3         | State changed from.                                                | \n | 4         | New State.                                                         | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (43,20,'CLASS1.INFORMATION','A node indicates that an action has been triggered by this event. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Action ID.                                                         | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (44,20,'CLASS1.INFORMATION','A node indicates that sunrise is detected/calculated. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | User specified.                                                    | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (45,20,'CLASS1.INFORMATION','A node indicates that sunset is detected/calculated. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | User specified.                                                    | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (46,20,'CLASS1.INFORMATION','This event is used to mark the start of a multi-frame data transfer. This can typically be a GPS received which sends a train of events from one GPS record. The index byte can be used to distinguish record between each other. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for record.                                                  | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n | 3         | Number of frames to follow or zero for not used.                   | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (47,20,'CLASS1.INFORMATION','This event is used to mark the end of a multi-frame data transfer. The index byte can be used to distinguish record between each other. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for record.                                                  | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (48,20,'CLASS1.INFORMATION','This event is used to tell the system that a pre-set configuration is active. Usually a response from a node after a CLASS1.CONTROL, Type=28 has been received by a node.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | User specified.                                                    | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n | 3         | Code for pre-set that has been set.                                | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (49,20,'CLASS1.INFORMATION','This event is used to tell the system that a detection of some kind has occurred. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index.                                                             | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nThe first byte is used as an index if a module have several channels or detectors. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (50,20,'CLASS1.INFORMATION','This event is used to tell the system that an overflow of some kind has occurred. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index.                                                             | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nThe first byte is used as an index if a module have several channels or detectors.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (51,20,'CLASS1.INFORMATION','This is meant to be used as a confirmation event for CLASS1.CONTROL, Type=33 events.\n\n | Data byte | Description                                                                                               | \n | :---------: | -----------                                                                                               | \n | 0         | Index.                                                                                                    | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                                | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                        | \n | 3,4,5,6,7 | Level as signed Integer. The range can be adjusted by the user by sending the needed number of bytes 1-5. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (52,20,'CLASS1.INFORMATION','Civil twilight is the period when the Sun is below the horizon but its center is less than 6 degrees below. The "Civil Twilight Starts" time is the dawn or civil dawn, with the center of the Sun at exactly 6 degrees below the horizon. Equally, the "Civil Twilight Ends" time is dusk or civil dusk, when the Sun is 6 degrees below the horizon in the evening.\n\nDuring civil twilight, the sky is still illuminated, and with clear weather it is brightest in the direction of the Sun. The Moon and the brightest stars and planets may be visible. It is usually bright enough for outdoor activities without additional lighting.\n\nNear the equator, where the Sun sets and rises in an almost vertical direction, the civil twilight period can last only 21 minutes, a very fast nightfall compared to the much longer periods at southern and northern latitudes. In regions north of 60°24'' N or south of 60°24'' S, there will be at least one night when it does not get darker than this.\n\nTechnically, the start and end times are when the true geocentric position of the Sun is 96 degrees from the zenith position.\n\nA node indicates that sunrise twilight time is detected/calculated. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | User specified.                                                    | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (53,20,'CLASS1.INFORMATION','A node indicates that sunset twilight time is detected/calculated.\n\nCivil twilight is the period when the Sun is below the horizon but its center is less than 6 degrees below. The "Civil Twilight Starts" time is the dawn or civil dawn, with the center of the Sun at exactly 6 degrees below the horizon. Equally, the "Civil Twilight Ends" time is dusk or civil dusk, when the Sun is 6 degrees below the horizon in the evening.\n\nDuring civil twilight, the sky is still illuminated, and with clear weather it is brightest in the direction of the Sun. The Moon and the brightest stars and planets may be visible. It is usually bright enough for outdoor activities without additional lighting.\n\nNear the equator, where the Sun sets and rises in an almost vertical direction, the civil twilight period can last only 21 minutes, a very fast nightfall compared to the much longer periods at southern and northern latitudes. In regions north of 60°24'' N or south of 60°24'' S, there will be at least one night when it does not get darker than this.\n\nTechnically, the start and end times are when the true geocentric position of the Sun is 96 degrees from the zenith position.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | User specified.                                                    | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (54,20,'CLASS1.INFORMATION','A node indicates that nautical sunrise twilight time is detected/calculated. \n\nNautical twilight is the period when the center of the Sun is between 6 and 12 degrees below the horizon, when bright stars are still visible in clear weather and the horizon is becoming visible. It is too dark to do outdoor activities without additional lighting.\n\nIn the morning, nautical twilight starts at nautical dawn, when the Sun rises above 12 degrees below the horizon; it ends when the Sun''s center reaches 6 degrees below the horizon. In the evening, nautical twilight begins when the Sun sinks below 6 degrees; it ends at nautical dusk, when the Sun is lower than 12 degrees below the horizon.\n\nFor locations north of 54°34'' N or south of 54°34'' S latitude, the Sun will never be lower than 12 degrees below the horizon for a period in the summer.\n\nTechnically, the start and end times are when the true geocentric position of the Sun is 102 degrees from the zenith position.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | User specified.                                                    | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (55,20,'CLASS1.INFORMATION','A node indicates that nautical sunset twilight time is detected/calculated.\n\nNautical twilight is the period when the center of the Sun is between 6 and 12 degrees below the horizon, when bright stars are still visible in clear weather and the horizon is becoming visible. It is too dark to do outdoor activities without additional lighting.\n\nIn the morning, nautical twilight starts at nautical dawn, when the Sun rises above 12 degrees below the horizon; it ends when the Sun''s center reaches 6 degrees below the horizon. In the evening, nautical twilight begins when the Sun sinks below 6 degrees; it ends at nautical dusk, when the Sun is lower than 12 degrees below the horizon.\n\nFor locations north of 54°34'' N or south of 54°34'' S latitude, the Sun will never be lower than 12 degrees below the horizon for a period in the summer.\n\nTechnically, the start and end times are when the true geocentric position of the Sun is 102 degrees from the zenith position.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | User specified.                                                    | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (56,20,'CLASS1.INFORMATION','A node indicates that astronomical sunrise twilight time is detected/calculated. \n\nAstronomical twilight is the period when the center of the Sun is between 12 and 18 degrees below the horizon. It starts at astronomical dawn, early in the morning when the Sun is higher than 18 degrees below the horizon. From this point, it will be difficult to observe certain faint stars, galaxies, and other objects because the Sun starts to illuminate the sky. Astronomical twilight ends at astronomical dusk in the late evening, when those faint objects again can be visible because the Sun is lower than 18 degrees below the horizon. In locations north of 48°24'' N or south of 48°24'', it never gets darker than this near the middle of the summer solstice (June or December).\n\nTechnically, the start and end times are when the true geocentric position of the Sun is 108 degrees from the zenith position, or directly above the observer.\n\nAstronomical twilight is the period when the center of the Sun is between 12 and 18 degrees below the horizon.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | User specified.                                                    | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (57,20,'CLASS1.INFORMATION','A node indicates that astronomical sunset twilight time is detected/calculated.\n\nAstronomical twilight is the period when the center of the Sun is between 12 and 18 degrees below the horizon. It starts at astronomical dawn, early in the morning when the Sun is higher than 18 degrees below the horizon. From this point, it will be difficult to observe certain faint stars, galaxies, and other objects because the Sun starts to illuminate the sky. Astronomical twilight ends at astronomical dusk in the late evening, when those faint objects again can be visible because the Sun is lower than 18 degrees below the horizon. In locations north of 48°24'' N or south of 48°24'', it never gets darker than this near the middle of the summer solstice (June or December).\n\nTechnically, the start and end times are when the true geocentric position of the Sun is 108 degrees from the zenith position, or directly above the observer.\n\nAstronomical twilight is the period when the center of the Sun is between 12 and 18 degrees below the horizon.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | User specified.                                                    | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (58,20,'CLASS1.INFORMATION','This event is used for reporting of a calculated noon (real noon).\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (59,20,'CLASS1.INFORMATION','Shutter is moving up.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (60,20,'CLASS1.INFORMATION','Shutter is moving down.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (61,20,'CLASS1.INFORMATION','Shutter is moving left.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (62,20,'CLASS1.INFORMATION','Shutter is moving right.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (63,20,'CLASS1.INFORMATION','Shutter reached top end.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (64,20,'CLASS1.INFORMATION','Shutter reached bottom end.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (65,20,'CLASS1.INFORMATION','Shutter reached middle end.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (66,20,'CLASS1.INFORMATION','Shutter reached preset end.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (67,20,'CLASS1.INFORMATION','Shutter reached preset left.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (68,20,'CLASS1.INFORMATION','Shutter reached preset right.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (69,20,'CLASS1.INFORMATION','Long click detected.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for device generating long click. Set to zero if not used.   | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (70,20,'CLASS1.INFORMATION','Single click detected.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for device generating single click. Set to zero if not used. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (71,20,'CLASS1.INFORMATION','Double click detected.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for device generating double click. Set to zero if not used. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (72,20,'CLASS1.INFORMATION','A device generated a date event. Time is UTC. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for device generating date. Set to zero if not used.         | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n | 3         | year century                                                       | \n | 4         | year                                                               | \n | 5         | month (1-12)                                                       | \n | 6         | day (1-31)                                                         | \n\nSee also [CLASS1.INFORMATION, Type=77](./class1.information.md#type77) which combines date and time in one event.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (73,20,'CLASS1.INFORMATION','A device generated a time event. Time is UTC. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for device generating time. Set to zero if not used.         | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n | 3         | Hour (0-23)                                                        | \n | 4         | minutes (0-59)                                                     | \n | 5         | seconds (0-60)                                                     | \n | 6         | milliseconds MSB (0-999)                                           | \n | 7         | milliseconds LSB (0-999)                                           | \n\nSee also [CLASS1.INFORMATION, Type=77](./class1.information.md#type77) which combines date and time in one event.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (74,20,'CLASS1.INFORMATION','A device generated a weekday event.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for device generating weekday info. Set to zero if not used. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n | 3         | Weekday ( 0 (Monday) - 6 (Sunday))                                 | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (75,20,'CLASS1.INFORMATION','A device got locked.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for device. Set to zero if not used.                         | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (76,20,'CLASS1.INFORMATION','A device got unlocked.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for device. Set to zero if not used.                         | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (77,20,'CLASS1.INFORMATION','A device generated a date/time event. Time is UTC. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for device. Set to zero if not used.                         | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n | 3 - 7     | Date/time in  five byte bit array.                                 | \n\n**Bitfields** \n\n | Year  | Month | Day   | Hour  | Minute | Second | \n | :----:  | :-----: | :---:   | :----:  | :------: | :------: | \n | 26-37 | 22-25 | 17-21 | 12-16 | 6-11   | 0-5    | \n\nBit 39 is bit 7 of data byte 4. Bit 0 is bit 0 of data byte 7.\n\nBit 39 and bit 38 is reserved.\n\n** Valid values**\n\n | Item    | Value range | \n | :----:    | :-----------: | \n | Year    | 0-4095      | \n | Month   | 1-12        | \n | Day     | 1-31        | \n | Hour    | 0-23        | \n | Minute  | 0-59        | \n | Seconds | 0-59        | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (78,20,'CLASS1.INFORMATION','A rising (edge) is detected.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for device. Set to zero if not used.                         | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (79,20,'CLASS1.INFORMATION','A falling (edge) is detected.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for device. Set to zero if not used.                         | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (80,20,'CLASS1.INFORMATION','Something has been updated.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for device. Set to zero if not used.                         | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (81,20,'CLASS1.INFORMATION','Something has been connected.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for device. Set to zero if not used.                         | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (82,20,'CLASS1.INFORMATION','Something has been disconnected.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for device. Set to zero if not used.                         | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (83,20,'CLASS1.INFORMATION','Something has been reconnected.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for device. Set to zero if not used.                         | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (84,20,'CLASS1.INFORMATION','Enter, something has been entered.\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | Index for device. Set to zero if not used. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones. | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (85,20,'CLASS1.INFORMATION','Exit, something has been exited.\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | Index for device. Set to zero if not used.| \n | 1 | Zone for which event applies to (0-255). 255 is all zones. | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,30,'CLASS1.CONTROL','General Event.');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (1,30,'CLASS1.CONTROL','Mute/Un-mute all sound generating nodes in a zone \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | If equal to zero no mute else mute.                                | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (2,30,'CLASS1.CONTROL','Turn on/off lamps on nodes in zone.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | If equal to zero off else on.                                      | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nSee also [CLASS1.CONTROL, Type=40](./class1.control.md#type40) and [CLASS1.CONTROL, Type=42](./class1.control.md#type41) which don''t use byte 0 but instead are separated in two distinct events.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (3,30,'CLASS1.CONTROL','Perform open on all nodes in zone. \n\n | Data byte | Description                                                         | \n | :---------: | -----------                                                         | \n | 0         | Optional byte that have a meaning given by the issuer of the event. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.          | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.  | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (4,30,'CLASS1.CONTROL','Perform close on all nodes in zone. \n\n | Data byte | Description                                                         | \n | :---------: | -----------                                                         | \n | 0         | Optional byte that have a meaning given by the issuer of the event. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.          | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.  | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (5,30,'CLASS1.CONTROL','Turn On a nodes in a zone/subzone. \n\n | Data byte | Description                                                         | \n | :---------: | -----------                                                         | \n | 0         | Optional byte that have a meaning given by the issuer of the event. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.          | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.  | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (6,30,'CLASS1.CONTROL','Turn Off a nodes in a zone/subzone. \n\n | Data byte | Description                                                         | \n | :---------: | -----------                                                         | \n | 0         | Optional byte that have a meaning given by the issuer of the event. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.          | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.  | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (7,30,'CLASS1.CONTROL','Start all nodes in a zone.\n\n | Data byte | Description                                                         | \n | :---------: | -----------                                                         | \n | 0         | Optional byte that have a meaning given by the issuer of the event. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.          | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.  | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (8,30,'CLASS1.CONTROL','Stop all nodes in zone. \n\n | Data byte | Description                                                         | \n | :---------: | -----------                                                         | \n | 0         | Optional byte that have a meaning given by the issuer of the event. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.          | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.  | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (9,30,'CLASS1.CONTROL','Perform Reset on all nodes in zone. \n\n | Data byte | Description                                                         | \n | :---------: | -----------                                                         | \n | 0         | Optional byte that have a meaning given by the issuer of the event. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.          | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.  | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (10,30,'CLASS1.CONTROL','Perform Interrupt on all nodes in zone. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Interrupt level. (0 – 255 , zero is lowest interrupt level. ).   | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (11,30,'CLASS1.CONTROL','Perform Sleep on all nodes in zone. \n\n | Data byte | Description                                                         | \n | :---------: | -----------                                                         | \n | 0         | Optional byte that have a meaning given by the issuer of the event. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.          | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.  | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (12,30,'CLASS1.CONTROL','Wakeup all nodes in zone. \n\n | Data byte | Description                                                         | \n | :---------: | -----------                                                         | \n | 0         | Optional byte that have a meaning given by the issuer of the event. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.          | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.  | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (13,30,'CLASS1.CONTROL','Resume all nodes in zone. \n\n | Data byte | Description                                                         | \n | :---------: | -----------                                                         | \n | 0         | Optional byte that have a meaning given by the issuer of the event. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.          | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.  | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (14,30,'CLASS1.CONTROL','Pause all nodes in zone. \n\n | Data byte | Description                                                         | \n | :---------: | -----------                                                         | \n | 0         | Optional byte that have a meaning given by the issuer of the event. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.          | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.  | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (15,30,'CLASS1.CONTROL','Activate all nodes in zone. \n\n | Data byte | Description                                                         | \n | :---------: | -----------                                                         | \n | 0         | Optional byte that have a meaning given by the issuer of the event. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.          | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.  | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (16,30,'CLASS1.CONTROL','Deactivate all nodes in zone. \n\n | Data byte | Description                                                         | \n | :---------: | -----------                                                         | \n | 0         | Optional byte that have a meaning given by the issuer of the event. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.          | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.  | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (17,30,'CLASS1.CONTROL','Reserved. ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (18,30,'CLASS1.CONTROL','Reserved. ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (19,30,'CLASS1.CONTROL','Reserved.');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (20,30,'CLASS1.CONTROL','Dim all dimmer devices on a segment to a specified dim value. \n\n | Data byte | Description                                                                             | \n | :---------: | -----------                                                                             | \n | 0         | Value (0 – 100) . 0 = off, 100 = full on. 254 dim down one step. 255 dim up one step. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                              | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                      | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (21,30,'CLASS1.CONTROL','This is typical for changing TV channels or for changing AV amp input source etc. \n\n | Data byte | Description                                                                                                                                                                                                                                                                                                                                               | \n | :---------: | -----------                                                                                                                                                                                                                                                                                                                                               | \n | 0         | A value between 0 and 127 indicates the channel number. A value between 128 to 157 is change down by the specified number of channels. A value between 160 to 191 is change up by the specified number of channels. A value of 255 means that this is an extended change channel event and that the channel number is sent in byte 3 and after if needed. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                                                                                                                                                                                                                                                                                | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                                                                                                                                                                                                                                                                        | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (22,30,'CLASS1.CONTROL','Change an absolute level. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Absolute level.                                                    | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (23,30,'CLASS1.CONTROL','\n Relative Change Level request\n \n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Relative level.                                                    | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (24,30,'CLASS1.CONTROL','Measurement Request\n\n| Data byte | Description                                                                                                                                                           | \n | :---------: | -----------                                                                                                                                                           | \n | 0         | Zero indicates all measurements supported by node should be sent (as separate events). Non-zero indicates a node specific index specifying which measurement to send. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                                                                                            | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                                                                                    | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (25,30,'CLASS1.CONTROL','Request to stream data\n\n | Data byte | Description                                                               | \n | :---------: | -----------                                                               | \n | 0         | Sequence number which is increase by one for each stream data event sent. | \n | 1-7       | Stream data.                                                              | \n\nUse this event for streamed data out from a node. The source is then given by the nickname. If a specific received is needed use Zoned Stream. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (26,30,'CLASS1.CONTROL','Synchronize events on a segment. \n\n | Data byte | Description                                                                                                                                  | \n | :---------: | -----------                                                                                                                                  | \n | 0         | Sensor index for a sensor within a module (see [data coding](./data_coding.md). 255 is all sensors. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                                                                   | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                                                           | \n\nThe sensor index can be used to index units within a module also or used as some other indexing schema. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (27,30,'CLASS1.CONTROL','Request streamed data from nodes identified by zone/subzone.\n\n | Data byte | Description                                                               | \n | :---------: | -----------                                                               | \n | 0         | Sequence number which is increase by one for each stream data event sent. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.        | \n | 3-7       | Stream data.                                                              | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (28,30,'CLASS1.CONTROL','Some nodes may have pre-set configurations to choose from. With this event a pre-set can be set for a zone/sub-zone.\n\nA node that receive and act on this event send CLASS1.INFORMATION, \n\nType=48 as a response event. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Code for pre-set to set.                                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (29,30,'CLASS1.CONTROL','Toggle the state of a node.\n\nNote: This may be a bad design option as it often demands that the state should be known for the node on beforehand.\n\n | Data byte | Description                                                         | \n | :---------: | -----------                                                         | \n | 0         | Optional byte that have a meaning given by the issuer of the event. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.          | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.  | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (30,30,'CLASS1.CONTROL','With this event it is possible to generate a timed pulse that is on for a specified time.\n\n | Data byte | Description                                                         |\n | :---------: | ----------- |\n | 0         | Optional byte that have a meaning given by the issuer of the event. |\n | 1         | Zone for which event applies to (0-255). 255 is all zones.      |\n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.  |\n | 3         | Control byte.                                                       |\n | 4-7       | Set time as a long with MSB in the first byte.                      |\n\n##### Control Byte\n\nThe control byte have the following bits defined\n\n | Bit | Description                                                          |\n | :---: | -----------                                                          |\n | 0-3 | Time code (see table below)                                          |\n | 4   | Reserved                                                             |\n | 5   | Reserved                                                             |\n | 6   | Send on event ( Class=20 Type = 3 (0x03) On ) when pulse goes on.    |\n | 7   | Send off event ( Class=20 Type = 4 (0x04) Off ) when pulse goes off. |\n\n##### Time code\n\n | Code | Description                     |\n | :----: | -----------                     |\n | 0    | Time specified in microseconds. |\n | 1    | Time specified in milliseconds. |\n | 2    | Time specified in seconds.      |\n | 3    | Time specified in minutes.      |\n | 4    | Time specified in hours.        |\n | 5    | Time specified in days.         |\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (31,30,'CLASS1.CONTROL','With this event it is possible to generate a timed pulse that is off for a specified time.\n\n | Data byte | Description                                                         | \n | :---------: | -----------                                                         | \n | 0         | Optional byte that have a meaning given by the issuer of the event. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.          | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.  | \n | 3         | Control byte.                                                       | \n | 4-7       | Set time as a long with MSB in the first byte.                      | \n\n##### Control Byte\n\nThe control byte have the following bits defined\n\n | Bit | Description                                                          | \n | :---: | -----------                                                          | \n | 0-3 | Time code (see table below)                                          | \n | 4   | Reserved                                                             | \n | 5   | Reserved                                                             | \n | 6   | Send on event ( Class=20 Type = 3 (0x03) On ) when pulse goes on.    | \n | 7   | Send off event ( Class=20 Type = 4 (0x04) Off ) when pulse goes off. | \n\n##### Time code\n\n | Code | Description                     | \n | :----: | -----------                     | \n | 0    | Time specified in microseconds. | \n | 1    | Time specified in milliseconds. | \n | 2    | Time specified in seconds.      | \n | 3    | Time specified in minutes.      | \n | 4    | Time specified in hours.        | \n | 5    | Time specified in days.         | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (32,30,'CLASS1.CONTROL','Set country and language.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Country/Language code.                                             | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n | 3-7       | Country/Language code specific                                     | \n\n | Language code | Description          | Example                                           | \n | :---------: | -----------          | -------                                           | \n | 0             | Custom coded system  | Byte 3 = 0 English, Byte 3 = 1 German or similar. | \n | 1             | ISO 639-1            | nl for Dutch, en for English.                     | \n | 2             | ISO 639-2/T          | nid for Dutch, eng for English.                   | \n | 3             | ISO 639-2/B          | dut for Dutch, eng for English.                   | \n | 4             | ISO 639-3            | nid for Dutch, eng for English.                   | \n | 5             | IETF (RFC-5646/4647) | en-US for American English. en-GB British.        | \n\n\nISO codes can be found [here](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes)\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (33,30,'CLASS1.CONTROL','Big Change level can be used in situations when the one byte level of CLASS1.CONTROL, Type=22 is not enough.\n\n | Data byte | Description  | \n | :---------: | -----------   | \n | 0         | Index        | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.   | \n | 3-7       | Level as signed integer. The range can be adjusted by the user by sending just the needed number of bytes (1-5) which form the signed integer (MSB first). | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (34,30,'CLASS1.CONTROL','Move shutter up.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index.                                                             | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (35,30,'CLASS1.CONTROL','Move shutter down.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index.                                                             | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (36,30,'CLASS1.CONTROL','Move shutter left.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index.                                                             | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (37,30,'CLASS1.CONTROL','Move shutter right.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index.                                                             | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (38,30,'CLASS1.CONTROL','Move shutter to middle position.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index.                                                             | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (39,30,'CLASS1.CONTROL','Move shutter to preset position.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index.                                                             | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n | 3         | Position 0-100.                                                    | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (40,30,'CLASS1.CONTROL','Turn on all lamps in a zone.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         |\tOptional byte that have a meaning given by the issuer of the event.| \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nSee also [CLASS1.CONTROL, Type=2](./class1.control.md#type2)\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (41,30,'CLASS1.CONTROL','Turn off all lamps in a zone.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         |\tOptional byte that have a meaning given by the issuer of the event.| \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nSee also [CLASS1.CONTROL, Type=2](./class1.control.md#type2)\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (42,30,'CLASS1.CONTROL','Lock devices in a zone.\n\n | Data byte | Description                                                        |\n | :---------: | -----------                                                      |\n | 0         |\tOptional byte that have a meaning given by the issuer of the event.| \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (43,30,'CLASS1.CONTROL','Unlock devices in a zone.\n\n | Data byte | Description                                                        |\n | :---------: | -----------                                                        |\n | 0         |\tOptional byte that have a meaning given by the issuer of the event.| \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (44,30,'CLASS1.CONTROL','With this event it is possible to set duty cycle output such as PWM.\n\n | Data byte | Description   |\n | :---------: | ----------- |\n | 0         | Repeat/counter: 0=repeat forever, >0 number of repeats |\n | 1         | Zone for which event applies to (0-255). 255 is all zones.      |\n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.  |\n | 3         | Control byte.  |\n | 4         | Time-On MSB |\n | 5         | Time-On LSB |\n | 6         | Time-Off MSB |\n | 7         | Time-Off LSB |\n\n##### Control Byte\n\nThe control byte have the following bits defined\n\n | Bit | Description |\n | :---: | ----------- |\n | 0-3 | Time code (see table below) |\n | 4   | Reserved  |\n | 5   | Reserved  |\n | 6   | Reserved  |\n | 7   | Reserved  |\n\n##### Time code\n\n | Code | Description                     |\n | :----: | -----------                   |\n | 0    | Time specified in microseconds. |\n | 1    | Time specified in milliseconds. |\n | 2    | Time specified in seconds.      |\n | 3    | Time specified in minutes.      |\n | 4    | Time specified in hours.        |\n | 5    | Time specified in days.         |\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (45,30,'CLASS1.CONTROL','Lock devices with token.\n\n | Data byte | Description                                                        |\n | :---------: | -----------                                                      |\n | 0         |\tOptional byte that have a meaning given by the issuer of the event.| \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |\n | 3-7 | Token. This token can be 1-5 bytes and length of event is set accordingly. It should be interpreted as an unsigned integer in the range 0-1099511627775. MSB byte is stored in first byte. |\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (46,30,'CLASS1.CONTROL','Unlock devices with token.\n\n | Data byte | Description                                                        |\n | :---------: | -----------                                                      |\n | 0         |\tOptional byte that have a meaning given by the issuer of the event.| \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |\n | 3-7 | Token. This token can be 1-5 bytes and length of event is set accordingly. It should be interpreted as an unsigned integer in the range 0-1099511627775. MSB byte is stored in first byte. |\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (47,30,'CLASS1.CONTROL','Set security level.\n\n | Data byte | Description                                                        |\n | :---------: | -----------                                                      |\n | 0         | Security level to set. 0-255 (Higher value is higher security level).  |\n | 1         | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (48,30,'CLASS1.CONTROL','Set security pin.\n\n | Data byte | Description                                                        |\n | :---------: | -----------                                                      |\n | 0         |\tOptional byte that have a meaning given by the issuer of the event.| \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |\n | 3-7 | Security pin. This pin can be 1-5 bytes and length of event is set accordingly. It should be interpreted as an unsigned integer in the range 0-1099511627775. MSB byte is stored in first byte. |\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (49,30,'CLASS1.CONTROL','Set security password.\n\n | Data byte | Description                                                        |\n | :---------: | -----------                                                      |\n | 0         |\tOptional byte that have a meaning given by the issuer of the event.| \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |\n | 3-7 | Security password. This password can be 1-5 bytes and length of event is set accordingly. It should be interpreted as an UTF-8 string with a length set bt event data length - 3 |\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (50,30,'CLASS1.CONTROL','Set security token.\n\n | Data byte | Description                                                        |\n | :---------: | -----------                                                      |\n | 0         |\tOptional byte that have a meaning given by the issuer of the event.| \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |\n | 3-7 | Token. This token can be 1-5 bytes and length of event is set accordingly. It should be interpreted as an unsigned integer in the range 0-1099511627775. MSB byte is stored in first byte. |\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (51,30,'CLASS1.CONTROL','Request new security token.\n\n | Data byte | Description                                                        |\n | :---------: | -----------                                                      |\n | 0         |\tOptional byte that have a meaning given by the issuer of the event.| \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |\n \n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,40,'CLASS1.MULTIMEDIA','General Event.');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (1,40,'CLASS1.MULTIMEDIA','This is for controlling playback functionality \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Function (See below)                                               | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\n##### Function Codes\n\n | Code | Description         | \n | :----: | -----------         | \n | 0    | Stop                | \n | 1    | Pause               | \n | 2    | Play                | \n | 3    | Forward             | \n | 4    | Rewind              | \n | 5    | Fast Forward        | \n | 6    | Fast Rewind         | \n | 7    | Next Track          | \n | 30   | Previous Track      | \n | 31   | Toggle repeat mode  | \n | 32   | Repeat mode ON      | \n | 33   | Repeat mode OFF     | \n | 34   | Toggle Shuffle mode | \n | 35   | Shuffle ON          | \n | 36   | Shuffle mode OFF    | \n | 37   | Fade in, Play       | \n | 38   | Fade out, Stop      | \n\nAppropriate **CLASS1.INFORMATION** events should be sent from the controlled device as response to this event. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (2,40,'CLASS1.MULTIMEDIA','This is typically for navigation functions or DVD controls \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Function                                                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\n##### Function Codes\n\n | Code    | Description                                                                            | \n | :----:    | -----------                                                                            | \n | 0..9    | 0..9 keys                                                                              | \n | 10      | 10+ key                                                                                | \n | 20      | OK                                                                                     | \n | 21      | Left                                                                                   | \n | 22      | Right                                                                                  | \n | 23      | Up                                                                                     | \n | 24      | Down                                                                                   | \n | 25      | Menu                                                                                   | \n | 26      | Selecting                                                                              | \n | 65—90 | A..Z Keys                                                                              | \n | 97..122 | a-z keys (can''t use ASCII hex as numbers are too large so this is the next best thing) | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (3,40,'CLASS1.MULTIMEDIA','This is typically for adjusting the contrast level of a display device \n\n | Data byte | Description                                                                                                                                                                                                                                                                                                                                                                | \n | :---------: | -----------                                                                                                                                                                                                                                                                                                                                                                | \n | 0         | A value between 0 and 127 indicates the specific contrast level to set. A value between 128 and 159 is change down by the specified number of contrast levels. A value between 160 and 191 is change up by the specified number of contrast levels. A value of 255 means that this is and extended event and that the specific contrast level is sent in byte 3 and after. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                                                                                                                                                                                                                                                                                                 | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                                                                                                                                                                                                                                                                                         | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (4,40,'CLASS1.MULTIMEDIA','This is typically for adjusting the focus settings of a display device \n\n | Data byte | Description                                                                                                                                                                                                                                                                                                                                                    | \n | :---------: | -----------                                                                                                                                                                                                                                                                                                                                                    | \n | 0         | A value between 0 and 127 indicates the specific focus level to set. A value between 128 and 159 is change down by the specified number of focus levels. A value between 160 and 191 is change up by the specified number of focus levels. A value of 255 means that this is and extended event and that the specific focus level is sent in byte 3 and after. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                                                                                                                                                                                                                                                                                     | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                                                                                                                                                                                                                                                                             | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (5,40,'CLASS1.MULTIMEDIA','This is typically for adjusting the tint settings of a display device \n\n | Data byte | Description                                                                                                                                                                                                                                                                                                                                                | \n | :---------: | -----------                                                                                                                                                                                                                                                                                                                                                | \n | 0         | A value between 0 and 127 indicates the specific tint level to set. A value between 128 and 159 is change down by the specified number of tint levels. A value between 160 and 191 is change up by the specified number of tint levels. A value of 255 means that this is and extended event and that the specific tint level is sent in byte 3 and after. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                                                                                                                                                                                                                                                                                 | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                                                                                                                                                                                                                                                                         | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (6,40,'CLASS1.MULTIMEDIA','This is typically for adjusting the color balance settings of a display device. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (7,40,'CLASS1.MULTIMEDIA','This is typically for adjusting the tint settings of a display device \n\n | Data byte | Description                                                                                                                                                                                                                                                                                                                                                                        | \n | :---------: | -----------                                                                                                                                                                                                                                                                                                                                                                        | \n | 0         | A value between 0 and 127 indicates the specific brightness level to set. A value between 128 and 159 is change down by the specified number of brightness levels. A value between 160 and 191 is change up by the specified number of brightness levels. A value of 255 means that this is and extended event and that the specific brightness level is sent in byte 3 and after. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                                                                                                                                                                                                                                                                                                         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                                                                                                                                                                                                                                                                                                 | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (8,40,'CLASS1.MULTIMEDIA','This is typically for adjusting the hue settings of a display device \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | A value between 0 and 127 indicates the specific hue level to set. A value between 128 and 159 is change down by the specified number of hue levels. A value between 160 and 191 is change up by the specified number of hue levels. A value of 255 means that this is and extended event and that the specific hue level is sent in byte 3 and after. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (9,40,'CLASS1.MULTIMEDIA','This is typically for adjusting the bass level settings of a sound device. Depending on the implementation, this could automatically adjust the treble level. To adjust left and right bass levels, a node would have to use separate zones or sub-zones for left and right. \n\n | Data byte | Description                                                                                                                                                                                                                                                                                                                                                | \n | :---------: | -----------                                                                                                                                                                                                                                                                                                                                                | \n | 0         | A value between 0 and 127 indicates the specific bass level to set. A value between 128 and 159 is change down by the specified number of bass levels. A value between 160 and 191 is change up by the specified number of bass levels. A value of 255 means that this is and extended event and that the specific bass level is sent in byte 3 and after. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                                                                                                                                                                                                                                                                                 | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                                                                                                                                                                                                                                                                         | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (10,40,'CLASS1.MULTIMEDIA','This is typically for adjusting the treble level settings of a sound device. Depending on the implementation, this could automatically adjust the bass level. To adjust left and right treble levels, a node would have to use separate zones or sub-zones for left and right. \n\n | Data byte | Description                                                                                                                                                                                                                                                                                                                                                          | \n | :---------: | -----------                                                                                                                                                                                                                                                                                                                                                          | \n | 0         | 0 A value between 0 and 127 indicates the specific treble level to set. A value between 128 and 159 is change down by the specified number of treble levels. A value between 160 and 191 is change up by the specified number of treble levels. A value of 255 means that this is and extended event and that the specific treble level is sent in byte 3 and after. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                                                                                                                                                                                                                                                                                           | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                                                                                                                                                                                                                                                                                   | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (11,40,'CLASS1.MULTIMEDIA','This is typically for adjusting the master volume level. This could be used for adjusting the level for all speakers. \n\n | Data byte | Description                                                                                                                                                                                                                                                                                                                                                        | \n | :---------: | -----------                                                                                                                                                                                                                                                                                                                                                        | \n | 0         | A value between 0 and 127 indicates the specific volume level to set. A value between 128 and 159 is change down by the specified number of volume levels. A value between 160 and 191 is change up by the specified number of volume levels. A value of 255 means that this is and extended event and that the specific volume level is sent in byte 3 and after. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                                                                                                                                                                                                                                                                                         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                                                                                                                                                                                                                                                                                 | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (12,40,'CLASS1.MULTIMEDIA','This is typically for adjusting the front speaker volume level. This usually means the two front speakers as opposed to the single center speaker. \n\n | Data byte | Description                                                                                                                                                                                                                                                                                                                                                        | \n | :---------: | -----------                                                                                                                                                                                                                                                                                                                                                        | \n | 0         | A value between 0 and 127 indicates the specific volume level to set. A value between 128 and 159 is change down by the specified number of volume levels. A value between 160 and 191 is change up by the specified number of volume levels. A value of 255 means that this is and extended event and that the specific volume level is sent in byte 3 and after. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                                                                                                                                                                                                                                                                                         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                                                                                                                                                                                                                                                                                 | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (13,40,'CLASS1.MULTIMEDIA','This is typically for adjusting the front speaker volume level. This usually means the single center speaker as opposed to the two front speakers. \n\n | Data byte | Description                                                                                                                                                                                                                                                                                                                                                        | \n | :---------: | -----------                                                                                                                                                                                                                                                                                                                                                        | \n | 0         | A value between 0 and 127 indicates the specific volume level to set. A value between 128 and 159 is change down by the specified number of volume levels. A value between 160 and 191 is change up by the specified number of volume levels. A value of 255 means that this is and extended event and that the specific volume level is sent in byte 3 and after. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                                                                                                                                                                                                                                                                                         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                                                                                                                                                                                                                                                                                 | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (14,40,'CLASS1.MULTIMEDIA','This is typically for adjusting the rear speaker volume level. \n\n | Data byte | Description                                                                                                                                                                                                                                                                                                                                                        | \n | :---------: | -----------                                                                                                                                                                                                                                                                                                                                                        | \n | 0         | A value between 0 and 127 indicates the specific volume level to set. A value between 128 and 159 is change down by the specified number of volume levels. A value between 160 and 191 is change up by the specified number of volume levels. A value of 255 means that this is and extended event and that the specific volume level is sent in byte 3 and after. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                                                                                                                                                                                                                                                                                         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                                                                                                                                                                                                                                                                                 | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (15,40,'CLASS1.MULTIMEDIA','This is typically for adjusting the side speaker volume level. \n\n | Data byte | Description                                                                                                                                                                                                                                                                                                                                                        | \n | :---------: | -----------                                                                                                                                                                                                                                                                                                                                                        | \n | 0         | A value between 0 and 127 indicates the specific volume level to set. A value between 128 and 159 is change down by the specified number of volume levels. A value between 160 and 191 is change up by the specified number of volume levels. A value of 255 means that this is and extended event and that the specific volume level is sent in byte 3 and after. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                                                                                                                                                                                                                                                                                         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                                                                                                                                                                                                                                                                                 | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (16,40,'CLASS1.MULTIMEDIA','These are reserved for other future speaker combinations');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (17,40,'CLASS1.MULTIMEDIA','These are reserved for other future speaker combinations');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (18,40,'CLASS1.MULTIMEDIA','These are reserved for other future speaker combinations');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (19,40,'CLASS1.MULTIMEDIA','These are reserved for other future speaker combinations');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (20,40,'CLASS1.MULTIMEDIA','This is typically for selecting a disk for playback \n\n | Data byte | Description                                                                                                                                                                                                                                                                                                                                                                 | \n | :---------: | -----------                                                                                                                                                                                                                                                                                                                                                                 | \n | 0         | A value between 0 and 127 indicates the specific disk number. A value between 128 and 159 is change down by the specified number of disks. A value between 160 and 191 is change up by the specified number of disks. A value of 200 means select a random disk. A value of 255 means that this is and extended event and that the disk number is sent in byte 3 and after. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                                                                                                                                                                                                                                                                                                  | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                                                                                                                                                                                                                                                                                          | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (21,40,'CLASS1.MULTIMEDIA','This is typically for selecting a track for playback \n\n | Data byte | Description                                                                                                                                                                                                                                                                                                                                                             | \n | :---------: | -----------                                                                                                                                                                                                                                                                                                                                                             | \n | 0         | A value between 0 and 127 indicates the track number. A value between 128 and 159 is change down by the specified number of tracks. A value between 160 and 191 is change up by the specified number of tracks. A value of 200 means select a random track. A value of 255 means that this is and extended event and that the track number is sent in byte 3 and after. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                                                                                                                                                                                                                                                                                              | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                                                                                                                                                                                                                                                                                      | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (22,40,'CLASS1.MULTIMEDIA','This is typically for selecting an album or play-list for playback \n\n | Data byte | Description                                                                                                                                                                                                                                                                                                                                                                                  | \n | :---------: | -----------                                                                                                                                                                                                                                                                                                                                                                                  | \n | 0         | A value between 0 and 127 indicates the album/play-list number. A value between 128 and 159 is change down by the specified number of albums/play-lists. A value between 160 and 191 is change up by the specified number of albums. A value of 200 means select a random album. A value of 255 means that this is and extended event and that the album number is sent in byte 3 and after. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                                                                                                                                                                                                                                                                                                                   | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                                                                                                                                                                                                                                                                                                           | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (23,40,'CLASS1.MULTIMEDIA','This is typically for selecting a TV Channel \n\n | Data byte | Description                                                                                                                                                                                                                                                                                                                                                                       | \n | :---------: | -----------                                                                                                                                                                                                                                                                                                                                                                       | \n | 0         | A value between 0 and 127 indicates the channel number. A value between 128 and 159 is change down by the specified number of channels. A value between 160 and 191 is change up by the specified number of channels. A value of 200 means select a random channel. A value of 255 means that this is and extended event and that the channel number is sent in byte 3 and after. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                                                                                                                                                                                                                                                                                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                                                                                                                                                                                                                                                                                                | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (24,40,'CLASS1.MULTIMEDIA','This is typically for selecting a page of a film \n\n | Data byte | Description                                                                                                                                                                                                                                                                                                                                                        | \n | :---------: | -----------                                                                                                                                                                                                                                                                                                                                                        | \n | 0         | A value between 0 and 127 indicates the page number. A value between 128 and 159 is change down by the specified number of pages. A value between 160 and 191 is change up by the specified number of pages. A value of 200 means select a random page. A value of 255 means that this is and extended event and that the page number is sent in byte 3 and after. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                                                                                                                                                                                                                                                                                         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                                                                                                                                                                                                                                                                                 | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (25,40,'CLASS1.MULTIMEDIA','This is typically for selecting a chapter of a film \n\n | Data byte | Description                                                                                                                                                                                                                                                                                                                                                                       | \n | :---------: | -----------                                                                                                                                                                                                                                                                                                                                                                       | \n | 0         | A value between 0 and 127 indicates the chapter number. A value between 128 and 159 is change down by the specified number of chapters. A value between 160 and 191 is change up by the specified number of chapters. A value of 200 means select a random chapter. A value of 255 means that this is and extended event and that the chapter number is sent in byte 3 and after. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                                                                                                                                                                                                                                                                                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                                                                                                                                                                                                                                                                                                | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (26,40,'CLASS1.MULTIMEDIA','This is for controlling screen format of a display device \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | 0 = Auto, 1 = Just, 2 = Norma,l 3 = Zoom.                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (27,40,'CLASS1.MULTIMEDIA','This is for controlling the input source of a playback device \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Device code                                                        | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\n##### Device Code\n\n | Code | Description                        | \n | :----: | -----------                        | \n | 0    | Auto                               | \n | 1    | CD                                 | \n | 2    | AUX                                | \n | 3    | DVD                                | \n | 4    | SAT                                | \n | 5    | VCR                                | \n | 6    | Tape                               | \n | 7    | Phone                              | \n | 8    | Tuner                              | \n | 9    | FM                                 | \n | 10   | AM                                 | \n | 11   | Radio (9 – 10 are more specific) | \n | 16   | Component                          | \n | 17   | VGA                                | \n | 18   | SVideo                             | \n | 19   | Video1                             | \n | 20   | Video2                             | \n | 21   | Video3                             | \n | 22   | Sat1                               | \n | 23   | Sat2                               | \n | 24   | Sat3                               | \n | 25   | mp3 source                         | \n | 26   | mpeg source                        | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (28,40,'CLASS1.MULTIMEDIA','This is for controlling the output of a playback device \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Output Code                                                        | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\n##### Output Code\n\n | Code | Description | \n | :----: | ----------- | \n | 0    | Auto        | \n | 16   | Component   | \n | 17   | VGA         | \n | 18   | SVideo      | \n | 19   | Video1      | \n | 20   | Video2      | \n | 21   | Video3      | \n | 30   | HDMI1       | \n | 32   | HDMI2       | \n | 32   | HDMI3       | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (29,40,'CLASS1.MULTIMEDIA','Control a recording device. \n\n | Data byte | Description                                                            | \n | :---------: | -----------                                                            | \n | 0         | 0 - Start to record, 1 - Stop record, 2 - Disable, AGC 3 - Enable AGC. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.             | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.     | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (30,40,'CLASS1.MULTIMEDIA','Control a recording device. \n\n | Data byte | Description                                                                                                                                                                                                                                                                                                                                                                | \n | :---------: | -----------                                                                                                                                                                                                                                                                                                                                                                | \n | 0         | A value between 0 and 127 indicates the specific contrast level to set. A value between 128 and 159 is change down by the specified number of contrast levels. A value between 160 and 191 is change up by the specified number of contrast levels. A value of 255 means that this is and extended event and that the specific contrast level is sent in byte 3 and after. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                                                                                                                                                                                                                                                                                                 | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                                                                                                                                                                                                                                                                                         | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (40,40,'CLASS1.MULTIMEDIA','This is typically for accessing TIVO functions \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | TIVO Code                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\n##### TIVO Code\n\n | Code | Description   | \n | :----: | -----------   | \n | 1    | Box Office    | \n | 2    | Services      | \n | 3    | Program Guide | \n | 4    | Text          | \n | 5    | Info          | \n | 6    | Help          | \n | 7    | Backup        | \n | 20   | Red key       | \n | 21   | Yellow key    | \n | 22   | Green key     | \n | 23   | Blue key      | \n | 24   | White key     | \n | 25   | Black key     | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (50,40,'CLASS1.MULTIMEDIA','Get the title for the current active media. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (51,40,'CLASS1.MULTIMEDIA','This is for controlling the position in the stream/file of a playback device \n\n | Data byte | Description                                                                                                                                                                                         | \n | :---------: | -----------                                                                                                                                                                                         | \n | 0         | Reserved                                                                                                                                                                                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                                                                                                                          | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                                                                                                                  | \n | 3-7       | Position in milliseconds, This is an integer with a size specified by the event size. This 0xFF, 0xFFFF, 0xFFFFFF, 0xFFFFFFFF and 0xFFFFFFFFFF is the maximum that can be sent for different sizes. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (52,40,'CLASS1.MULTIMEDIA','Get various media information from a device. \n\n | Data byte | Description                                                                                                                                                                          | \n | :---------: | -----------                                                                                                                                                                          | \n | 0         | Type of media information requested. 1 - Current Title, 1 - Get Folders, 2 - Get Disks, 3 - Get Tracks, 4 - Get Albums/Play list,s 5 - Get Channels, 6 - Get Pages, 7 - Get Chapters | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                                                                                                           | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                                                                                                   | \n\nIf a device does not support the requested type of media information its sends a CLASS1.INFORMATION error event or does not response. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (53,40,'CLASS1.MULTIMEDIA','Remove an item from an album. \n\n | Data byte | Description                                                                                                                                                       | \n | :---------: | -----------                                                                                                                                                       | \n | 0         | 0-128 - Pos to remove from album/play-list A value of 255 means that this is and extended event and that the specific contrast level is sent in byte 3 and after. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                                                                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                                                                                | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (54,40,'CLASS1.MULTIMEDIA','Remove all items from an album. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (55,40,'CLASS1.MULTIMEDIA','Save album/play-list to permanent storage. \n\n | Data byte | Description                                                          | \n | :---------: | -----------                                                          | \n | 0         | 0 - Do not overwrite if it already exists 1 - Overwrite if it exist. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.           | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.   | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (60,40,'CLASS1.MULTIMEDIA','Send multimedia information. This can be the title for the current active media. It can be sent as a response to a “Get Title” or similar event or by its own when a new title is playing or other multimedia information has changed.\n\nResponse should be Type=61 \n\n | Data byte | Description                                                          | \n | :---------: | -----------                                                          | \n | 0         | Control codes                                                        | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.           | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.   | \n | 3         | Index. Base 0. Increase by one for every fragment of the title sent. | \n | 4-7       | Data.                                                                | \n\n##### Control Codes\n\n | Code | Description                                | \n | :----: | -----------                                | \n | 0    | Active Title (URL).                        | \n | 1    | Set Title(URL).                            | \n | 2    | Active Folder(URL).                        | \n | 3    | Set Active Folder(URL).                    | \n | 4    | Artist(string).                            | \n | 5    | Year(string).                              | \n | 6    | Genre(string).                             | \n | 7    | Album(string).                             | \n | 8    | Comment(string).                           | \n | 9    | Track(integer).                            | \n | 10   | Picture(url).                              | \n | 11   | Sample rate(integer).                      | \n | 12   | Bit-rate(integer).                         | \n | 13   | Channels(integer).                         | \n | 14   | Media size bytes(integer).                 | \n | 15   | Time(string).                              | \n | 16   | Mpeg version(string).                      | \n | 17   | Mpeg layer(string).                        | \n | 18   | Frequency(integer).                        | \n | 19   | Channel Mode.                              | \n | 20   | CRC(integer).                              | \n | 21   | Copyright(string).                         | \n | 22   | Original(string).                          | \n | 23   | Emphasis.                                  | \n | 24   | Media position in milliseconds(integer).   | \n | 25   | Media-length in milliseconds(integer).     | \n | 26   | Version(string).                           | \n | 27   | Album/Play list(string).                   | \n | 28   | Play file(URL).                            | \n | 29   | Add file to album/play-list(URL).          | \n | 30   | Current Folder (URL).                      | \n | 31   | Folder content(URL).                       | \n | 32   | Set Folder(URL).                           | \n | 33   | Get Folder content(URL).                   | \n | 34   | Get Folder content albums/play-lists(URL). | \n | 35   | Get Folder content filter(string)          | \n | 36   | Disks list(String)                         | \n | 37   | Folders list(String)                       | \n | 38   | Tracks list(String)                        | \n | 39   | Albums/Play list list(String)              | \n | 40   | Channels list(String)                      | \n | 41   | Pages list(String)                         | \n | 42   | Chapters list(String)                      | \n | 43   | New Album/Play list(URL)                   | \n\nThe last fragment is sent with no data.\n\nLists in string form have list items separated with a zero (0x00).\n\nAlbum can be looked upon as a play-list which is a term used for many other multimedia products. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (61,40,'CLASS1.MULTIMEDIA','Response for multimedia control.');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,50,'CLASS1.AOL','General Event.');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (1,50,'CLASS1.AOL','This node was unplugged from its power source.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for record.                                                  | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (2,50,'CLASS1.AOL','This node was unplugged from the network.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for record.                                                  | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (3,50,'CLASS1.AOL','This node detected chassis intrusion.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for record.                                                  | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (4,50,'CLASS1.AOL','This node detected processor removal.\n\n | Data byte | Description                                                        | \n | --------- | -----------                                                        | \n | 0         | Index for record.                                                  | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (5,50,'CLASS1.AOL','This node detected system environmental errors.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for record.                                                  | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (6,50,'CLASS1.AOL','This node detected high temperature.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for record.                                                  | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (7,50,'CLASS1.AOL','This node detected Fan speed problem.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for record.                                                  | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (8,50,'CLASS1.AOL','This node detected Voltage fluctuations.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for record.                                                  | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (9,50,'CLASS1.AOL','This node detected Operating system errors.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for record.                                                  | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (10,50,'CLASS1.AOL','This node detected System power-on errors.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for record.                                                  | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (11,50,'CLASS1.AOL','This node detected System is hung.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for record.                                                  | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (12,50,'CLASS1.AOL','This node detected Component failure.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for record.                                                  | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (13,50,'CLASS1.AOL','This node detected Remote system reboot upon report of a critical failure.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for record.                                                  | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (14,50,'CLASS1.AOL','This node detected Repair Operating System.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for record.                                                  | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (15,50,'CLASS1.AOL','This node detected Update BIOS image.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for record.                                                  | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (16,50,'CLASS1.AOL','This node detected Update Perform other diagnostic procedures.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for record.                                                  | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,60,'VSCP_TYPE_MEASUREMENT_GENERAL','This is a general (custom) measurement event that can be used if no other event is suitable. \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (1,60,'VSCP_TYPE_MEASUREMENT_COUNT','This is a discrete value typical for a count. There is no unit for this measurement just a discrete value. \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (2,60,'VSCP_TYPE_MEASUREMENT_LENGTH','**Default unit:** Meter. \n\nThis is a measurement of a length or a distance.\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (3,60,'VSCP_TYPE_MEASUREMENT_MASS','**Default unit:** Kilogram.\n\nThis is a measurement of a mass. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (4,60,'VSCP_TYPE_MEASUREMENT_TIME','A time measurement.\n\n**Default unit:** Seconds.  \n**Opt. unit:** (1) Milliseconds. Absolute: (2) y-y-m-d-h-m-s (binary). String: (3) "HHMMSS". \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (5,60,'VSCP_TYPE_MEASUREMENT_ELECTRIC_CURRENT','**Default unit:** Ampere.\n\nThis is a measurement of an electric current. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (6,60,'VSCP_TYPE_MEASUREMENT_TEMPERATURE','**Default unit:** Kelvin.  \n**Opt. unit:** Degree Celsius (1), Fahrenheit (2)\n\nThis is a measurement of a temperature. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (7,60,'VSCP_TYPE_MEASUREMENT_AMOUNT_OF_SUBSTANCE','**Default unit:** Mole.\n\nThis is a measurement of an amount of a substance. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (8,60,'VSCP_TYPE_MEASUREMENT_INTENSITY_OF_LIGHT','**Default unit:** Candela.\n\nThis is a measurement of luminous intensity. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (9,60,'VSCP_TYPE_MEASUREMENT_FREQUENCY','\n**Default unit:** Hertz.\n\nThis is a measurement of regular events during a second. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (10,60,'VSCP_TYPE_MEASUREMENT_RADIOACTIVITY','**Default unit:** becquerel.\n**Optional unit:** curie (1)\n\nThis is a measurement of rates of things, which happen randomly, or are unpredictable. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (11,60,'VSCP_TYPE_MEASUREMENT_FORCE','**Default unit:** newton.\n\nThis is a measurement of force. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (12,60,'VSCP_TYPE_MEASUREMENT_PRESSURE','**Default unit:** pascal.  \n**Opt. unit:** bar (1), psi (2)\n\nThis is a measurement of pressure. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (13,60,'VSCP_TYPE_MEASUREMENT_ENERGY','**Default unit:** Joule.  \n**Optional unit:** KWh (1)\n\nThis is a measurement of energy. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (14,60,'VSCP_TYPE_MEASUREMENT_POWER','**Default unit:** watt.  \n**Optional unit:** Horse power (1).\n\nThis is a measurement of power. \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (15,60,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_CHARGE','**Default unit:** coulomb.\n\nThis is a measurement electrical charge. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (16,60,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_POTENTIAL','**Default unit:** volt.\n\nThis is a measurement of electrical potential. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (17,60,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_CAPACITANCE','**Default unit:** farad (F).\n\nThis is a measurement of electric capacitance.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (18,60,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_RESISTANCE','**Default unit:** ohm (Ω).\n\nThis is a measurement of resistance. \n\n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (19,60,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_CONDUCTANCE','**Default unit:** siemens.\n\nThis is a measurement of electrical conductance. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (20,60,'VSCP_TYPE_MEASUREMENT_MAGNETIC_FIELD_STRENGTH','**Default unit:** amperes per meter (H).  \n**Optional units:** teslas (B) (1)\n\nThis is a measurement of magnetic field strength. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (21,60,'VSCP_TYPE_MEASUREMENT_MAGNETIC_FLUX','**Default unit:** weber (Wb).\n\nThis is a measurement of magnetic flux. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (22,60,'VSCP_TYPE_MEASUREMENT_MAGNETIC_FLUX_DENSITY','**Default unit:** tesla (B).\n\n**Optional unit:** Gauss (1)\n\nThis is a measurement of flux density or field strength for magnetic fields (also called the magnetic induction). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (23,60,'VSCP_TYPE_MEASUREMENT_INDUCTANCE','**Default unit:** henry (H).\n\nThis is a measurement of inductance. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (24,60,'VSCP_TYPE_MEASUREMENT_FLUX_OF_LIGHT','**Default unit:** Lumen (lm= cd * sr)\n\nThis is a measurement of luminous Flux. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (25,60,'VSCP_TYPE_MEASUREMENT_ILLUMINANCE','**Default unit:** lux (lx) ( lx = lm / m² )\n\nThis is used to express both Illuminance (incidence of light) and Luminous Emittance (emission of light). \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (26,60,'VSCP_TYPE_MEASUREMENT_RADIATION_DOSE_ABSORBED','**Default unit:** gray (Gy).   \n\n\nThis is a measurement of a radiation dose (Absorbed dose of ionizing radiation). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (27,60,'VSCP_TYPE_MEASUREMENT_CATALYTIC_ACITIVITY','**Default unit:** katal (kat).\n\nThis is a measurement of catalytic activity used in biochemistry. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (28,60,'VSCP_TYPE_MEASUREMENT_VOLUME','**Default unit:** cubic meter (m³)   \n**Opt. unit:** Liter (dm³) (1), decilitre (100 cm³) (2), centilitre (10 cm³) (3), millilitre (cm³) (4) where unit 4 is only available for Level II measurement events where units can hold this value.\n\nThis is a measurement of volume. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (29,60,'VSCP_TYPE_MEASUREMENT_SOUND_INTENSITY','**Default unit:** W/m2, watt per square meter. \n\nThis is a measurement of sound intensity (acoustic intensity). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (30,60,'VSCP_TYPE_MEASUREMENT_ANGLE','* **Default unit:** radian (rad) (Plane angles).   \n* **Opt Unit:** degree (1).\n* **Opt Unit:** arcminute (2).\n* **Opt Unit:** arcseconds (3).\n\nThis is a measurement of an angle. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (31,60,'VSCP_TYPE_MEASUREMENT_POSITION','**Default unit:** Longitude.  \n**Opt. unit:** Latitude.\n\nThis is a (decimal) measurement of a position as of WGS 84. Normally given as a floating point value. See [./class1.gps.md](CLASS1.GPS) for a better candidate to use for position data.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (32,60,'VSCP_TYPE_MEASUREMENT_SPEED','**Default unit:** Meters per second.   \n**Optional unit:** Kilometers per hour (1) Miles per hour (2)\n\nThis is a measurement of a speed. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (33,60,'VSCP_TYPE_MEASUREMENT_ACCELERATION','**Default unit:** Meters per second/second (m/s2).\n\nThis is a measurement of acceleration. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (34,60,'VSCP_TYPE_MEASUREMENT_TENSION','**Default unit:** N/m.\n\nThis is a measurement of tension. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (35,60,'VSCP_TYPE_MEASUREMENT_HUMIDITY','**Default unit:** Relative percentage 0-100%.\n\nThis is a measurement of relative moistness (Humidity). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (36,60,'VSCP_TYPE_MEASUREMENT_FLOW','**Default unit:** Cubic meters/second.   \n**Opt Unit:** Liters/Second.\n\nThis is a measurement of flow. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (37,60,'VSCP_TYPE_MEASUREMENT_THERMAL_RESISTANCE','**Default unit:** Thermal ohm K/W.\n\nThis is a measurement of thermal resistance. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (38,60,'VSCP_TYPE_MEASUREMENT_REFRACTIVE_POWER','**Default unit:** dioptre (dpt) m-1.\n\nThis is a measurement of refractive (optical) power. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (39,60,'VSCP_TYPE_MEASUREMENT_DYNAMIC_VISCOSITY','**Default unit:**  pascal second\n**optional units** poiseuille (Pl) = 1, poise (P) = 2\n\nThis is a measurement of dynamic viscosity. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (40,60,'VSCP_TYPE_MEASUREMENT_SOUND_IMPEDANCE','**Default unit:** rayl (Pa·s/m)\n\nThis is a measurement of sound impedance. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (41,60,'VSCP_TYPE_MEASUREMENT_SOUND_RESISTANCE','**Default unit:** Acoustic ohm Pa · s/ m³.\n\nThis is a measurement of sound resistance.\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (42,60,'VSCP_TYPE_MEASUREMENT_ELECTRIC_ELASTANCE','**Default unit:** daraf (f-1).\n\nThis is a measurement of electric elasticity. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (43,60,'VSCP_TYPE_MEASUREMENT_LUMINOUS_ENERGY','**Default unit:** talbot ( tb = lm * s) \n\nThis is a measurement of luminous energy.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (44,60,'VSCP_TYPE_MEASUREMENT_LUMINANCE','**Default unit:** cd / m²) (non SI unit = nit)\n\nThis is a measurement of luminance.\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (45,60,'VSCP_TYPE_MEASUREMENT_CHEMICAL_CONCENTRATION_MOLAR','**Default unit:** mol/m3.\n\nThis is a measurement of chemical mol concentration. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (46,60,'VSCP_TYPE_MEASUREMENT_CHEMICAL_CONCENTRATION_MASS','**Default unit:** kg/m3.\n\nThis is a measurement of chemical mass concentration. ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (47,60,'VSCP_TYPE_MEASUREMENT_DOSE_EQVIVALENT','Reserved\n\n\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (48,60,'VSCP_TYPE_MEASUREMENT_RESERVED48','Reserved \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (49,60,'VSCP_TYPE_MEASUREMENT_DEWPOINT','**Default unit:** Kelvin.  \n**Opt. unit:** Degree Celsius (1), Fahrenheit (2)\n\nThis is a measurement of the Dew Point. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (50,60,'VSCP_TYPE_MEASUREMENT_RELATIVE_LEVEL','**Default unit:** Relative value.\n\nThis is a relative value for a level measurement without a unit. It is just relative to the min/max value for the selected data representation, typically percentage or per mille or similar. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (51,60,'VSCP_TYPE_MEASUREMENT_ALTITUDE','**Default unit:** Meter.  \n**Opt. unit:** Feet(1), inches (2)\n\nAltitude in meters. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (52,60,'VSCP_TYPE_MEASUREMENT_AREA','**Default unit:** square meter (m²)\n\nArea in square meter. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (53,60,'VSCP_TYPE_MEASUREMENT_RADIANT_INTENSITY','**Default unit:** watt per steradian ( W / sr )\n\nRadiated power per room angle. \n\n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (54,60,'VSCP_TYPE_MEASUREMENT_RADIANCE','**Default unit:** watt per steradian per square metre ( W / (sr * m²) )\n\nThis is the radiant flux emitted, reflected, transmitted or received by a surface.\n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (55,60,'VSCP_TYPE_MEASUREMENT_IRRADIANCE','**Default unit:** watt per square metre ( W / m² )\n\nPower emitted from or striking onto a surface or area. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (56,60,'VSCP_TYPE_MEASUREMENT_SPECTRAL_RADIANCE','**Default unit:** watt per steradian per square metre per nm (W·sr-1·m-2·nm-1)    \n**Opt. unit:** watt per steradian per meter3 (W·sr-1·m-3) (1), watt per steradian per square metre per hertz (W·sr-1·m-3) (2)\n\nRadiance of a surface per unit frequency or wavelength.\n\n                        \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (57,60,'VSCP_TYPE_MEASUREMENT_SPECTRAL_IRRADIANCE','**Default unit:** watt per square metre per nm (W·m-2·nm-1)   \n**Opt. unit:** watt per metre3 (W·m-3) (1), watt per square metre per hertz (W·m-2·Hz-1) (2)\n\nIrradiance of a surface per unit frequency or wavelength.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (58,60,'VSCP_TYPE_MEASUREMENT_SOUND_PRESSURE','**Default unit:** pascal (Pa) \n\nThis is a measurement of sound pressure (acoustic pressure). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (59,60,'VSCP_TYPE_MEASUREMENT_SOUND_DENSITY','**Default unit:** pascal (Pa) \n\nSound energy density or sound density is the sound energy per unit volume.\n\n                        ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (60,60,'VSCP_TYPE_MEASUREMENT_SOUND_LEVEL','**Default unit:** decibel (dB) \n\nSound level expressed in decibel. This event is supplied for convenience.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (61,60,'VSCP_TYPE_MEASUREMENT_RADIATION_DOSE_EQ','**Default unit:** sievert (Sv).\n\n**Optional unit** rem (1)\n\nThis is a measurement of a radiation dose (Equivalent dose of ionizing radiation). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (62,60,'VSCP_TYPE_MEASUREMENT_RADIATION_DOSE_EXPOSURE','**Default unit:** coulomb per kilogram (C/kg).   \n**Optional unit:** Röntgen/R (1)\n\nThis is a measurement of a radiation dose (Exposed dose of ionizing radiation). \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,61,'VSCP_TYPE_MEASUREMENTX1_GENERAL','\nThis is a general (custom) event that can be used if no other event is suitable. \n \n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,62,'VSCP_TYPE_MEASUREMENTX2_GENERAL','General Event.\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,63,'VSCP_TYPE_MEASUREMENTX3_GENERAL','General Event.\n\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,64,'VSCP_TYPE_MEASUREMENTX4_GENERAL','General Event.\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,65,'VSCP_TYPE_MEASUREMENT_GENERAL','This is a general (custom) measurement event that can be used if no other event is suitable. \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (1,65,'VSCP_TYPE_MEASUREMENT_COUNT','This is a discrete value typical for a count. There is no unit for this measurement just a discrete value. \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (2,65,'VSCP_TYPE_MEASUREMENT_LENGTH','**Default unit:** Meter. \n\nThis is a measurement of a length or a distance.\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (3,65,'VSCP_TYPE_MEASUREMENT_MASS','**Default unit:** Kilogram.\n\nThis is a measurement of a mass. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (4,65,'VSCP_TYPE_MEASUREMENT_TIME','A time measurement.\n\n**Default unit:** Seconds.  \n**Opt. unit:** (1) Milliseconds. Absolute: (2) y-y-m-d-h-m-s (binary). String: (3) "HHMMSS". \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (5,65,'VSCP_TYPE_MEASUREMENT_ELECTRIC_CURRENT','**Default unit:** Ampere.\n\nThis is a measurement of an electric current. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (6,65,'VSCP_TYPE_MEASUREMENT_TEMPERATURE','**Default unit:** Kelvin.  \n**Opt. unit:** Degree Celsius (1), Fahrenheit (2)\n\nThis is a measurement of a temperature. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (7,65,'VSCP_TYPE_MEASUREMENT_AMOUNT_OF_SUBSTANCE','**Default unit:** Mole.\n\nThis is a measurement of an amount of a substance. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (8,65,'VSCP_TYPE_MEASUREMENT_INTENSITY_OF_LIGHT','**Default unit:** Candela.\n\nThis is a measurement of luminous intensity. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (9,65,'VSCP_TYPE_MEASUREMENT_FREQUENCY','\n**Default unit:** Hertz.\n\nThis is a measurement of regular events during a second. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (10,65,'VSCP_TYPE_MEASUREMENT_RADIOACTIVITY','**Default unit:** becquerel.\n**Optional unit:** curie (1)\n\nThis is a measurement of rates of things, which happen randomly, or are unpredictable. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (11,65,'VSCP_TYPE_MEASUREMENT_FORCE','**Default unit:** newton.\n\nThis is a measurement of force. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (12,65,'VSCP_TYPE_MEASUREMENT_PRESSURE','**Default unit:** pascal.  \n**Opt. unit:** bar (1), psi (2)\n\nThis is a measurement of pressure. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (13,65,'VSCP_TYPE_MEASUREMENT_ENERGY','**Default unit:** Joule.  \n**Optional unit:** KWh (1)\n\nThis is a measurement of energy. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (14,65,'VSCP_TYPE_MEASUREMENT_POWER','**Default unit:** watt.  \n**Optional unit:** Horse power (1).\n\nThis is a measurement of power. \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (15,65,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_CHARGE','**Default unit:** coulomb.\n\nThis is a measurement electrical charge. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (16,65,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_POTENTIAL','**Default unit:** volt.\n\nThis is a measurement of electrical potential. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (17,65,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_CAPACITANCE','**Default unit:** farad (F).\n\nThis is a measurement of electric capacitance.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (18,65,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_RESISTANCE','**Default unit:** ohm (Ω).\n\nThis is a measurement of resistance. \n\n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (19,65,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_CONDUCTANCE','**Default unit:** siemens.\n\nThis is a measurement of electrical conductance. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (20,65,'VSCP_TYPE_MEASUREMENT_MAGNETIC_FIELD_STRENGTH','**Default unit:** amperes per meter (H).  \n**Optional units:** teslas (B) (1)\n\nThis is a measurement of magnetic field strength. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (21,65,'VSCP_TYPE_MEASUREMENT_MAGNETIC_FLUX','**Default unit:** weber (Wb).\n\nThis is a measurement of magnetic flux. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (22,65,'VSCP_TYPE_MEASUREMENT_MAGNETIC_FLUX_DENSITY','**Default unit:** tesla (B).\n\n**Optional unit:** Gauss (1)\n\nThis is a measurement of flux density or field strength for magnetic fields (also called the magnetic induction). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (23,65,'VSCP_TYPE_MEASUREMENT_INDUCTANCE','**Default unit:** henry (H).\n\nThis is a measurement of inductance. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (24,65,'VSCP_TYPE_MEASUREMENT_FLUX_OF_LIGHT','**Default unit:** Lumen (lm= cd * sr)\n\nThis is a measurement of luminous Flux. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (25,65,'VSCP_TYPE_MEASUREMENT_ILLUMINANCE','**Default unit:** lux (lx) ( lx = lm / m² )\n\nThis is used to express both Illuminance (incidence of light) and Luminous Emittance (emission of light). \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (26,65,'VSCP_TYPE_MEASUREMENT_RADIATION_DOSE_ABSORBED','**Default unit:** gray (Gy).   \n\n\nThis is a measurement of a radiation dose (Absorbed dose of ionizing radiation). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (27,65,'VSCP_TYPE_MEASUREMENT_CATALYTIC_ACITIVITY','**Default unit:** katal (kat).\n\nThis is a measurement of catalytic activity used in biochemistry. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (28,65,'VSCP_TYPE_MEASUREMENT_VOLUME','**Default unit:** cubic meter (m³)   \n**Opt. unit:** Liter (dm³) (1), decilitre (100 cm³) (2), centilitre (10 cm³) (3), millilitre (cm³) (4) where unit 4 is only available for Level II measurement events where units can hold this value.\n\nThis is a measurement of volume. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (29,65,'VSCP_TYPE_MEASUREMENT_SOUND_INTENSITY','**Default unit:** W/m2, watt per square meter. \n\nThis is a measurement of sound intensity (acoustic intensity). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (30,65,'VSCP_TYPE_MEASUREMENT_ANGLE','* **Default unit:** radian (rad) (Plane angles).   \n* **Opt Unit:** degree (1).\n* **Opt Unit:** arcminute (2).\n* **Opt Unit:** arcseconds (3).\n\nThis is a measurement of an angle. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (31,65,'VSCP_TYPE_MEASUREMENT_POSITION','**Default unit:** Longitude.  \n**Opt. unit:** Latitude.\n\nThis is a (decimal) measurement of a position as of WGS 84. Normally given as a floating point value. See [./class1.gps.md](CLASS1.GPS) for a better candidate to use for position data.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (32,65,'VSCP_TYPE_MEASUREMENT_SPEED','**Default unit:** Meters per second.   \n**Optional unit:** Kilometers per hour (1) Miles per hour (2)\n\nThis is a measurement of a speed. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (33,65,'VSCP_TYPE_MEASUREMENT_ACCELERATION','**Default unit:** Meters per second/second (m/s2).\n\nThis is a measurement of acceleration. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (34,65,'VSCP_TYPE_MEASUREMENT_TENSION','**Default unit:** N/m.\n\nThis is a measurement of tension. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (35,65,'VSCP_TYPE_MEASUREMENT_HUMIDITY','**Default unit:** Relative percentage 0-100%.\n\nThis is a measurement of relative moistness (Humidity). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (36,65,'VSCP_TYPE_MEASUREMENT_FLOW','**Default unit:** Cubic meters/second.   \n**Opt Unit:** Liters/Second.\n\nThis is a measurement of flow. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (37,65,'VSCP_TYPE_MEASUREMENT_THERMAL_RESISTANCE','**Default unit:** Thermal ohm K/W.\n\nThis is a measurement of thermal resistance. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (38,65,'VSCP_TYPE_MEASUREMENT_REFRACTIVE_POWER','**Default unit:** dioptre (dpt) m-1.\n\nThis is a measurement of refractive (optical) power. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (39,65,'VSCP_TYPE_MEASUREMENT_DYNAMIC_VISCOSITY','**Default unit:**  pascal second\n**optional units** poiseuille (Pl) = 1, poise (P) = 2\n\nThis is a measurement of dynamic viscosity. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (40,65,'VSCP_TYPE_MEASUREMENT_SOUND_IMPEDANCE','**Default unit:** rayl (Pa·s/m)\n\nThis is a measurement of sound impedance. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (41,65,'VSCP_TYPE_MEASUREMENT_SOUND_RESISTANCE','**Default unit:** Acoustic ohm Pa · s/ m³.\n\nThis is a measurement of sound resistance.\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (42,65,'VSCP_TYPE_MEASUREMENT_ELECTRIC_ELASTANCE','**Default unit:** daraf (f-1).\n\nThis is a measurement of electric elasticity. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (43,65,'VSCP_TYPE_MEASUREMENT_LUMINOUS_ENERGY','**Default unit:** talbot ( tb = lm * s) \n\nThis is a measurement of luminous energy.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (44,65,'VSCP_TYPE_MEASUREMENT_LUMINANCE','**Default unit:** cd / m²) (non SI unit = nit)\n\nThis is a measurement of luminance.\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (45,65,'VSCP_TYPE_MEASUREMENT_CHEMICAL_CONCENTRATION_MOLAR','**Default unit:** mol/m3.\n\nThis is a measurement of chemical mol concentration. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (46,65,'VSCP_TYPE_MEASUREMENT_CHEMICAL_CONCENTRATION_MASS','**Default unit:** kg/m3.\n\nThis is a measurement of chemical mass concentration. ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (47,65,'VSCP_TYPE_MEASUREMENT_DOSE_EQVIVALENT','Reserved\n\n\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (48,65,'VSCP_TYPE_MEASUREMENT_RESERVED48','Reserved \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (49,65,'VSCP_TYPE_MEASUREMENT_DEWPOINT','**Default unit:** Kelvin.  \n**Opt. unit:** Degree Celsius (1), Fahrenheit (2)\n\nThis is a measurement of the Dew Point. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (50,65,'VSCP_TYPE_MEASUREMENT_RELATIVE_LEVEL','**Default unit:** Relative value.\n\nThis is a relative value for a level measurement without a unit. It is just relative to the min/max value for the selected data representation, typically percentage or per mille or similar. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (51,65,'VSCP_TYPE_MEASUREMENT_ALTITUDE','**Default unit:** Meter.  \n**Opt. unit:** Feet(1), inches (2)\n\nAltitude in meters. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (52,65,'VSCP_TYPE_MEASUREMENT_AREA','**Default unit:** square meter (m²)\n\nArea in square meter. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (53,65,'VSCP_TYPE_MEASUREMENT_RADIANT_INTENSITY','**Default unit:** watt per steradian ( W / sr )\n\nRadiated power per room angle. \n\n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (54,65,'VSCP_TYPE_MEASUREMENT_RADIANCE','**Default unit:** watt per steradian per square metre ( W / (sr * m²) )\n\nThis is the radiant flux emitted, reflected, transmitted or received by a surface.\n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (55,65,'VSCP_TYPE_MEASUREMENT_IRRADIANCE','**Default unit:** watt per square metre ( W / m² )\n\nPower emitted from or striking onto a surface or area. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (56,65,'VSCP_TYPE_MEASUREMENT_SPECTRAL_RADIANCE','**Default unit:** watt per steradian per square metre per nm (W·sr-1·m-2·nm-1)    \n**Opt. unit:** watt per steradian per meter3 (W·sr-1·m-3) (1), watt per steradian per square metre per hertz (W·sr-1·m-3) (2)\n\nRadiance of a surface per unit frequency or wavelength.\n\n                        \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (57,65,'VSCP_TYPE_MEASUREMENT_SPECTRAL_IRRADIANCE','**Default unit:** watt per square metre per nm (W·m-2·nm-1)   \n**Opt. unit:** watt per metre3 (W·m-3) (1), watt per square metre per hertz (W·m-2·Hz-1) (2)\n\nIrradiance of a surface per unit frequency or wavelength.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (58,65,'VSCP_TYPE_MEASUREMENT_SOUND_PRESSURE','**Default unit:** pascal (Pa) \n\nThis is a measurement of sound pressure (acoustic pressure). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (59,65,'VSCP_TYPE_MEASUREMENT_SOUND_DENSITY','**Default unit:** pascal (Pa) \n\nSound energy density or sound density is the sound energy per unit volume.\n\n                        ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (60,65,'VSCP_TYPE_MEASUREMENT_SOUND_LEVEL','**Default unit:** decibel (dB) \n\nSound level expressed in decibel. This event is supplied for convenience.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (61,65,'VSCP_TYPE_MEASUREMENT_RADIATION_DOSE_EQ','**Default unit:** sievert (Sv).\n\n**Optional unit** rem (1)\n\nThis is a measurement of a radiation dose (Equivalent dose of ionizing radiation). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (62,65,'VSCP_TYPE_MEASUREMENT_RADIATION_DOSE_EXPOSURE','**Default unit:** coulomb per kilogram (C/kg).   \n**Optional unit:** Röntgen/R (1)\n\nThis is a measurement of a radiation dose (Exposed dose of ionizing radiation). \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,66,'VSCP_TYPE_MEASUREMENTX1_GENERAL','\nThis is a general (custom) event that can be used if no other event is suitable. \n \n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,67,'VSCP_TYPE_MEASUREMENTX2_GENERAL','General Event.\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,68,'VSCP_TYPE_MEASUREMENTX3_GENERAL','General Event.\n\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,69,'VSCP_TYPE_MEASUREMENTX4_GENERAL','General Event.\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,70,'VSCP_TYPE_MEASUREMENT_GENERAL','This is a general (custom) measurement event that can be used if no other event is suitable. \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (1,70,'VSCP_TYPE_MEASUREMENT_COUNT','This is a discrete value typical for a count. There is no unit for this measurement just a discrete value. \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (2,70,'VSCP_TYPE_MEASUREMENT_LENGTH','**Default unit:** Meter. \n\nThis is a measurement of a length or a distance.\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (3,70,'VSCP_TYPE_MEASUREMENT_MASS','**Default unit:** Kilogram.\n\nThis is a measurement of a mass. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (4,70,'VSCP_TYPE_MEASUREMENT_TIME','A time measurement.\n\n**Default unit:** Seconds.  \n**Opt. unit:** (1) Milliseconds. Absolute: (2) y-y-m-d-h-m-s (binary). String: (3) "HHMMSS". \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (5,70,'VSCP_TYPE_MEASUREMENT_ELECTRIC_CURRENT','**Default unit:** Ampere.\n\nThis is a measurement of an electric current. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (6,70,'VSCP_TYPE_MEASUREMENT_TEMPERATURE','**Default unit:** Kelvin.  \n**Opt. unit:** Degree Celsius (1), Fahrenheit (2)\n\nThis is a measurement of a temperature. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (7,70,'VSCP_TYPE_MEASUREMENT_AMOUNT_OF_SUBSTANCE','**Default unit:** Mole.\n\nThis is a measurement of an amount of a substance. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (8,70,'VSCP_TYPE_MEASUREMENT_INTENSITY_OF_LIGHT','**Default unit:** Candela.\n\nThis is a measurement of luminous intensity. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (9,70,'VSCP_TYPE_MEASUREMENT_FREQUENCY','\n**Default unit:** Hertz.\n\nThis is a measurement of regular events during a second. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (10,70,'VSCP_TYPE_MEASUREMENT_RADIOACTIVITY','**Default unit:** becquerel.\n**Optional unit:** curie (1)\n\nThis is a measurement of rates of things, which happen randomly, or are unpredictable. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (11,70,'VSCP_TYPE_MEASUREMENT_FORCE','**Default unit:** newton.\n\nThis is a measurement of force. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (12,70,'VSCP_TYPE_MEASUREMENT_PRESSURE','**Default unit:** pascal.  \n**Opt. unit:** bar (1), psi (2)\n\nThis is a measurement of pressure. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (13,70,'VSCP_TYPE_MEASUREMENT_ENERGY','**Default unit:** Joule.  \n**Optional unit:** KWh (1)\n\nThis is a measurement of energy. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (14,70,'VSCP_TYPE_MEASUREMENT_POWER','**Default unit:** watt.  \n**Optional unit:** Horse power (1).\n\nThis is a measurement of power. \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (15,70,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_CHARGE','**Default unit:** coulomb.\n\nThis is a measurement electrical charge. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (16,70,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_POTENTIAL','**Default unit:** volt.\n\nThis is a measurement of electrical potential. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (17,70,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_CAPACITANCE','**Default unit:** farad (F).\n\nThis is a measurement of electric capacitance.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (18,70,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_RESISTANCE','**Default unit:** ohm (Ω).\n\nThis is a measurement of resistance. \n\n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (19,70,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_CONDUCTANCE','**Default unit:** siemens.\n\nThis is a measurement of electrical conductance. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (20,70,'VSCP_TYPE_MEASUREMENT_MAGNETIC_FIELD_STRENGTH','**Default unit:** amperes per meter (H).  \n**Optional units:** teslas (B) (1)\n\nThis is a measurement of magnetic field strength. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (21,70,'VSCP_TYPE_MEASUREMENT_MAGNETIC_FLUX','**Default unit:** weber (Wb).\n\nThis is a measurement of magnetic flux. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (22,70,'VSCP_TYPE_MEASUREMENT_MAGNETIC_FLUX_DENSITY','**Default unit:** tesla (B).\n\n**Optional unit:** Gauss (1)\n\nThis is a measurement of flux density or field strength for magnetic fields (also called the magnetic induction). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (23,70,'VSCP_TYPE_MEASUREMENT_INDUCTANCE','**Default unit:** henry (H).\n\nThis is a measurement of inductance. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (24,70,'VSCP_TYPE_MEASUREMENT_FLUX_OF_LIGHT','**Default unit:** Lumen (lm= cd * sr)\n\nThis is a measurement of luminous Flux. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (25,70,'VSCP_TYPE_MEASUREMENT_ILLUMINANCE','**Default unit:** lux (lx) ( lx = lm / m² )\n\nThis is used to express both Illuminance (incidence of light) and Luminous Emittance (emission of light). \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (26,70,'VSCP_TYPE_MEASUREMENT_RADIATION_DOSE_ABSORBED','**Default unit:** gray (Gy).   \n\n\nThis is a measurement of a radiation dose (Absorbed dose of ionizing radiation). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (27,70,'VSCP_TYPE_MEASUREMENT_CATALYTIC_ACITIVITY','**Default unit:** katal (kat).\n\nThis is a measurement of catalytic activity used in biochemistry. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (28,70,'VSCP_TYPE_MEASUREMENT_VOLUME','**Default unit:** cubic meter (m³)   \n**Opt. unit:** Liter (dm³) (1), decilitre (100 cm³) (2), centilitre (10 cm³) (3), millilitre (cm³) (4) where unit 4 is only available for Level II measurement events where units can hold this value.\n\nThis is a measurement of volume. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (29,70,'VSCP_TYPE_MEASUREMENT_SOUND_INTENSITY','**Default unit:** W/m2, watt per square meter. \n\nThis is a measurement of sound intensity (acoustic intensity). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (30,70,'VSCP_TYPE_MEASUREMENT_ANGLE','* **Default unit:** radian (rad) (Plane angles).   \n* **Opt Unit:** degree (1).\n* **Opt Unit:** arcminute (2).\n* **Opt Unit:** arcseconds (3).\n\nThis is a measurement of an angle. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (31,70,'VSCP_TYPE_MEASUREMENT_POSITION','**Default unit:** Longitude.  \n**Opt. unit:** Latitude.\n\nThis is a (decimal) measurement of a position as of WGS 84. Normally given as a floating point value. See [./class1.gps.md](CLASS1.GPS) for a better candidate to use for position data.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (32,70,'VSCP_TYPE_MEASUREMENT_SPEED','**Default unit:** Meters per second.   \n**Optional unit:** Kilometers per hour (1) Miles per hour (2)\n\nThis is a measurement of a speed. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (33,70,'VSCP_TYPE_MEASUREMENT_ACCELERATION','**Default unit:** Meters per second/second (m/s2).\n\nThis is a measurement of acceleration. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (34,70,'VSCP_TYPE_MEASUREMENT_TENSION','**Default unit:** N/m.\n\nThis is a measurement of tension. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (35,70,'VSCP_TYPE_MEASUREMENT_HUMIDITY','**Default unit:** Relative percentage 0-100%.\n\nThis is a measurement of relative moistness (Humidity). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (36,70,'VSCP_TYPE_MEASUREMENT_FLOW','**Default unit:** Cubic meters/second.   \n**Opt Unit:** Liters/Second.\n\nThis is a measurement of flow. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (37,70,'VSCP_TYPE_MEASUREMENT_THERMAL_RESISTANCE','**Default unit:** Thermal ohm K/W.\n\nThis is a measurement of thermal resistance. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (38,70,'VSCP_TYPE_MEASUREMENT_REFRACTIVE_POWER','**Default unit:** dioptre (dpt) m-1.\n\nThis is a measurement of refractive (optical) power. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (39,70,'VSCP_TYPE_MEASUREMENT_DYNAMIC_VISCOSITY','**Default unit:**  pascal second\n**optional units** poiseuille (Pl) = 1, poise (P) = 2\n\nThis is a measurement of dynamic viscosity. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (40,70,'VSCP_TYPE_MEASUREMENT_SOUND_IMPEDANCE','**Default unit:** rayl (Pa·s/m)\n\nThis is a measurement of sound impedance. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (41,70,'VSCP_TYPE_MEASUREMENT_SOUND_RESISTANCE','**Default unit:** Acoustic ohm Pa · s/ m³.\n\nThis is a measurement of sound resistance.\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (42,70,'VSCP_TYPE_MEASUREMENT_ELECTRIC_ELASTANCE','**Default unit:** daraf (f-1).\n\nThis is a measurement of electric elasticity. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (43,70,'VSCP_TYPE_MEASUREMENT_LUMINOUS_ENERGY','**Default unit:** talbot ( tb = lm * s) \n\nThis is a measurement of luminous energy.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (44,70,'VSCP_TYPE_MEASUREMENT_LUMINANCE','**Default unit:** cd / m²) (non SI unit = nit)\n\nThis is a measurement of luminance.\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (45,70,'VSCP_TYPE_MEASUREMENT_CHEMICAL_CONCENTRATION_MOLAR','**Default unit:** mol/m3.\n\nThis is a measurement of chemical mol concentration. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (46,70,'VSCP_TYPE_MEASUREMENT_CHEMICAL_CONCENTRATION_MASS','**Default unit:** kg/m3.\n\nThis is a measurement of chemical mass concentration. ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (47,70,'VSCP_TYPE_MEASUREMENT_DOSE_EQVIVALENT','Reserved\n\n\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (48,70,'VSCP_TYPE_MEASUREMENT_RESERVED48','Reserved \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (49,70,'VSCP_TYPE_MEASUREMENT_DEWPOINT','**Default unit:** Kelvin.  \n**Opt. unit:** Degree Celsius (1), Fahrenheit (2)\n\nThis is a measurement of the Dew Point. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (50,70,'VSCP_TYPE_MEASUREMENT_RELATIVE_LEVEL','**Default unit:** Relative value.\n\nThis is a relative value for a level measurement without a unit. It is just relative to the min/max value for the selected data representation, typically percentage or per mille or similar. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (51,70,'VSCP_TYPE_MEASUREMENT_ALTITUDE','**Default unit:** Meter.  \n**Opt. unit:** Feet(1), inches (2)\n\nAltitude in meters. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (52,70,'VSCP_TYPE_MEASUREMENT_AREA','**Default unit:** square meter (m²)\n\nArea in square meter. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (53,70,'VSCP_TYPE_MEASUREMENT_RADIANT_INTENSITY','**Default unit:** watt per steradian ( W / sr )\n\nRadiated power per room angle. \n\n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (54,70,'VSCP_TYPE_MEASUREMENT_RADIANCE','**Default unit:** watt per steradian per square metre ( W / (sr * m²) )\n\nThis is the radiant flux emitted, reflected, transmitted or received by a surface.\n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (55,70,'VSCP_TYPE_MEASUREMENT_IRRADIANCE','**Default unit:** watt per square metre ( W / m² )\n\nPower emitted from or striking onto a surface or area. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (56,70,'VSCP_TYPE_MEASUREMENT_SPECTRAL_RADIANCE','**Default unit:** watt per steradian per square metre per nm (W·sr-1·m-2·nm-1)    \n**Opt. unit:** watt per steradian per meter3 (W·sr-1·m-3) (1), watt per steradian per square metre per hertz (W·sr-1·m-3) (2)\n\nRadiance of a surface per unit frequency or wavelength.\n\n                        \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (57,70,'VSCP_TYPE_MEASUREMENT_SPECTRAL_IRRADIANCE','**Default unit:** watt per square metre per nm (W·m-2·nm-1)   \n**Opt. unit:** watt per metre3 (W·m-3) (1), watt per square metre per hertz (W·m-2·Hz-1) (2)\n\nIrradiance of a surface per unit frequency or wavelength.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (58,70,'VSCP_TYPE_MEASUREMENT_SOUND_PRESSURE','**Default unit:** pascal (Pa) \n\nThis is a measurement of sound pressure (acoustic pressure). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (59,70,'VSCP_TYPE_MEASUREMENT_SOUND_DENSITY','**Default unit:** pascal (Pa) \n\nSound energy density or sound density is the sound energy per unit volume.\n\n                        ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (60,70,'VSCP_TYPE_MEASUREMENT_SOUND_LEVEL','**Default unit:** decibel (dB) \n\nSound level expressed in decibel. This event is supplied for convenience.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (61,70,'VSCP_TYPE_MEASUREMENT_RADIATION_DOSE_EQ','**Default unit:** sievert (Sv).\n\n**Optional unit** rem (1)\n\nThis is a measurement of a radiation dose (Equivalent dose of ionizing radiation). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (62,70,'VSCP_TYPE_MEASUREMENT_RADIATION_DOSE_EXPOSURE','**Default unit:** coulomb per kilogram (C/kg).   \n**Optional unit:** Röntgen/R (1)\n\nThis is a measurement of a radiation dose (Exposed dose of ionizing radiation). \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,71,'VSCP_TYPE_MEASUREMENTX1_GENERAL','\nThis is a general (custom) event that can be used if no other event is suitable. \n \n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,72,'VSCP_TYPE_MEASUREMENTX2_GENERAL','General Event.\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,73,'VSCP_TYPE_MEASUREMENTX3_GENERAL','General Event.\n\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,74,'VSCP_TYPE_MEASUREMENTX4_GENERAL','General Event.\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,85,'VSCP_TYPE_MEASUREMENT_GENERAL','This is a general (custom) measurement event that can be used if no other event is suitable. \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (1,85,'VSCP_TYPE_MEASUREMENT_COUNT','This is a discrete value typical for a count. There is no unit for this measurement just a discrete value. \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (2,85,'VSCP_TYPE_MEASUREMENT_LENGTH','**Default unit:** Meter. \n\nThis is a measurement of a length or a distance.\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (3,85,'VSCP_TYPE_MEASUREMENT_MASS','**Default unit:** Kilogram.\n\nThis is a measurement of a mass. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (4,85,'VSCP_TYPE_MEASUREMENT_TIME','A time measurement.\n\n**Default unit:** Seconds.  \n**Opt. unit:** (1) Milliseconds. Absolute: (2) y-y-m-d-h-m-s (binary). String: (3) "HHMMSS". \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (5,85,'VSCP_TYPE_MEASUREMENT_ELECTRIC_CURRENT','**Default unit:** Ampere.\n\nThis is a measurement of an electric current. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (6,85,'VSCP_TYPE_MEASUREMENT_TEMPERATURE','**Default unit:** Kelvin.  \n**Opt. unit:** Degree Celsius (1), Fahrenheit (2)\n\nThis is a measurement of a temperature. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (7,85,'VSCP_TYPE_MEASUREMENT_AMOUNT_OF_SUBSTANCE','**Default unit:** Mole.\n\nThis is a measurement of an amount of a substance. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (8,85,'VSCP_TYPE_MEASUREMENT_INTENSITY_OF_LIGHT','**Default unit:** Candela.\n\nThis is a measurement of luminous intensity. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (9,85,'VSCP_TYPE_MEASUREMENT_FREQUENCY','\n**Default unit:** Hertz.\n\nThis is a measurement of regular events during a second. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (10,85,'VSCP_TYPE_MEASUREMENT_RADIOACTIVITY','**Default unit:** becquerel.\n**Optional unit:** curie (1)\n\nThis is a measurement of rates of things, which happen randomly, or are unpredictable. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (11,85,'VSCP_TYPE_MEASUREMENT_FORCE','**Default unit:** newton.\n\nThis is a measurement of force. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (12,85,'VSCP_TYPE_MEASUREMENT_PRESSURE','**Default unit:** pascal.  \n**Opt. unit:** bar (1), psi (2)\n\nThis is a measurement of pressure. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (13,85,'VSCP_TYPE_MEASUREMENT_ENERGY','**Default unit:** Joule.  \n**Optional unit:** KWh (1)\n\nThis is a measurement of energy. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (14,85,'VSCP_TYPE_MEASUREMENT_POWER','**Default unit:** watt.  \n**Optional unit:** Horse power (1).\n\nThis is a measurement of power. \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (15,85,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_CHARGE','**Default unit:** coulomb.\n\nThis is a measurement electrical charge. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (16,85,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_POTENTIAL','**Default unit:** volt.\n\nThis is a measurement of electrical potential. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (17,85,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_CAPACITANCE','**Default unit:** farad (F).\n\nThis is a measurement of electric capacitance.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (18,85,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_RESISTANCE','**Default unit:** ohm (Ω).\n\nThis is a measurement of resistance. \n\n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (19,85,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_CONDUCTANCE','**Default unit:** siemens.\n\nThis is a measurement of electrical conductance. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (20,85,'VSCP_TYPE_MEASUREMENT_MAGNETIC_FIELD_STRENGTH','**Default unit:** amperes per meter (H).  \n**Optional units:** teslas (B) (1)\n\nThis is a measurement of magnetic field strength. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (21,85,'VSCP_TYPE_MEASUREMENT_MAGNETIC_FLUX','**Default unit:** weber (Wb).\n\nThis is a measurement of magnetic flux. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (22,85,'VSCP_TYPE_MEASUREMENT_MAGNETIC_FLUX_DENSITY','**Default unit:** tesla (B).\n\n**Optional unit:** Gauss (1)\n\nThis is a measurement of flux density or field strength for magnetic fields (also called the magnetic induction). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (23,85,'VSCP_TYPE_MEASUREMENT_INDUCTANCE','**Default unit:** henry (H).\n\nThis is a measurement of inductance. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (24,85,'VSCP_TYPE_MEASUREMENT_FLUX_OF_LIGHT','**Default unit:** Lumen (lm= cd * sr)\n\nThis is a measurement of luminous Flux. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (25,85,'VSCP_TYPE_MEASUREMENT_ILLUMINANCE','**Default unit:** lux (lx) ( lx = lm / m² )\n\nThis is used to express both Illuminance (incidence of light) and Luminous Emittance (emission of light). \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (26,85,'VSCP_TYPE_MEASUREMENT_RADIATION_DOSE_ABSORBED','**Default unit:** gray (Gy).   \n\n\nThis is a measurement of a radiation dose (Absorbed dose of ionizing radiation). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (27,85,'VSCP_TYPE_MEASUREMENT_CATALYTIC_ACITIVITY','**Default unit:** katal (kat).\n\nThis is a measurement of catalytic activity used in biochemistry. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (28,85,'VSCP_TYPE_MEASUREMENT_VOLUME','**Default unit:** cubic meter (m³)   \n**Opt. unit:** Liter (dm³) (1), decilitre (100 cm³) (2), centilitre (10 cm³) (3), millilitre (cm³) (4) where unit 4 is only available for Level II measurement events where units can hold this value.\n\nThis is a measurement of volume. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (29,85,'VSCP_TYPE_MEASUREMENT_SOUND_INTENSITY','**Default unit:** W/m2, watt per square meter. \n\nThis is a measurement of sound intensity (acoustic intensity). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (30,85,'VSCP_TYPE_MEASUREMENT_ANGLE','* **Default unit:** radian (rad) (Plane angles).   \n* **Opt Unit:** degree (1).\n* **Opt Unit:** arcminute (2).\n* **Opt Unit:** arcseconds (3).\n\nThis is a measurement of an angle. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (31,85,'VSCP_TYPE_MEASUREMENT_POSITION','**Default unit:** Longitude.  \n**Opt. unit:** Latitude.\n\nThis is a (decimal) measurement of a position as of WGS 84. Normally given as a floating point value. See [./class1.gps.md](CLASS1.GPS) for a better candidate to use for position data.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (32,85,'VSCP_TYPE_MEASUREMENT_SPEED','**Default unit:** Meters per second.   \n**Optional unit:** Kilometers per hour (1) Miles per hour (2)\n\nThis is a measurement of a speed. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (33,85,'VSCP_TYPE_MEASUREMENT_ACCELERATION','**Default unit:** Meters per second/second (m/s2).\n\nThis is a measurement of acceleration. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (34,85,'VSCP_TYPE_MEASUREMENT_TENSION','**Default unit:** N/m.\n\nThis is a measurement of tension. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (35,85,'VSCP_TYPE_MEASUREMENT_HUMIDITY','**Default unit:** Relative percentage 0-100%.\n\nThis is a measurement of relative moistness (Humidity). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (36,85,'VSCP_TYPE_MEASUREMENT_FLOW','**Default unit:** Cubic meters/second.   \n**Opt Unit:** Liters/Second.\n\nThis is a measurement of flow. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (37,85,'VSCP_TYPE_MEASUREMENT_THERMAL_RESISTANCE','**Default unit:** Thermal ohm K/W.\n\nThis is a measurement of thermal resistance. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (38,85,'VSCP_TYPE_MEASUREMENT_REFRACTIVE_POWER','**Default unit:** dioptre (dpt) m-1.\n\nThis is a measurement of refractive (optical) power. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (39,85,'VSCP_TYPE_MEASUREMENT_DYNAMIC_VISCOSITY','**Default unit:**  pascal second\n**optional units** poiseuille (Pl) = 1, poise (P) = 2\n\nThis is a measurement of dynamic viscosity. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (40,85,'VSCP_TYPE_MEASUREMENT_SOUND_IMPEDANCE','**Default unit:** rayl (Pa·s/m)\n\nThis is a measurement of sound impedance. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (41,85,'VSCP_TYPE_MEASUREMENT_SOUND_RESISTANCE','**Default unit:** Acoustic ohm Pa · s/ m³.\n\nThis is a measurement of sound resistance.\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (42,85,'VSCP_TYPE_MEASUREMENT_ELECTRIC_ELASTANCE','**Default unit:** daraf (f-1).\n\nThis is a measurement of electric elasticity. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (43,85,'VSCP_TYPE_MEASUREMENT_LUMINOUS_ENERGY','**Default unit:** talbot ( tb = lm * s) \n\nThis is a measurement of luminous energy.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (44,85,'VSCP_TYPE_MEASUREMENT_LUMINANCE','**Default unit:** cd / m²) (non SI unit = nit)\n\nThis is a measurement of luminance.\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (45,85,'VSCP_TYPE_MEASUREMENT_CHEMICAL_CONCENTRATION_MOLAR','**Default unit:** mol/m3.\n\nThis is a measurement of chemical mol concentration. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (46,85,'VSCP_TYPE_MEASUREMENT_CHEMICAL_CONCENTRATION_MASS','**Default unit:** kg/m3.\n\nThis is a measurement of chemical mass concentration. ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (47,85,'VSCP_TYPE_MEASUREMENT_DOSE_EQVIVALENT','Reserved\n\n\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (48,85,'VSCP_TYPE_MEASUREMENT_RESERVED48','Reserved \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (49,85,'VSCP_TYPE_MEASUREMENT_DEWPOINT','**Default unit:** Kelvin.  \n**Opt. unit:** Degree Celsius (1), Fahrenheit (2)\n\nThis is a measurement of the Dew Point. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (50,85,'VSCP_TYPE_MEASUREMENT_RELATIVE_LEVEL','**Default unit:** Relative value.\n\nThis is a relative value for a level measurement without a unit. It is just relative to the min/max value for the selected data representation, typically percentage or per mille or similar. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (51,85,'VSCP_TYPE_MEASUREMENT_ALTITUDE','**Default unit:** Meter.  \n**Opt. unit:** Feet(1), inches (2)\n\nAltitude in meters. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (52,85,'VSCP_TYPE_MEASUREMENT_AREA','**Default unit:** square meter (m²)\n\nArea in square meter. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (53,85,'VSCP_TYPE_MEASUREMENT_RADIANT_INTENSITY','**Default unit:** watt per steradian ( W / sr )\n\nRadiated power per room angle. \n\n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (54,85,'VSCP_TYPE_MEASUREMENT_RADIANCE','**Default unit:** watt per steradian per square metre ( W / (sr * m²) )\n\nThis is the radiant flux emitted, reflected, transmitted or received by a surface.\n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (55,85,'VSCP_TYPE_MEASUREMENT_IRRADIANCE','**Default unit:** watt per square metre ( W / m² )\n\nPower emitted from or striking onto a surface or area. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (56,85,'VSCP_TYPE_MEASUREMENT_SPECTRAL_RADIANCE','**Default unit:** watt per steradian per square metre per nm (W·sr-1·m-2·nm-1)    \n**Opt. unit:** watt per steradian per meter3 (W·sr-1·m-3) (1), watt per steradian per square metre per hertz (W·sr-1·m-3) (2)\n\nRadiance of a surface per unit frequency or wavelength.\n\n                        \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (57,85,'VSCP_TYPE_MEASUREMENT_SPECTRAL_IRRADIANCE','**Default unit:** watt per square metre per nm (W·m-2·nm-1)   \n**Opt. unit:** watt per metre3 (W·m-3) (1), watt per square metre per hertz (W·m-2·Hz-1) (2)\n\nIrradiance of a surface per unit frequency or wavelength.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (58,85,'VSCP_TYPE_MEASUREMENT_SOUND_PRESSURE','**Default unit:** pascal (Pa) \n\nThis is a measurement of sound pressure (acoustic pressure). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (59,85,'VSCP_TYPE_MEASUREMENT_SOUND_DENSITY','**Default unit:** pascal (Pa) \n\nSound energy density or sound density is the sound energy per unit volume.\n\n                        ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (60,85,'VSCP_TYPE_MEASUREMENT_SOUND_LEVEL','**Default unit:** decibel (dB) \n\nSound level expressed in decibel. This event is supplied for convenience.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (61,85,'VSCP_TYPE_MEASUREMENT_RADIATION_DOSE_EQ','**Default unit:** sievert (Sv).\n\n**Optional unit** rem (1)\n\nThis is a measurement of a radiation dose (Equivalent dose of ionizing radiation). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (62,85,'VSCP_TYPE_MEASUREMENT_RADIATION_DOSE_EXPOSURE','**Default unit:** coulomb per kilogram (C/kg).   \n**Optional unit:** Röntgen/R (1)\n\nThis is a measurement of a radiation dose (Exposed dose of ionizing radiation). \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,86,'VSCP_TYPE_MEASUREMENTX1_GENERAL','\nThis is a general (custom) event that can be used if no other event is suitable. \n \n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,87,'VSCP_TYPE_MEASUREMENTX2_GENERAL','General Event.\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,88,'VSCP_TYPE_MEASUREMENTX3_GENERAL','General Event.\n\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,89,'VSCP_TYPE_MEASUREMENTX4_GENERAL','General Event.\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,90,'CLASS1.WEATHER','General Event.');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (1,90,'CLASS1.WEATHER','The winter season has started.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (2,90,'CLASS1.WEATHER','The spring season has started.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (3,90,'CLASS1.WEATHER','The summer season has started.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (4,90,'CLASS1.WEATHER','The autumn season has started.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (5,90,'CLASS1.WEATHER','No wind\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (6,90,'CLASS1.WEATHER','Low wind speed conditions.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (7,90,'CLASS1.WEATHER','Medium wind speed conditions.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (8,90,'CLASS1.WEATHER','High wind speed conditions.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (9,90,'CLASS1.WEATHER','Very high wind speed conditions.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (10,90,'CLASS1.WEATHER','Fogg.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (11,90,'CLASS1.WEATHER','Freezing.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (12,90,'CLASS1.WEATHER','Cold\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (13,90,'CLASS1.WEATHER','Very cold\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (14,90,'CLASS1.WEATHER','Air normal\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (15,90,'CLASS1.WEATHER','Air hot\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (16,90,'CLASS1.WEATHER','Air very hot\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (17,90,'CLASS1.WEATHER','Pollution low\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (18,90,'CLASS1.WEATHER','Pollution medium\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (19,90,'CLASS1.WEATHER','Pollution high\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (20,90,'CLASS1.WEATHER','Air humid\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (21,90,'CLASS1.WEATHER','Air dry\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (22,90,'CLASS1.WEATHER','soil humid\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (23,90,'CLASS1.WEATHER','soil dry\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (24,90,'CLASS1.WEATHER','Rain none\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (25,90,'CLASS1.WEATHER','Rain light\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (26,90,'CLASS1.WEATHER','Rain heavy\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (27,90,'CLASS1.WEATHER','Rain very heavy\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (28,90,'CLASS1.WEATHER','Sun none\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (29,90,'CLASS1.WEATHER','Sun light\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (30,90,'CLASS1.WEATHER','Sun heavy\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (31,90,'CLASS1.WEATHER','Snow none.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (32,90,'CLASS1.WEATHER','Snow light.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (33,90,'CLASS1.WEATHER','Snow heavy.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (34,90,'CLASS1.WEATHER','Dew point.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (35,90,'CLASS1.WEATHER','Storm.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (36,90,'CLASS1.WEATHER','Flood.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (37,90,'CLASS1.WEATHER','Earthquake\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (38,90,'CLASS1.WEATHER','Nuclera disaster\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (39,90,'CLASS1.WEATHER','Fire.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (40,90,'CLASS1.WEATHER','Lightning.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (41,90,'CLASS1.WEATHER','Radiation low.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (42,90,'CLASS1.WEATHER','Radiation medium.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (43,90,'CLASS1.WEATHER','Radiation normal.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (44,90,'CLASS1.WEATHER','Radiation high.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (45,90,'CLASS1.WEATHER','Radiation very high.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (46,90,'CLASS1.WEATHER','Warning level 1. This is the lowest varning level.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (47,90,'CLASS1.WEATHER','Warninglevel 2.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (48,90,'CLASS1.WEATHER','Warninglevel 3.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (49,90,'CLASS1.WEATHER','Warning level 4.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (50,90,'CLASS1.WEATHER','Warning level 5. This is the highest warning level.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (51,90,'CLASS1.WEATHER','The final warning level not seen by humans.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (52,90,'CLASS1.WEATHER','\nUV Index is an international scale for UV intensity which can have the range of 1-15 where 1 is very low radiation and a value over 10 is extremely high radiation.\n\n | Data byte | Description                         |\n | :-------: | ----------------------------------- |\n | 0    | Index.                                                             |\n | 1    | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |\n | 3    | UV index (0-15)                        |\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,95,'VSCP_TYPE_WEATHER_GENERAL','General Event.');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (1,95,'VSCP_TYPE_WEATHER_SEASONS_WINTER','The winter season has started.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (2,95,'VSCP_TYPE_WEATHER_SEASONS_SPRING','The spring season has started.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (3,95,'VSCP_TYPE_WEATHER_SEASONS_SUMMER','The summer season has started.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (4,95,'VSCP_TYPE_WEATHER_SEASONS_AUTUMN','The autumn season has started.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (5,95,'VSCP_TYPE_WEATHER_WIND_NONE','No wind\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (6,95,'VSCP_TYPE_WEATHER_WIND_LOW','Low wind speed conditions.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (7,95,'VSCP_TYPE_WEATHER_WIND_MEDIUM','Medium wind speed conditions.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (8,95,'VSCP_TYPE_WEATHER_WIND_HIGH','High wind speed conditions.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (9,95,'VSCP_TYPE_WEATHER_WIND_VERY_HIGH','Very high wind speed conditions.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (10,95,'VSCP_TYPE_WEATHER_AIR_FOGGY','Fogg.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (11,95,'VSCP_TYPE_WEATHER_AIR_FREEZING','Freezing.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (12,95,'VSCP_TYPE_WEATHER_AIR_VERY_COLD','Cold\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (13,95,'VSCP_TYPE_WEATHER_AIR_COLD','Very cold\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (14,95,'VSCP_TYPE_WEATHER_AIR_NORMAL','Air normal\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (15,95,'VSCP_TYPE_WEATHER_AIR_HOT','Air hot\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (16,95,'VSCP_TYPE_WEATHER_AIR_VERY_HOT','Air very hot\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (17,95,'VSCP_TYPE_WEATHER_AIR_POLLUTION_LOW','Pollution low\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (18,95,'VSCP_TYPE_WEATHER_AIR_POLLUTION_MEDIUM','Pollution medium\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (19,95,'VSCP_TYPE_WEATHER_AIR_POLLUTION_HIGH','Pollution high\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (20,95,'VSCP_TYPE_WEATHER_AIR_HUMID','Air humid\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (21,95,'VSCP_TYPE_WEATHER_AIR_DRY','Air dry\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (22,95,'VSCP_TYPE_WEATHER_SOIL_HUMID','soil humid\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (23,95,'VSCP_TYPE_WEATHER_SOIL_DRY','soil dry\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (24,95,'VSCP_TYPE_WEATHER_RAIN_NONE','Rain none\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (25,95,'VSCP_TYPE_WEATHER_RAIN_LIGHT','Rain light\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (26,95,'VSCP_TYPE_WEATHER_RAIN_HEAVY','Rain heavy\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (27,95,'VSCP_TYPE_WEATHER_RAIN_VERY_HEAVY','Rain very heavy\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (28,95,'VSCP_TYPE_WEATHER_SUN_NONE','Sun none\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (29,95,'VSCP_TYPE_WEATHER_SUN_LIGHT','Sun light\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (30,95,'VSCP_TYPE_WEATHER_SUN_HEAVY','Sun heavy\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (31,95,'VSCP_TYPE_WEATHER_SNOW_NONE','Snow none.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (32,95,'VSCP_TYPE_WEATHER_SNOW_LIGHT','Snow light.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (33,95,'VSCP_TYPE_WEATHER_SNOW_HEAVY','Snow heavy.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (34,95,'VSCP_TYPE_WEATHER_DEW_POINT','Dew point.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (35,95,'VSCP_TYPE_WEATHER_STORM','Storm.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (36,95,'VSCP_TYPE_WEATHER_FLOOD','Flood.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (37,95,'VSCP_TYPE_WEATHER_EARTHQUAKE','Earthquake\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (38,95,'VSCP_TYPE_WEATHER_NUCLEAR_DISASTER','Nuclera disaster\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (39,95,'VSCP_TYPE_WEATHER_FIRE','Fire.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (40,95,'VSCP_TYPE_WEATHER_LIGHTNING','Lightning.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (41,95,'VSCP_TYPE_WEATHER_UV_RADIATION_LOW','Radiation low.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (42,95,'VSCP_TYPE_WEATHER_UV_RADIATION_MEDIUM','Radiation medium.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (43,95,'VSCP_TYPE_WEATHER_UV_RADIATION_NORMAL','Radiation normal.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (44,95,'VSCP_TYPE_WEATHER_UV_RADIATION_HIGH','Radiation high.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (45,95,'VSCP_TYPE_WEATHER_UV_RADIATION_VERY_HIGH','Radiation very high.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (46,95,'VSCP_TYPE_WEATHER_WARNING_LEVEL1','Warning level 1. This is the lowest varning level.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (47,95,'VSCP_TYPE_WEATHER_WARNING_LEVEL2','Warninglevel 2.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (48,95,'VSCP_TYPE_WEATHER_WARNING_LEVEL3','Warninglevel 3.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (49,95,'VSCP_TYPE_WEATHER_WARNING_LEVEL4','Warning level 4.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (50,95,'VSCP_TYPE_WEATHER_WARNING_LEVEL5','Warning level 5. This is the highest warning level.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (51,95,'VSCP_TYPE_WEATHER_ARMAGEDON','The final warning level not seen by humans.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (52,95,'VSCP_TYPE_WEATHER_UV_INDEX','\nUV Index is an international scale for UV intensity which can have the range of 1-15 where 1 is very low radiation and a value over 10 is extremely high radiation.\n\n | Data byte | Description                         |\n | :-------: | ----------------------------------- |\n | 0    | Index.                                                             |\n | 1    | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |\n | 3    | UV index (0-15)                        |\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,100,'CLASS1.PHONE','General Event.');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (1,100,'CLASS1.PHONE','There is an incoming phone call. Usually a caller ID node just sends out numerical information. A database event can follow (later) that contains the real text information.\n\nPhone calls are reported in the following form\n\n    from,to\n\nwhere from is the originating number and to is the receiving phone. Numbers is preferable presented in an international form. So a call from England to a Swedish phone should take the following form\n\n    44-123-1122334,46-657-413430\n\nwhich is sent in tree frames. Some device can''t separate country and area-code and therefore the form\n\n    441231122334,46657413430\n\nwill also be valid.\n\na database connected application can later resolve this and present\n\n    A customer,Eurosource\n\nThis is the type=8 event, database info, (see below). Note that the comma cant be used in the descriptive names.\n\nCalls from unlisted numbers are presented as\n\n    ,to \n\n | Byte | Description | \n | :----: | ----------- | \n | 0    | Id for the call. This is an incremental identity number for each call. | \n | 1    | Index of phone event (base = 0). Each call can be broken up into fragments. This is the fragment number. | \n | 2    | Total number of events (fragments) for this call information. | \n | 3-7  | Caller information. Number or real text information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (2,100,'CLASS1.PHONE','There is an outgoing phone call. \n\n | Byte | Description | \n | :----: | ----------- | \n | 0    | Id for the call. This is an incremental ID number for each call. |\n | 1    | Index of phone event (base = 0). Each call can be broken up into fragments. This is the fragment number. | \n | 2    | Total number of events (fragments) for this call information. | \n | 3-7  | Caller information. Number or real text information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (3,100,'CLASS1.PHONE','This is a event indicating that there is a “ring” for this call. \n\n | Byte | Description | \n | :----: | ----------- | \n | 0    | An ID for the call. This can for instance be a number that increases by one for each call. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (4,100,'CLASS1.PHONE','The call has been answered. \n\n | Byte | Description | \n | :----: | ----------- | \n | 0    | An ID for the call. This can for instance be a number that increases by one for each call. | \n | 1    | Zone for answer location. | \n | 2    | Sub-zone for answer location. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (5,100,'CLASS1.PHONE','The call has been terminated by the receiving end. \n\n | Byte | Description | \n | :----: | ----------- | \n | 0 | An ID for the call. This can for instance be a number that increases by one for each call. | \n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (6,100,'CLASS1.PHONE','The call has been terminated by the originating end. byte \n\n| Byte | Description | \n | :----: | ----------- | \n | 0 | An ID for the call. This can for instance be a number that increases by one for each call. | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (7,100,'CLASS1.PHONE','The call has been transferred. byte \n\n | Byte | Description | \n | :----: | ----------- | \n | 0 | An ID for the call. This can for instance be a number that increases by one for each call. | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (8,100,'CLASS1.PHONE',' Call database info.\n \n | Byte | Description | \n | :----: | ----------- | \n | 0   | Id for the call. This is a number that is increased by one for each call. In this case the number is the same as for the incoming or outgoing events. | \n | 1   | Index of phone event (base=0). Each call can be broken up into fragments. This is the fragment number. | \n | 2   | Total number of events (fragments) for this call information. | \n | 3-7 | Caller information. Real text information.  | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,102,'CLASS1.DISPLAY','General Event.');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (1,102,'CLASS1.DISPLAY','Clear the display on displays in a certain zone,sub-zone. \n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Code - not yet defined.                                            | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (2,102,'CLASS1.DISPLAY','Move the cursor to a specific position on displays in a certain zone,sub-zone. \n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n | 3    | Row to move to (first row is 0).                                   | \n | 4    | Column to move to (first column is 0).                             | \n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (3,102,'CLASS1.DISPLAY','Write to display(s) in a certain zone,sub-zone. The update of the display is immediate. \n\n | Byte | Description                                                               | \n | :----: | -----------                                                               | \n | 0    | index - Increase by one for each event sent for specific text to display. | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.                | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones.        | \n | 3-7  | Display data.                                                             | \n\nIndex is increased by one for each event that builds up a specific event. If needed an empty (no data) can be sent as the last event else sending data to fill the display buffer will give the end automatically. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (4,102,'CLASS1.DISPLAY','Write to the buffers of displays in a certain zone,sub-zone. The update of the display is is not done right away but is instead done when the Show Buffer event is received by the display unit. \n\n | Byte | Description                                                               | \n | :----: | -----------                                                               | \n | 0    | index - Increase by one for each event sent for specific text to display. | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.                | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones.        | \n | 3-7  | Display data.                                                             | \n\nIndex is increased by one for each event that builds up a specific event. If needed an empty (no data) can be sent as the last event else sending data to fill the display buffer will give the end automatically.\n\nMany LCD displays allow definition of special characters. Use this event to define custom matrices buy defining a sub-zone for the user defined matrix(es). \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (5,102,'CLASS1.DISPLAY','Tells displays in a certain zone,sub-zone to display the content in their display buffers. The update of the display is immediate. \n\n | Byte | Description                                                               | \n | :----: | -----------                                                               | \n | 0    | index - Increase by one for each event sent for specific text to display. | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.                | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones.        | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (6,102,'CLASS1.DISPLAY','With this call a display buffer parameter can be sent to a display. This parameter is inserted at the escape position %pn in the string in the buffer *when the buffer is transferred to the display*.\n\nNote that there are no zone and sub-zone defined for this event and the escapes must instead be chosen to be distinct in a system. This means that &p1 will be unique within a system and updating this parameter will update on all displays that has it defined. \n\n | Byte | Description                                | \n | :----: | -----------                                | \n | 0    | Display parameter index.                   | \n | 1    | Data coding byte as of VSCP Specification. | \n | 2-7  | Data as of coding.                         | \n\nNote that the event have one byte less then standard measurement events so all coding types can not be used. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (32,102,'CLASS1.DISPLAY','This event contains information that should be displayed on displays pointed out by zone/sub-zone.\n\nThis event can have the same functionality as Write Display or be set on an higher abstraction level. \n\n | Byte | Description                                                               | \n | :----: | -----------                                                               | \n | 0    | Index - Increase by one for each event sent for specific text to display. | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.                | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones.        | \n | 3-7  | event.                                                                    | \n\nIndex is increase by one for each event that builds up a specific event. If needed an empty (no data) can be sent as the last event else sending data to fill the display buffer will give the end automatically.\n\nThe text sent to a node can contain escape characters that themselves display data or other display events. Se the new_york node for examples of this.\n\nFor a multi line display one can use different sub-zones o address different lines. One can also us macro characters to map display events to a line. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (48,102,'CLASS1.DISPLAY','This event contains information that should be displayed on LED(s) pointed out by zone/sub-zone. \n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index                                                              | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n | 3    | 0 =off, 1=on, 2=blink                                              | \n | 4    | Blink period: MSB milliseconds for ON.                             | \n | 5    | Blink period: LSB milliseconds for ON.                             | \n | 6    | Blink period: MSB milliseconds for OFF.                            | \n | 7    | Blink period: LSB milliseconds for OFF.                            | \n\nBlink period can be omitted if not used or if blink period is defined hard. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (49,102,'CLASS1.DISPLAY','This event set the color for LED(s) pointed out by zone/sub-zone. \n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index                                                              | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n | 3    | Color R to display 0-255.                                          | \n | 4    | Color G to display 0-255.                                          | \n | 5    | Color B to display 0-255.                                          | \n\nIf multi-byte resolution for the colors is needed use index to address the byte where 0 means the MSB byte, 1 MSB+1 byte etc (Big endian).\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,110,'CLASS1.IR','General Event.');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (1,110,'CLASS1.IR','A RC5 remote code. [http://www.xs4all.nl/~sbp/knowledge/ir/sirc.htm ]Use the VSCP abstract remote format if possible.\n\n | Byte | Description          | \n | :----: | -----------          | \n | 0    | RC5 code.            | \n | 1    | RC5 Address.         | \n | 2    | Repeat count if any. | ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (3,110,'CLASS1.IR','A SONY remote code. [http://www.xs4all.nl/~sbp/knowledge/ir/sirc.htm] Use the VSCP abstract remote format if possible.\n\n | Byte | Description          | \n | :----: | -----------          | \n | 0    | SONY code.           | \n | 1    | SONY address.        | \n | 2    | Repeat count if any. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (32,110,'CLASS1.IR','Packed LIRC codes code. LRC Codes are normally sent as 64-bit codes or even larger codes. Only codes with a length less then 56 bits (7-bytes) are supported by VSCP and the most significant byte of the LIRC code is not transferred. [http://www.lirc.org/](http://www.lirc.org/) \n\n | Byte | Description          | \n | :----: | -----------          | \n | 0    | LIRC Code, MSB.      | \n | 1    | LIRC Code.           | \n | 2    | LIRC Code.           | \n | 3    | LIRC Code.           | \n | 4    | LIRC Code.           | \n | 5    | LIRC Code.           | \n | 6    | LIRC Code. LSB.      | \n | 7    | Repeat count if any. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (48,110,'CLASS1.IR','Instead of sending codes that relates to a certain remote this format is general. And therefore more flexible \n\n | Byte | Description                                                            | \n | :----: | -----------                                                            | \n | 0    | Code, MSB.                                                             | \n | 1    | Code LSB.                                                              | \n | 2    | Zone for which event applies to (0-255). 255 is all zones.             | \n | 3    | Sub-zone for which the event applies to (0-255). 255 is all sub-zones. | \n | 4    | Repeat count if any.                                                   | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (49,110,'CLASS1.IR','Instead of sending codes that relates to a certain remote this format is general. And therefore more flexible. \n\n | Byte | Description                                                            | \n | :----: | -----------                                                            | \n | 0    | Repeat Count.                                                          | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.             | \n | 2    | Sub-zone for which the event applies to (0-255). 255 is all sub-zones. | \n | 3    | Control address MSB.                                                   | \n | 4    | Control address.                                                       | \n | 5    | Control address.                                                       | \n | 6    | Control address LSB.                                                   | \n | 7    | Key Code.                                                              | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,120,'CLASS1.CONFIGURE','General Event.');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (1,120,'CLASS1.CONFIGURE','Load a specific configuration on a node.  The configuration to load is defined by a 16-byte configuration id. It is recommended that configuration id zero is the default configuration.\n\nThe optional control byte can be used to request a reset if the device after configuration is loaded.\n\n\nCLASS1.CONFIGURE, VSCP_TYPE_CONFIGURE_LOAD_ACK should be sent by the node after loading the new configuration to acknowledge a successful load of configuration data.\n\nCLASS1.CONFIGURE, VSCP_TYPE_CONFIGURE_LOAD_NACK should be sent by the node after loading the new configuration to negative acknowledge a failed load of configuration data.\n\n | Byte | Description | \n | :----: | ----------- | \n | 0    | Index.                | \n | 1    | Zone.                 | \n | 2    | Subzone.              | \n | 3    | Configuration id MSB. | \n | 4    | Configuration id LSB. |\n | 5    | Control byte (optional). |\n\n## Control byte\n\n| Bit | Description | \n| :----: | ----------- | \n| 0-6    | Reserved.   | \n| 7    | Reset device when new configuration is loaded.   | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (2,120,'CLASS1.CONFIGURE','This event should be sent by the node after loading a new configuration to acknowledge a successful load of configuration data. The configuration id for the successfully loaded configuration should be given in byte 0 and 1.\n\n | Byte | Description | \n | :----: | ----------- | \n | 0    | Configuration id MSB. | \n | 1    | Configuration id LSB. |\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (3,120,'CLASS1.CONFIGURE','This event should be sent by the node after loading a new configuration to negative acknowledge an unsuccessful load of configuration data. The configuration id for the unsuccessfully loaded configuration should be given in byte 0 and 1.\n\n | Byte | Description | \n | :----: | ----------- | \n | 0    | Configuration id MSB. | \n | 1    | Configuration id LSB. |\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (4,120,'CLASS1.CONFIGURE','Save a specific configuration on a node.  The configuration to save is identified by a 16-byte configuration id. It is recommended that configuration id zero is the default configuration.\n\nThe optional control byte can be used to request a reset if the device after configuration is saved.\n\nCLASS1.CONFIGURE, VSCP_TYPE_CONFIGURE_SAVE_ACK should be sent by the node after saving the new configuration to acknowledge a successful save of configuration data.\n\nCLASS1.CONFIGURE, VSCP_TYPE_CONFIGURE_SAVE_NACK should be sent by the node after saving the new configuration to negative acknowledge a failed save of configuration data.\n\n | Byte | Description | \n | :----: | ----------- | \n | 0    | Index.                | \n | 1    | Zone.                 | \n | 2    | Subzone.              | \n | 3    | Configuration id MSB. | \n | 4    | Configuration id LSB. |\n | 5    | Control byte (optional). |\n\n## Control byte\n\n| Bit | Description | \n| :----: | ----------- | \n| 0-6    | Reserved.   | \n| 7    | Reset device when new configuration is loaded.   | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (5,120,'CLASS1.CONFIGURE','This event should be sent by the node after saving a new configuration to acknowledge a successful save of configuration data. The configuration id for the successfully saved configuration should be given in byte 0 and 1.\n\n | Byte | Description | \n | :----: | ----------- | \n | 0    | Configuration id MSB. | \n | 1    | Configuration id LSB. |\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (6,120,'CLASS1.CONFIGURE','This event should be sent by the node after saving a new configuration to negative acknowledge an unsuccessful save of configuration data. The configuration id for the unsuccessfully saved configuration should be given in byte 0 and 1.\n\n | Byte | Description | \n | :----: | ----------- | \n | 0    | Configuration id MSB. | \n | 1    | Configuration id LSB. |\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (7,120,'CLASS1.CONFIGURE','Commit a specific configuration on a node.  The configuration to commit is identified by a 16-byte configuration id. It is recommended that configuration id zero is the default configuration.\n\nThe optional control byte can be used to request a reset if the device after configuration is saved.\n\nCLASS1.CONFIGURE, VSCP_TYPE_CONFIGURE_COMMIT_ACK should be sent by the node after committing the new configuration to acknowledge a successful commit of configuration data.\n\nCLASS1.CONFIGURE, VSCP_TYPE_CONFIGURE_COMMIT_NACK should be sent by the node after committing the new configuration to negative acknowledge a failed commit of configuration data.\n\n | Byte | Description | \n | :----: | ----------- | \n | 0    | Index.                | \n | 1    | Zone.                 | \n | 2    | Subzone.              | \n | 3    | Configuration id MSB. | \n | 4    | Configuration id LSB. |\n | 5    | Control byte (optional). |\n\n## Control byte\n\n| Bit | Description | \n| :----: | ----------- | \n| 0-6    | Reserved.   | \n| 7    | Reset device when new configuration is loaded.   | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (8,120,'CLASS1.CONFIGURE','This event should be sent by the node after comitting a new configuration to acknowledge a successful commit of configuration data. The configuration id for the successfully committed configuration should be given in byte 0 and 1.\n\n | Byte | Description | \n | :----: | ----------- | \n | 0    | Configuration id MSB. | \n | 1    | Configuration id LSB. |\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (9,120,'CLASS1.CONFIGURE','This event should be sent by the node after committing a new configuration to negative acknowledge an unsuccessful commit of configuration data. The configuration id for the unsuccessfully committed configuration should be given in byte 0 and 1.\n\n | Byte | Description | \n | :----: | ----------- | \n | 0    | Configuration id MSB. | \n | 1    | Configuration id LSB. |\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (10,120,'CLASS1.CONFIGURE','Reload a specific configuration on a node.  The configuration to reload is identified by a 16-byte configuration id. It is recommended that configuration id zero is the default configuration.\n\nThe optional control byte can be used to request a reset if the device after configuration is saved.\n\nCLASS1.CONFIGURE, VSCP_TYPE_CONFIGURE_RELOAD_ACK should be sent by the node after reloadinf the new configuration to acknowledge a successful reload of configuration data.\n\nCLASS1.CONFIGURE, VSCP_TYPE_CONFIGURE_RELOAD_NACK should be sent by the node after reloading the new configuration to negative acknowledge a failed reload of configuration data.\n\n | Byte | Description | \n | :----: | ----------- | \n | 0    | Index.                | \n | 1    | Zone.                 | \n | 2    | Subzone.              | \n | 3    | Configuration id MSB. | \n | 4    | Configuration id LSB. |\n | 5    | Control byte (optional). |\n\n## Control byte\n\n| Bit | Description | \n| :----: | ----------- | \n| 0-6    | Reserved.   | \n| 7    | Reset device when new configuration is loaded.   | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (11,120,'CLASS1.CONFIGURE','This event should be sent by the node after reloading a new configuration to acknowledge a successful reload of configuration data. The configuration id for the successfully reloaded configuration should be given in byte 0 and 1.\n\n | Byte | Description | \n | :----: | ----------- | \n | 0    | Configuration id MSB. | \n | 1    | Configuration id LSB. |\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (12,120,'CLASS1.CONFIGURE','This event should be sent by the node after reloading a new configuration to negative acknowledge an unsuccessful reload of configuration data. The configuration id for the unsuccessfully reloaded configuration should be given in byte 0 and 1.\n\n | Byte | Description | \n | :----: | ----------- | \n | 0    | Configuration id MSB. | \n | 1    | Configuration id LSB. |\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (13,120,'CLASS1.CONFIGURE','Restore a specific configuration on a node.  The configuration to restore is identified by a 16-byte configuration id. It is recommended that configuration id zero is the default configuration.\n\nThe optional control byte can be used to request a reset if the device after configuration is saved.\n\nCLASS1.CONFIGURE, VSCP_TYPE_CONFIGURE_RESTORE_ACK should be sent by the node after restoring the new configuration to acknowledge a successful restore of configuration data.\n\nCLASS1.CONFIGURE, VSCP_TYPE_CONFIGURE_RESTORE_NACK should be sent by the node after restoring the new configuration to negative acknowledge a failed restore of configuration data.\n\n | Byte | Description | \n | :----: | ----------- | \n | 0    | Index.                | \n | 1    | Zone.                 | \n | 2    | Subzone.              | \n | 3    | Configuration id MSB. | \n | 4    | Configuration id LSB. |\n | 5    | Control byte (optional). |\n\n## Control byte\n\n| Bit | Description | \n| :----: | ----------- | \n| 0-6    | Reserved.   | \n| 7    | Reset device when new configuration is loaded.   | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (14,120,'CLASS1.CONFIGURE','This event should be sent by the node after restoring a new configuration to acknowledge a successful restore of configuration data. The configuration id for the successfully restored configuration should be given in byte 0 and 1.\n\n | Byte | Description | \n | :----: | ----------- | \n | 0    | Configuration id MSB. | \n | 1    | Configuration id LSB. |\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (15,120,'CLASS1.CONFIGURE','This event should be sent by the node after restoring a new configuration to negative acknowledge an unsuccessful restore of configuration data. The configuration id for the unsuccessfully restored configuration should be given in byte 0 and 1.\n\n | Byte | Description | \n | :----: | ----------- | \n | 0    | Configuration id MSB. | \n | 1    | Configuration id LSB. |\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (30,120,'CLASS1.CONFIGURE','Set mode, that is, set a parameter identified by a 16-bit parameter id to a value identified by a 16-bit value identifier. A typical examples of the use of this event is to set the unit for a measurement on one or several nodes. It is recommended that the value identifier zero is used as the default value for a parameter.\n\nCLASS1.CONFIGURE, VSCP_TYPE_CONFIGURE_SET_MODE_ACK should be sent by the node after setting the new value.\n\nCLASS1.CONFIGURE, VSCP_TYPE_CONFIGURE_SET_MODE_NACK should be sent by the node if it fails to set the new value.\n\n | Byte | Description | \n | :----: | ----------- | \n | 0    | Index.                | \n | 1    | Zone.                 | \n | 2    | Subzone.              | \n | 3    | Parameter id MSB. | \n | 4    | Parameter id LSB. |\n | 5    | Value id MSB. | \n | 6    | Value id LSB. |\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (31,120,'CLASS1.CONFIGURE','Set default mode, that is, set the default value for a parameter identified by a 16-bit parameter id. In most cases this is the same as setting the mode for a parameter to value id zero.\n\nCLASS1.CONFIGURE, VSCP_TYPE_CONFIGURE_SET_MODE_ACK should be sent by the node after setting the new value.\n\nCLASS1.CONFIGURE, VSCP_TYPE_CONFIGURE_SET_MODE_NACK should be sent by the node if it fails to set the new value.\n\n | Byte | Description | \n | :----: | ----------- | \n | 0    | Index.                | \n | 1    | Zone.                 | \n | 2    | Subzone.              | \n | 3    | Parameter id MSB. | \n | 4    | Parameter id LSB. |\n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (32,120,'CLASS1.CONFIGURE','This event should be sent by the node after setting the new value.\n\n | Byte | Description | \n | :----: | ----------- | \n | 0    | Parameter id MSB. | \n | 1    | Parameter id LSB. |\n | 2    | Value id MSB. | \n | 3    | Value id LSB. |\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (33,120,'CLASS1.CONFIGURE','should be sent by the node if it fails to set the new value.\n\n\n | Byte | Description | \n | :----: | ----------- | \n | 0    | Parameter id MSB. | \n | 1    | Parameter id LSB. |\n | 2    | Value id MSB. | \n | 3    | Value id LSB. |\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,206,'CLASS1.GNSS','General Event.');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (1,206,'CLASS1.GNSS','Position information as decimal Latitude + Longitude. \n\n | Byte | Description                        | \n | :----: | -----------                        | \n | 0-3  | Latitude as floating point value.  | \n | 4-7  | Longitude as floating point value. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (2,206,'CLASS1.GNSS','Number of satellites used. \n\n | Byte | Description                | \n | :----: | -----------                | \n | 0    | Number of satellites used. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,212,'CLASS1.WIRELESS','General Event.');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (1,212,'CLASS1.WIRELESS','Event with ID for the GSM cell. Normally this is a 16-bit value but a 32-bit value is used in VSCP. \n\n | Byte | Description  | \n | :----: | -----------  | \n | 0-3  | GSM Cell ID. | ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,506,'CLASS1.DIAGNOSTIC','General Event. \n\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0         | index. Often used as an index for channels/subdevices within a module. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones. | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n        ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (1,506,'CLASS1.DIAGNOSTIC','Over voltage has been diagnosed. \n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (2,506,'CLASS1.DIAGNOSTIC','Under voltage has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (3,506,'CLASS1.DIAGNOSTIC','Low voltage on USB VBUS has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (4,506,'CLASS1.DIAGNOSTIC','Low battery voltage has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (5,506,'CLASS1.DIAGNOSTIC','Battery full voltage has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (6,506,'CLASS1.DIAGNOSTIC','Battery error has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (7,506,'CLASS1.DIAGNOSTIC','Functional battery has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (8,506,'CLASS1.DIAGNOSTIC','Over current has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (9,506,'CLASS1.DIAGNOSTIC','Circuit error has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (10,506,'CLASS1.DIAGNOSTIC','Short circuit has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (11,506,'CLASS1.DIAGNOSTIC','Open Circuit has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (12,506,'CLASS1.DIAGNOSTIC','Moist has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (13,506,'CLASS1.DIAGNOSTIC','Wire failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (14,506,'CLASS1.DIAGNOSTIC','Wireless faliure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (15,506,'CLASS1.DIAGNOSTIC','IR failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (16,506,'CLASS1.DIAGNOSTIC','1-wire failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (17,506,'CLASS1.DIAGNOSTIC','RS-222 failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (18,506,'CLASS1.DIAGNOSTIC','RS-232 failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (19,506,'CLASS1.DIAGNOSTIC','RS-423 failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (20,506,'CLASS1.DIAGNOSTIC','RS-485 failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (21,506,'CLASS1.DIAGNOSTIC','CAN failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (22,506,'CLASS1.DIAGNOSTIC','LAN failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (23,506,'CLASS1.DIAGNOSTIC','USB failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (24,506,'CLASS1.DIAGNOSTIC','Wifi failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (25,506,'CLASS1.DIAGNOSTIC','NFC/RFID failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (26,506,'CLASS1.DIAGNOSTIC','Low signal has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (27,506,'CLASS1.DIAGNOSTIC','High signal has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (28,506,'CLASS1.DIAGNOSTIC','ADC failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (29,506,'CLASS1.DIAGNOSTIC','ALU failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (30,506,'CLASS1.DIAGNOSTIC','An assert has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (31,506,'CLASS1.DIAGNOSTIC','DAC failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (32,506,'CLASS1.DIAGNOSTIC','DMA failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (33,506,'CLASS1.DIAGNOSTIC','Ethernet failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (34,506,'CLASS1.DIAGNOSTIC','Exception has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (35,506,'CLASS1.DIAGNOSTIC','Floating point unit (FPU) failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (36,506,'CLASS1.DIAGNOSTIC','General purpose I/O (GPIO) failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (37,506,'CLASS1.DIAGNOSTIC','I2C failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (38,506,'CLASS1.DIAGNOSTIC','I2C failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (39,506,'CLASS1.DIAGNOSTIC','Invalid configuration has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (40,506,'CLASS1.DIAGNOSTIC','Memory Management Unit (MMU) failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (41,506,'CLASS1.DIAGNOSTIC','Non mask-able interrupt (NMI) failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (42,506,'CLASS1.DIAGNOSTIC','Overheat has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (43,506,'CLASS1.DIAGNOSTIC','Phased Locked Loop (PLL) fail has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (44,506,'CLASS1.DIAGNOSTIC','Power ON Reset (POR) fail has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (45,506,'CLASS1.DIAGNOSTIC','Pulse Width Modulation (PWM) failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (46,506,'CLASS1.DIAGNOSTIC','Random Access Memory (RAM) failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (47,506,'CLASS1.DIAGNOSTIC','Read only memory (ROM) failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (48,506,'CLASS1.DIAGNOSTIC','Serial peripheral interface (SPI) failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (49,506,'CLASS1.DIAGNOSTIC','Stack failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (50,506,'CLASS1.DIAGNOSTIC','LIN bus failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (51,506,'CLASS1.DIAGNOSTIC','UART failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (52,506,'CLASS1.DIAGNOSTIC','Unhandled interrupt has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (53,506,'CLASS1.DIAGNOSTIC','Memory failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (54,506,'CLASS1.DIAGNOSTIC','Variable range failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (55,506,'CLASS1.DIAGNOSTIC','Watch Dog Timer (WDT) failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (56,506,'CLASS1.DIAGNOSTIC','EEPROM failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (57,506,'CLASS1.DIAGNOSTIC','Encryption failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (58,506,'CLASS1.DIAGNOSTIC','Bad user input failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (59,506,'CLASS1.DIAGNOSTIC','Decryption failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (60,506,'CLASS1.DIAGNOSTIC','Noise has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (61,506,'CLASS1.DIAGNOSTIC','Boot loader failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (62,506,'CLASS1.DIAGNOSTIC','Program flow failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (63,506,'CLASS1.DIAGNOSTIC','Real Time Clock (RTC) failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (64,506,'CLASS1.DIAGNOSTIC','System test failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (65,506,'CLASS1.DIAGNOSTIC','Sensor failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (66,506,'CLASS1.DIAGNOSTIC','Safe state entered has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (67,506,'CLASS1.DIAGNOSTIC','Signal implausible has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (68,506,'CLASS1.DIAGNOSTIC','Storage fail has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (69,506,'CLASS1.DIAGNOSTIC','Self test OK has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (70,506,'CLASS1.DIAGNOSTIC','ESD/EMC/EMI failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (71,506,'CLASS1.DIAGNOSTIC','Timeout has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (72,506,'CLASS1.DIAGNOSTIC','LCD failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (73,506,'CLASS1.DIAGNOSTIC','Touch panel failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (74,506,'CLASS1.DIAGNOSTIC','No load has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (75,506,'CLASS1.DIAGNOSTIC','Cooling failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (76,506,'CLASS1.DIAGNOSTIC','Heating failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (77,506,'CLASS1.DIAGNOSTIC','Transmission failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (78,506,'CLASS1.DIAGNOSTIC','Receiption failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (79,506,'CLASS1.DIAGNOSTIC','A failure in an external IC circuit has been detected.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,508,'CLASS1.ERROR','This error message is used to report success, that is no error.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (1,508,'CLASS1.ERROR','This error message is used to indicate an error condition.\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (7,508,'CLASS1.ERROR','This error message is used to indicate a (communication) channel problem.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (8,508,'CLASS1.ERROR','This error message is used to indicate a fifo empty problem.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (9,508,'CLASS1.ERROR','This error message is used to indicate a fifo full problem.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (10,508,'CLASS1.ERROR','This error message is used to indicate a fifo size problem.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (11,508,'CLASS1.ERROR','This error message is used to indicate a fifo wait problem.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (12,508,'CLASS1.ERROR','This error message is used to indicate a generic error.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (13,508,'CLASS1.ERROR','This error message is used to indicate a hardware error.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (14,508,'CLASS1.ERROR','This error message is used to indicate a initialization error.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (15,508,'CLASS1.ERROR','This error message is used to indicate a missing initialization error.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (16,508,'CLASS1.ERROR','This error message is used to indicate a initialization ready error.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (17,508,'CLASS1.ERROR','This error message is used to indicate a not supported error.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (18,508,'CLASS1.ERROR','This error message is used to indicate an overrun error.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (19,508,'CLASS1.ERROR','This error message is used to indicate a receiver empty error.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (20,508,'CLASS1.ERROR','This error message is used to indicate a register error.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (21,508,'CLASS1.ERROR','This error message is used to indicate a transmitter full error.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (28,508,'CLASS1.ERROR','This error message is used to indicate a library error.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (29,508,'CLASS1.ERROR','This error message is used to indicate a procedural address error.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (30,508,'CLASS1.ERROR','This error message is used to indicate an only one instance error.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (31,508,'CLASS1.ERROR','This error message is used to indicate a sub driver error.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (32,508,'CLASS1.ERROR','This error message is used to indicate a timeout error.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (33,508,'CLASS1.ERROR','This error message is used to indicate a not open error.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (34,508,'CLASS1.ERROR','This error message is used to indicate a parameter error.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (35,508,'CLASS1.ERROR','This error message is used to indicate a memory error.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (36,508,'CLASS1.ERROR','This error message is used to indicate a internal error.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (37,508,'CLASS1.ERROR','This error message is used to indicate a communication error.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (38,508,'CLASS1.ERROR','This error message is used to indicate a user error.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (39,508,'CLASS1.ERROR','This error message is used to indicate a password error.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (40,508,'CLASS1.ERROR','This error message is used to indicate a connection error.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (41,508,'CLASS1.ERROR','This error message is used to indicate a invalid handle error.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (42,508,'CLASS1.ERROR','This error message is used to indicate an operation failed error.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (43,508,'CLASS1.ERROR','This error message is used to indicate that the supplied buffer is to small to fit content.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (44,508,'CLASS1.ERROR','This error message is used to indicate that the requested item (remote variable) is unknown.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (45,508,'CLASS1.ERROR','This error message is used to indicate that the name is already in use.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (46,508,'CLASS1.ERROR','This error message is used to indicate an error when writing data.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (47,508,'CLASS1.ERROR','This error message is used to indicate a stopped or an aborted operation.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. |');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (48,508,'CLASS1.ERROR','This error message is used to indicate a pointer with an invalid value.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,509,'CLASS1.LOG','General Event.');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (1,509,'CLASS1.LOG','Message for Log. Several frames have to be sent for a event that take up more the five bytes which is the maximum for each frame. In this case the zero based index (byte 2) should be increased for each frame. \n\n | Byte | Description            | \n | :----: | -----------            | \n | 0    | ID for event.          | \n | 1    | Log level for message. | \n | 2    | Idx for this message.  | \n | 3-7  | Message.               |');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (2,509,'CLASS1.LOG','Start logging. \n\n | Byte | Description | \n | :----: | ----------- | \n | 0    | ID for log. | ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (3,509,'CLASS1.LOG','Stop logging. \n\n | Byte | Description | \n | :----: | ----------- | \n | 0    | ID for log. | ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (4,509,'CLASS1.LOG','Set level for logging. \n\n | Byte | Description                  | \n | :----: | -----------                  | \n | 0    | ID for log byte 0 Log level. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,510,'CLASS1.LABORATORY','General Event.');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,511,'CLASS1.LOCAL','General Event.');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,512,'VSCP_TYPE_PROTOCOL_GENERAL','General Event.');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (1,512,'VSCP_TYPE_PROTOCOL_SEGCTRL_HEARTBEAT','**Not mandatory.** Implement in device if needed by application. \n\nA segment controller sends this event once a second on the segment that it controls. The data field contains the 8-bit CRC of the segment controller GUID and the time since the epoch (00:00:00 UTC, January 1, 1970) as a 32-bit value. A node that receive (and recognize) this event could respond with a CLASS1.INFORMATION, Type=9 event (HEARTBEAT) and should do so if it does not send out a regular heartbeat event.\n\nOther nodes can originate this event on the segment. For these nodes the data part, as specified below, should be omitted. A better choice for periodic heartbeat events from a node may be [CLASS1.INFORMATION, Type=9 (HEARTBEAT)](./class1.information.md#type9)\n\nAll nodes that recognize this event should save the 8-bit CRC in non-volatile storage and use it on power up. When a node starts up on a segment it should begin to listen for the Segment controller heartbeat. When/if it is received the node compares it with the stored value and if equal and the node is assigned a nickname-ID it continues to its working mode. If different, the node has detected that it has been moved to a new segment and therefore must drop its nickname-ID and enters the configuration mode to obtain a new nickname-ID from the segment controller.\n\nIf the node is in working mode and its nickname-ID changes, the node should do a complete restart after first setting all controls to their default state.\n\nAs a segment can be without a segment controller this event is not available on all segments and is not mandatory. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | 8-bit CRC of the segment controller GUID. | \n | 1 | MSB of time since epoch (optional). |\n | 2  | Time since epoch (optional). | \n | 3         | Time since epoch (optional).|\n | 4         | LSB of time since epoch | \n\nUninitiated nodes have the CRC of the segment controller set to 0xFF.\n\nA node that is initialized on a segment and does not receive a Heartbeat can take the role of segment controller if it wishes to do so. Only one node one a segment are allowed to do this fully by setting its nickname=0 and therefore a standard node should not have this feature built in. Any node can however behave like a segment controller but use a nickname other then zero. \n\nTime is UTC.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (2,512,'VSCP_TYPE_PROTOCOL_NEW_NODE_ONLINE','**Mandatory.** Must be implemented by all devices.\n\nThis is intended for nodes that have been initiated, is part of the segment and is powered up. All nodes that have a nickname-ID that is not set to 0xFF should send this event before they go on line to do their “day to day” work.\n\nNormally all nodes should save their assigned nickname-ID in non-volatile memory and use this assigned ID when powered up. A segment controller can however keep track of nodes that it controls and reassign the ID to a node that it did not get a new node on-line event from. This is the method a segment controller uses to detect nodes that have been removed from the segment.\n\nFor the nickname discovery procedure this event is used as the probe. The difference between a probe and a new node on line is that the later has the same originating nickname as value in byte 0.\n\nIf a node send this event with the unassigned ID 0xFF and byte 0 set to 0xFF it has given up the search for a free ID.\n\nIt is recommended that also level II nodes send this event when they come alive. In this case the target address is the 16-byte data GUID of the node with MSB in the first byte. \n\n | Data | Description | \n | :----: | ----------- | \n | 0    | **Target address**. This is the probe nickname that the new node is using to test if this is a valid target node. If there is a node with this nickname address it should answer with probe ACK. A probe always has 0xff as it''s own temporary nickname while a new node on line use a non 0xff nickname. | \n\nOn a Level II system.\n\n | Data | Description | \n | :----: | ----------- | \n | 0-15 | **GUID**. This is the GUID of the node. MSB in byte 0. | \n\n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (3,512,'VSCP_TYPE_PROTOCOL_PROBE_ACK','**Mandatory.** Must be implemented by all devices.\n\nThis event is sent from a node as a response to a probe. There are no arguments.\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (4,512,'VSCP_TYPE_PROTOCOL_RESERVED4','Reserved for future use.\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (5,512,'VSCP_TYPE_PROTOCOL_RESERVED5','Reserved for future use.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (6,512,'VSCP_TYPE_PROTOCOL_SET_NICKNAME','**Mandatory.** Must be implemented by all devices.\n\nThis event can be used to change the nickname for a node. The node just uses the new nickname and don''t start nickname discovery or similar.\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0  | Old nickname for node. | \n | 1  | The new nickname for the node. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (7,512,'VSCP_TYPE_PROTOCOL_NICKNAME_ACCEPTED','**Mandatory.** Must be implemented by all devices.\n\nA node sends this event to confirm that it accepts its assigned nickname-ID. When sending this event the node uses its newly assigned nickname address.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (8,512,'VSCP_TYPE_PROTOCOL_DROP_NICKNAME','**Mandatory.** Must be implemented by all devices.\n\nRequest a node to drop its nickname. The node should drop its nickname and then behave in the same manner as when it was first powered up on the segment. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0  | The current nickname for the node. |\n | 1  | **Optional:** Flags. | \n | 2  | **Optional:** Time the node should wait before it starts a nickname discovery or starts the device. The time is in seconds. | \n\n**Optional byte 1 flags**\n\n | Bit | Description | \n | :---: | ----------- | \n | 0   | Reserved. | \n | 1   | Reserved. | \n | 2   | Reserved. | \n | 3   | Reserved. | \n | 4   | Reserved. | \n | 5   | Reset device. Keep nickname. | \n | 6   | Set persistent storage to default.| \n | 7   | Go idle. Do not start up again. | \n\nSo if byte 1 and 2 is not in event restart device, set default parameters and do a nickname discovery. If byte 1 and 2 are present and bit 5 is set load defaults into device, restart but keep nickname. In all cases byte 2 delays before the node is restarted.\n\n 1.  With just one byte as an argument. The node should do a standard node discovery in the same way as if the status button of the node is pressed. Preserve initiated data,\n 2.  If byte 1 is present bit 5: Just restart. Don''t change any data. not even nickname. bit 6: Restart write default to persistent storage. bit 7: die die my darling. If both bit 5 and 6 is set, do 5 and then 6 == 6 or do 6 and then 5 == 6\n 3.  Byte 1 + byte 2 Wait this amount of seconds after the above operation has been carried out.\n\nThere is a variant of this where the GUID is used instead of the nickname to identify the device, [CLASS1.PROTOCOL, Type=23 (GUID drop nickname-ID / reset device.)](./class1.protocol.md#type23).\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (9,512,'VSCP_TYPE_PROTOCOL_READ_REGISTER','**Mandatory.** Must be implemented by all devices.\n\nRead a register from a node. \n\n*If a node have several pages with user defined registers Extended Register Read is a better choice to choose for reading as the page also is set when reading register using that type. The standard registers can always be read without setting a page though as they are always mapped into the upper 128 bytes.*\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | Node address. | \n | 1 | Register to read. | \n\nA read/write response event is returned on success.\n\nThe following format can be used for nodes on a Level II segment as a midway between a full Level II handling as specified in Class=1024 and Level I.\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0-15 | GUID (MSB -> LSB). | \n | 16 | Reserved. | \n | 17 | Register to read. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (10,512,'VSCP_TYPE_PROTOCOL_RW_RESPONSE','**Mandatory.** Must be implemented by all devices.\n\nResponse for a read/write event. . Note that the data is returned for both a read and a write and can and probably should be checked for validity. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | Register read/written. | \n | 1 | Content of register.   | \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (11,512,'VSCP_TYPE_PROTOCOL_WRITE_REGISTER','**Mandatory.** Must be implemented by all devices.\n\nWrite register content to a node. \n\n*If a node have several pages with user defined registers Extended Register Write is a better choice to choose for writing as the page is also set when writing a register using that type. The standard registers can always be read without setting a page though as they are always mapped into the upper 128 bytes.*\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | Node address.         | \n | 1 | Register to write.    | \n | 2 | Content for register. | \n\nA read/write response event is returned on success.\n\nThe following format can be used for nodes on a Level II segment as a midway between a full Level II handling as specified in Class=1024 and Level I. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0-15 | GUID (MSB -> LSB). | \n | 16 | Reserved. | \n | 17 | Register to write.   | \n | 18 | Content of register. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (12,512,'VSCP_TYPE_PROTOCOL_ENTER_BOOT_LOADER','\n**Mandatory.** Must be implemented by all devices.\n\nSend NACK (Class=0,Type=14 if no boot-loader implemented)\n\nThis is the first event in the boot loader sequence. The node should stop all other activities when in boot loader mode. This also means that the node should not react on other events (commands) then the boot loader related.\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | The nickname for the node. | \n | 1 | Code that select boot loader algorithm to use. | \n | 2 | GUID byte 0 (MSB) | \n | 3 | GUID byte 3 (MSB + 3) | \n | 4 | GUID byte 5 (MSB + 5) | \n | 5 | GUID byte 7 (MSB + 7) | \n | 6 | Content of register 0x92, Page select MSB. | \n | 7 | Content of register 0x93, Page select LSB. | \n\nThe following format can be used for nodes on a Level II segment as a midway between a full Level II handling as specified in Class=1024 and Level I. \n\n | Data byte | Description |\n | :---------: | ----------- | \n | 0-15 | GUID. | \n | 16   | Boot-loader algorithm code. |\n\n\n**Boot-loader Codes**\n\n\n | Code | Algorithm               | \n | :----: | ---------             | \n | 0x00 | VSCP algorithm.         | \n | 0x01 | Microchip PIC algorithm | \n | 0x10 | Atmel AVR algorithm 0   | \n | 0x20 | NXP ARM algorithm 0     | \n | 0x30 | ST ARM algorithm 0      | \n\nAll other codes reserved.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (13,512,'VSCP_TYPE_PROTOCOL_ACK_BOOT_LOADER','**Not mandatory.** Only needed if a VSCP boot-loader algorithm is used.\n\nThis event has no meaning for any node that is not in boot mode and should be disregarded.\n\nThe node confirms that it has entered boot loader mode. This is only sent for the VSCP boot loader algorithm. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | MSB of flash block size.            | \n | 1 | Flash block size.                   | \n | 2 | Flash block size.                   | \n | 3 | LSB of flash block size.            | \n | 4 | MSB of number of block s available. | \n | 5 | Number of block s available.        | \n | 6 | Number of block s available.        | \n | 7 | LSB of number of blocks available.  |\n\n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (14,512,'VSCP_TYPE_PROTOCOL_NACK_BOOT_LOADER','**Mandatory.** Should be implemented by all devices.\n\nThe node was unable to enter boot loader mode. The reason is given by a user specified error code byte. This event has no meaning for any node that is not in boot mode and should be disregarded.\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | Optional user defined error code. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (15,512,'VSCP_TYPE_PROTOCOL_START_BLOCK','**Not mandatory.** Only needed if a VSCP boot-loader algorithm is used.\n\nBegin transfer of data for a block of memory. This event has no meaning for any node that is not in boot mode and should be disregarded.\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0         | MSB of block number. | \n | 1         | Block number. | \n | 2         | Block number. | \n | 3         | LSB of block number. | \n | 4         | (optional) Type of Memory we want to write. See table below | \n | 5         | (optional) Bank/Image to be written Used together with byte 4 to specify either separate Flash or EEPROM/MRAM spaces. If absent or set to zero normally, means first memory from the view of the node creator, e.g. internal Flash, internal EEPROM etc. Useful for projects that have internal as well as external EEPROMs so the external one could be addressed with byte5=1. Also with byte4=0 and byte5=1 an SD-Card as well as a second firmware image inside the flash could be addressed. |\n\n**Type of memory to write (byte 4)**\n\n\n | Memory type | Description | \n | :-----------: | ----------- | \n | 0 or byte absent | PROGRAM Flash (status quo for old nodes) | \n | 1 | DATA (EEPROM, MRAM, FRAM) | \n | 2 | CONFIG (Fuses, CPU configuration) | \n | 3 | RAM | \n | 4-255  | Currently undefined - send a NACK as response | \n\nResponse can be \n\n   [CLASS1.PROTOCOL, Type=50 (Start block data transfer ACK)](./class1.protocol.md#type50) \n   \n   or \n   \n   [CLASS1.PROTOCOL, Type=51 (Start block data transfer NACK)](./class1.protocol.md#type51).\n\n   ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (16,512,'VSCP_TYPE_PROTOCOL_BLOCK_DATA','**Not mandatory.** Only needed if a VSCP boot-loader algorithm is used.\n\nData for a block of memory. This event has no meaning for any node that is not in boot mode and should be disregarded.\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0         | Data.       | \n | 1         | Data.       | \n | 2         | Data.       | \n | 3         | Data.       | \n | 4         | Data.       | \n | 5         | Data.       | \n | 6         | Data.       | \n | 7         | Data.       | \n\nA [CLASS1.PROTOCOL, Type=50 (Block Data ACK)](./class1.protocol.md#type50)\nis sent as a response for each event received.\n\nA [CLASS1.PROTOCOL, Type=51 (Block Data NACK)](./class1.protocol.md#type51)\nis sent on failure.\n\n**Note** If the block to fill is not a multiple of eight the receiving node should handle and discard any excess data. This is true also if more block data frames are received than the block can hold.\n\n**Level II** The size of the block is 1-max data.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (17,512,'VSCP_TYPE_PROTOCOL_BLOCK_DATA_ACK','**Not mandatory.** Only needed if a VSCP boot-loader algorithm is used.\n\nConfirm the reception of a complete data block. This event has no meaning for any node that is not in boot mode and should be disregarded.\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | MSB of 16-bit CRC for block. | \n | 1 | LSB for 16-bit CRC for block. | \n | 2 | MSB of write pointer.         | \n | 3 | write pointer.                | \n | 4 | write pointer.                | \n | 5 | LSB of write pointer.         | \n\nThe write pointer is the actual pointer after the last data has been written i,e the next position on which data will be written. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (18,512,'VSCP_TYPE_PROTOCOL_BLOCK_DATA_NACK','\n**Not mandatory.** Only needed if a VSCP boot-loader algorithm is used.\n\nNACK the reception of data block. This event has no meaning for any node that is not in boot mode and should be disregarded.\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | User defined error code. | \n | 1 | MSB of write pointer.    | \n | 2 | write pointer.           | \n | 3 | write pointer.           | \n | 4 | LSB of write pointer.    | \n\nThe write pointer is the actual pointer after the last data has been written i,e the next position on which data will be written. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (19,512,'VSCP_TYPE_PROTOCOL_PROGRAM_BLOCK_DATA','**Not mandatory.** Only needed if a VSCP boot-loader algorithm is used.\n\nRequest from a node to program a data block that has been uploaded and confirmed. This event has no meaning for any node that is not in boot mode and should be disregarded.\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | MSB of block number. | \n | 1 | Block number.        | \n | 2 | Block number.        | \n | 3 | LSB of block number. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (20,512,'VSCP_TYPE_PROTOCOL_PROGRAM_BLOCK_DATA_ACK','**Not mandatory.** Only needed if a VSCP boot-loader algorithm is used.\n\nA node confirms the successful programming of a block. This event has no meaning for any node that is not in boot mode and should be disregarded.\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | MSB of block number. | \n | 1 | Block number.        | \n | 2 | Block number.        | \n | 3 | LSB of block number. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (21,512,'VSCP_TYPE_PROTOCOL_PROGRAM_BLOCK_DATA_NACK','**Not mandatory.** Only needed if a VSCP boot-loader algorithm is used.\n\nA node failed to program a data block. This event has no meaning for any node that is not in boot mode and should be disregarded.\n\n | Data byte | Description              | \n | :---------: | -----------              | \n | 0         | User defined error code. | \n | 1         | MSB of block number.     | \n | 2         | Block number.            | \n | 3         | Block number.            | \n | 4         | LSB of block number.     | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (22,512,'VSCP_TYPE_PROTOCOL_ACTIVATE_NEW_IMAGE','**Not mandatory.** Only needed if a VSCP boot-loader algorithm is used.\n\nThis command is sent as the last command during the boot-loader sequence. It resets the device and starts it up using the newly loaded code. The 16-bit CRC for the entire program block is sent as an argument. This must be correct for the reset/activation to be performed. NACK boot loader mode will be sent if the CRC is not correct and the node will not leave boot loader mode. \n\n | Data byte | Description | \n | :-------: | ----------- | \n | 0 | 16 bit CRC of full flash data block, MSB | \n | 1 | 16 bit CRC of full flash data block LSB  | \n\nTo leave boot mode just send this event and a dummy CRC. Other methods could have been used to load the code but it can still be activated with this event as long as the CRC is correct. This event has no meaning for any node that is not in boot mode and should be disregarded. \n\nResponse can be \n\n[CLASS1.PROTOCOL, Type=48 (Activate new image ACK)](./class1.protocol.md#type48)\n\nor\n\n[CLASS1.PROTOCOL, Type=49 (Activate new image NACK)](./class1.protocol.md#type49). \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (23,512,'VSCP_TYPE_PROTOCOL_RESET_DEVICE','**Mandatory.** Should be implemented by all devices.\n\n> Added in version 1.4.0\n\nThis is a variant of Class=0, Type=8 but here the full GUID is used instead of the nickname to identify the node that should drop its current nickname and enter the node-name discovery procedure.\n\nAs the GUID is 16 bytes this is a multi-frame event. To ease the storage requirements on the nodes only four GUID bytes are send in each frame. The frames must be sent out within one second interval. \n\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0         | index.      | \n | 1         | GUID byte.  | \n | 2         | GUID byte.  | \n | 3         | GUID byte.  | \n | 4         | GUID byte.  | \n\nwhere index goes from 0-3 and GUID bytes are sent MSB first, like\n\n | Index = Byte 0 | Byte 1 | Byte 2 | Byte 3 | Byte 4 | \n | -------------- | ------       | ------       | ------       | ------       | \n | Index = 0      | GUID byte 15 | GUID byte 14 | GUID byte 13 | GUID byte 12 | \n | Index = 1      | GUID byte 11 | GUID byte 10 | GUID byte 9  | GUID byte 8  | \n | Index = 2      | GUID byte 7  | GUID byte 6  | GUID byte 5  | GUID byte 4  | \n | Index = 3      | GUID byte 3  | GUID byte 2  | GUID byte 1  | GUID byte 0  | \n\nA device can use just one byte to detect this. This byte is initialized to zero and holds four bits that match correct frames. That is, when this register is equal to 0x0f the nickname should be dropped and the nickname discovery sequence started. The node must also have a timer that reset this byte one second after any of the above frames have been received or when the nickname discovery sequence is started.\n\nHi-level software must take this one second interval into account when more then one node should be initialized. This event can be used to assign nickname-IDs to silent nodes. This is nodes that does not start the nickname discovery process on startup and instead just sits and wait until they are assigned an ID with this event. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (24,512,'VSCP_TYPE_PROTOCOL_PAGE_READ','**Mandatory.** Should be implemented by all devices.\n\nThe page read is implemented to make it possible to read/write larger blocks of data. Two register positions are reserved to select a base into this storage. This is a 16-bit number pointing to a 256-byte page. This means that a total of 65535 * 256 bytes are accessible with this method (page 0 is the standard registers).\n\nTo read a block of data from the storage, first write the base registers then issue this event and n events will be sent out from the node containing the data from the specified area. If the count pass the border it of the page ( > 0xFF) the transfer will end there.\n\nNote that the page select registers only selects a virtual page that can be accessed with page read/write and not with the ordinary read/write.\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | Node-ID which registers should be read. | \n | 1 | Index into page. | \n | 2 | Number of bytes to read (1-255). | \n\nResponse is \n\n[CLASS1.PROTOCOL, Type=26 (Read page response)](./class1.protocol.md#type26)\n\n\nThe following format can be used for nodes on a Level II segment as a midway between a full Level II handling as specified in Class=1024 and Level I. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0-15 | GUID. |\n | 16 | Index into page. | \n | 17 | Number of bytes to read (1-255). | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (25,512,'VSCP_TYPE_PROTOCOL_PAGE_WRITE','**Mandatory.** Should be implemented by all devices.\n\nThe write page is implemented to make it possible to write larger blocks of data. One data-space positions is reserved to select a base into this storage. See Page read for a full description.\n\nIt is only possible to write one 6-byte chunk at a time in contrast to reading several. This is because VSCP at Level I is aimed at low end devices with limited resources meaning little room for buffers. \n\n | Data byte | Description  | \n | :---------: | ----------- |\n | 0 | Node-ID         |\n | 1 | Register start. |\n | 2-7 | Data. |\n\nResponse is \n\n[CLASS1.PROTOCOL, Type=26 (Read Page Response)](./class1.protocol.md#type26)\n\nThe following format can be used for nodes on a Level II segment as a midway between a full Level II handling as specified in Class=1024 and Level I. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0-15      | GUID.       | \n | 16        | Base index. | \n | 17-…    | Data.       | \n\nData count can be as many as the buffer of the Level II node accepts. \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (26,512,'VSCP_TYPE_PROTOCOL_RW_PAGE_RESPONSE','**Mandatory.** Should be implemented by all devices.\n\nThis is a response frame for the read/write page command. The Sequence number goes from 0 up to the last sent frame for a read page request. \n\n | Data byte | Description      | \n | :---------: | -----------      | \n | 0         | Sequence number. | \n | 1-7       | Data.            | \n\nThe following format can be used for nodes on a Level II segment as a midway between a full Level II handling as specified in Class=1024 and Level I. \n\n | Data byte | Description      | \n | :---------: | -----------      | \n | 0-15      | GUID.            | \n | 16        | Sequence number. | \n | 17-…    | Data.            | \n\nData count can be as many as the buffer of the Level II node accepts. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (27,512,'VSCP_TYPE_PROTOCOL_HIGH_END_SERVER_PROBE','Should be implemented by all devices that work over 802.15.4/Ethernet/Internet or other high end protocols.This event can be broadcasted on a segment by a node to get information about available servers. \n\nThe [VSCP daemon documentation](https://grodansparadis.gitbooks.io/the-vscp-daemon) have a description on how server/service discovery works. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (28,512,'VSCP_TYPE_PROTOCOL_HIGH_END_SERVER_RESPONSE','Should be implemented by all devices that work on 802.15.4/Ethernet/Internet and have a Level I link. This is because a Level II device can be present on a Level I bus. A typical example is a Bluetooth gateway. A user find the bud/segment by the Bluetooth device and can then discover other parts of the system through it.\n\nA Level II node respond with [CLASS2.PROTOCOL, Type=32 Level II who is response](./class2.protocol.md#type32) to this event. It is also possible to listen for  [CLASS2.PROTOCOL, Type=20 (0x14) High end server capabilities](./class2.protocol.md#type20) to discover Level II nodes.\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | VSCP server low 16-bit capability code MSB | \n | 1 | VSCP server low 16-bit capability code LSB | \n | 2 | Server IP address MSB - or other relevant data as of server capabilities (Network byte order) | \n | 3 | Server IP address - or other relevant data as of server capabilities (Network byte order)     | \n | 4 | Server IP address - or other relevant data as of server capabilities (Network byte order)     | \n | 5 | Server IP address LSB - or other relevant data as of server capabilities (Network byte order) | \n | 6 | Server Port MSB - or other relevant data as of server capabilities | \n | 7 | Server Port LSB - or other relevant data as of server capabilities | \n\nBit codes for capabilities is the same as for the lower 16 bits of [CLASS2.PROTOCOL, Type=20 (0x14) High end server capabilities](class2.protocol.md#type20).\n\n**For programmers:** Bits are defined in [vscp.h](https://github.com/grodansparadis/vscp/blob/master/src/vscp/common/vscp.h).\n\nA node that need a TCP connection to a host. Broadcast HIGH END SERVER PROBE on the segment and waits for HIGH END SERVER RESPONSE from one or more servers to connect to. If a suitable server has responded it can decide to connect to that server. Note that one server can reply with **none, one or many** HIGH END SERVER RESPONSE events.\n\nA server like the VSCP server can span multiple segments and a reply can therefore be received from a remote segment as well. This can be an advantage in some cases and unwanted in some cases. The server configuration should have control on how it is handled. \n\nThe [VSCP daemon documentation](https://grodansparadis.gitbooks.io/the-vscp-daemon) have a description on how server/service discovery works. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (29,512,'VSCP_TYPE_PROTOCOL_INCREMENT_REGISTER','**Mandatory.** Should be implemented by all devices.\n\nIncrement a register content by one with no risk of it changing in between \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | Node-ID | \n | 1 | Register to increment. | \n\nNode should answer with [CLASS1.PROTOCOL, Type=10 (Read/Write register response)](./class1.protocol.md#type10).\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (30,512,'VSCP_TYPE_PROTOCOL_DECREMENT_REGISTER','**Mandatory.** Should be implemented by all devices.\n\nDecrement a register content by one with no risk of it changing in between \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | Node-ID                | \n | 1 | Register to decrement. | \n\nNode should answer with [CLASS1.PROTOCOL, Type=10 (Read/Write register response)](./class1.protocol.md#type10).\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (31,512,'VSCP_TYPE_PROTOCOL_WHO_IS_THERE','**Mandatory.** Must be implemented by all devices.\n\nThis event can be used as a fast way to find out which nodes there is on a segment. All nodes receiving it should respond. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | Node-ID or 0xFF for all nodes. | \n\nResponse for a Level I node is [CLASS1.PROTOCOL, Type=32 (Who is there response)](./class1.prototocol.md#type32).\n    \nA Level II node respond with [CLASS2.PROTOCOL, Type=32 (Level II who is response)](./class2.protocol.md#type32) to this event.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (32,512,'VSCP_TYPE_PROTOCOL_WHO_IS_THERE_RESPONSE','**Mandatory.** Must be implemented by all devices.\n\nResponse from node(s) looks like this \n\n | byte 0 | byte 1 | byte 2 | byte 3 | byte 4 | byte 5 | byte 6 | byte 7 | \n | :------: | ------ | ------ | ------ | ------ | ------ | ------ | ------ | \n | 0      | GUID15 | GUID14 | GUID13 | GUID12 | GUID11 | GUID10 | GUID9  | \n | 1      | GUID8  | GUID7  | GUID6  | GUID5  | GUID4  | GUID3  | GUID2  | \n | 2      | GUID1  | GUID0  | MDF0   | MDF1   | MDF2   | MDF3   | MDF4   | \n | 3      | MDF5   | MDF6   | MDF7   | MD8    | MDF9   | MDF10  | MDF11  | \n | 4      | MDF12  | MDF13  | MDF14  | MDF15  | MDF16  | MDF17  | MDF18  | \n | 5      | MDF19  | MDF20  | MDF21  | MDF22  | MDF23  | MDF24  | MDF25  | \n | 6      | MDF26  | MDF27  | MDF28  | MDF29  | MDF30  | MDF31  | 0      | \n\n\nAll seven frames should be sent also if the MDF URL is shorter than 32 characters,\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (33,512,'VSCP_TYPE_PROTOCOL_GET_MATRIX_INFO','**Mandatory**\n\nRequest a node to report size and offset for its decision matrix. \n\n | Data byte | Description   | \n | :---------: | -----------   | \n | 0 | Node address. | \n\nThe following format can be used for nodes on a Level II segment as a midway between a full Level II handling as specified in Class=1024 and Level I. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0-15 | GUID.       | \n\nA node that does not have a decision matrix should return zero rows.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (34,512,'VSCP_TYPE_PROTOCOL_GET_MATRIX_INFO_RESPONSE','**Mandatory** for nodes with a decision matrix\n\nReport the size for the decision matrix and the offset to its storage. The reported size is the number of decision matrix lines. The offset is the offset in the register address counter from 0x00 (See the register model in this document). If the size returned is zero the node does not have a decision matrix. A node without a decision matrix can also skip to implement this event but it''s better if it returns a decision matrix size of zero. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0  | Matrix size (number of rows). Zero for a device with no decision matrix. | \n | 1 | Offset in register space. | \n | 2 | Optional page start MSB ( Interpret as zero if not sent ) | \n | 3 | Optional page start LSB ( Interpret as zero if not sent ) | \n | 4 | Optional page end MSB ( Interpret as zero if not sent ) Deprecated. Set to zero. | \n | 5 | Optional page end LSB ( Interpret as zero if not sent ) Deprecated. Set to zero. | \n | 6 | For a Level II node this is the size of a decision matrix row. | \n\nThe decision matrix can as noted be stored in paged registers and if so it must be accessed with the paged read/write. The decision matrix can also be stored indexed. In that case the first byte is the index and the second is the data. If the index is in location 0x7f then an indexed matrix is assumed. \n\n | Register position | Description | \n | :-----------------: | -----------  | \n | 0x77 | Index for row in decision matrix. | \n | 0x78-0x7F | Level I decision matrix row. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (35,512,'VSCP_TYPE_PROTOCOL_GET_EMBEDDED_MDF','**Not mandatory.**\n\nA node that get this event and has an embedded MDF description in flash or similar respond with the description . \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | Node-ID.    | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (36,512,'VSCP_TYPE_PROTOCOL_GET_EMBEDDED_MDF_RESPONSE','**Not mandatory.** \n\nThis is the response from a Get embedded MDF. The response consist of several frames where an index in byte0/1 is incremented for each frame and MDF data is in byte 2-7.\n\nIf an embedded MDF is not available a response on the form\n\n     byte 0 = 0 \n     byte 1 = 0 \n     byte 2 = 0\n\nshould be sent. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | High byte of MDF description index. |\n | 1 | Low byte of MDF description index.  |\n | 2-7 | MDF data. | \n\nNote that if sending the events back to back some devices will not be able to cope with the data stream. It is therefor advisable to have a short delay between each mdf data frame sent out.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (37,512,'VSCP_TYPE_PROTOCOL_EXTENDED_PAGE_READ','**Mandatory.** Must be implemented by all devices.\n\nRead a register from a node with page information.\n\nImplementation must take care so all page register change done by these routines must restore the content of the page registers to there original content when they are done. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | Node address. | \n | 1 | MSB of page where the register is located. | \n | 2 | LSB of page where the register is located. | \n | 3 | Register to read (offset into page). | \n | 4 | Optional: Number of registers to read.     | \n\nIf the number of registers to read is set to zero 256 registers will be read. __Some nodes my have small buffers so this bursts of messages may be a problem.__\n\nAn extended read/write response event is returned on success.\n\nThis means that a register (or a maximum of 256 consecutive registers) located on any page can be read in a single operation.\n\nThe following format can be used for nodes on a Level II segment as a midway between a full Level II handling as specified in Class=1024 and Level I. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0-15 | GUID. | \n | 16 | MSB of page where the register is located. | \n | 17 | LSB of page where the register is located. | \n | 18  | Register to read. | \n | 19   | Optional: bytes to read (1-255). |\n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (38,512,'VSCP_TYPE_PROTOCOL_EXTENDED_PAGE_WRITE','**Mandatory.** Must be implemented by all devices.\n\nWrite register content to a node.\n\nImplementation must take care so all page register change done by these routines must restore the content of the page registers to there original content when they are done. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | Node address. | \n | 1 | MSB of page where the register is located. | \n | 2 | LSB of page where the register is located. | \n | 3 | Register to write. | \n | 4 | Content for register. | \n | 5,6,7 | Optional extra data bytes to write. | \n\nA read/write response event is returned on success.\n\nEvent allows a register (or a maximum of four consecutive registers) located on any page can be written in a single operation.\n\nThe following format can be used for nodes on a Level II segment as a midway between a full Level II handling as specified in Class=1024 and Level I.\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0-15 | GUID. | \n | 16 | MSB of page where the register is located. | \n | 17 | LSB of page where the register is located. | \n | 18 | Register to write. | \n | 19  | Content of register. byte 20-buffer-size Optional extra data bytes to write. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (39,512,'VSCP_TYPE_PROTOCOL_EXTENDED_PAGE_RESPONSE','**Mandatory.** Must be implemented by all devices.\n\nThis is the replay sent for events CLASS1.PROTOCOL, Type=40,41. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | Index (starts at zero). | \n | 1 | MSB of page where the register is located. | \n | 2 | LSB of page where the register is located. | \n | 3 | Register read/written. | \n | 4 | Content of register. | \n | 5-7 | Content of register if multi register read/write. | \n\nA multi. register read/write can generate up to 256 events of this type. Index will then be increased by one for each event sent. __Some nodes my have small buffers so this bursts of messages may be a problem. Therefore send them with a low priority.__\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (40,512,'VSCP_TYPE_PROTOCOL_GET_EVENT_INTEREST','**Not Mandatory.** Implemented if needed.\n\nIt is possible to ask a node which event(s) it is interested in with this event. If not implemented the node is supposed to be interested in all events.\n\nAll nodes are by default interested in **CLASS1.PROTOCOL**.\n\nThe event is intended for very low bandwidth nodes like low power wireless nodes where it saves a lot of bandwidth if only events that really concerns the node is sent to them. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (41,512,'VSCP_TYPE_PROTOCOL_GET_EVENT_INTEREST_RESPONSE','**Not mandatory.** Implemented if needed.\n\nResponse for event [CLASS1.PROTOCOL, Type=40 (Get event interest)](./class1.protocol.md#type40). The node report all events it is interested in. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | Index | \n | 1 | class bit 9 (see table) | \n | 2 | class 1 | \n | 3 | type 1 | \n | 4 | class 2 | \n | 5 | type 2 | \n | 6 | class 3 | \n | 7 | type 3 | \n\n | Bit | Description | \n | :---: | ----------- | \n | 0 | Bit 9 for class 1 | \n | 1 | Bit 9 for class 2 | \n | 2 | Bit 9 for class 3 | \n | 3 | All Type 1 is recognized (set type to zero). | \n | 4 | All Type 2 is recognized (set type to zero). | \n | 5 | All Type 3 is recognized (set type to zero). | \n | 6 | 0  | \n | 7 | 0  | \n\nA node that is interested in everything just send a [CLASS1.PROTOCOL, Type=41 (Get event interest response)](./class1.protocol.md#type41) with no data.\n\nNodes that want to specify events of interest fill them in. If all types of a class should be recognized set the corresponding bit in byte 1 and the related type to zero.\n\nA maximum of 255 frames (index = 0-254) may be sent. \n\nFill unused pairs with zero.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (48,512,'VSCP_TYPE_PROTOCOL_ACTIVATE_NEW_IMAGE_ACK','**Not mandatory.** Only needed if a VSCP boot-loader algorithm is used.\n\nPart of the VSCP boot-loader functionality. This is the positive response after a node received a [CLASS1.PROTOCOL, Type=22 (Activate new image)](./class1.protocol.md#type22). It is sent by the node before the new firmware is booted into.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (49,512,'VSCP_TYPE_PROTOCOL_ACTIVATE_NEW_IMAGE_NACK','**Not mandatory.** Only needed if a VSCP boot-loader algorithm is used.\n\nPart of the VSCP boot-loader functionality. This is the negative response after a node received a [CLASS1.PROTOCOL, Type=22 (Activate new image)](./class1.protocol.md#type22). It is sent by the node to inform it that it will (or can not) switch to the new firmware image. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (50,512,'VSCP_TYPE_PROTOCOL_START_BLOCK_ACK','**Not mandatory** Only needed if a VSCP boot loader algorithm is used.\n\nPart of the VSCP boot-loader functionality. This is the positive response after a node received a [CLASS1.PROTOCOL, Type=16 (Block data)](./class1.protocol.md#type16) event. It is sent by the node as a validation that it can handle the block data transfer. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (51,512,'VSCP_TYPE_PROTOCOL_START_BLOCK_NACK','**Not mandatory.** Only needed if a VSCP boot-loader algorithm is used.\n\nPart of the VSCP boot-loader functionality. This is the negative response after a node received a [CLASS1.PROTOCOL, Type=16 (Block data)](./class1.protocol.md#type16) event. It is sent by the node as an indication that it can NOT handle the block data transfer. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,513,'VSCP_TYPE_ALARM_GENERAL','General Event. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (1,513,'VSCP_TYPE_ALARM_WARNING','Indicates a warning condition. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | **0**=off. **1**=on. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones. | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (2,513,'VSCP_TYPE_ALARM_ALARM','Indicates an alarm condition.\n\n | Data byte | Description                                                        |\n | :-------: | ------------------------------------------------------------------ |\n |     0     | Alarm byte from standard register 128/0x80.                             |\n |     1     | Zone for which event applies to (0-255). 255 is all zones.         |\n |     2     | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |\n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (3,513,'VSCP_TYPE_ALARM_SOUND','Alarm sound should be turned on or off. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | **0**=off. **1**=on. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones. | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (4,513,'VSCP_TYPE_ALARM_LIGHT','Alarm light should be turned on or off. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | **0**=off. **1**=on. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones. | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (5,513,'VSCP_TYPE_ALARM_POWER','Power has been lost or is available again. \n\n | Data byte | Description | \n | :---------: | -----------  | \n | 0 | **0**=off. **1**=on. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones. | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones.| \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (6,513,'VSCP_TYPE_ALARM_EMERGENCY_STOP','Emergency stop has been hit/activated. All systems on the zone/sub-zone should go to their inactive/safe state.\n \n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | **0**=off. **1**=on. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (7,513,'VSCP_TYPE_ALARM_EMERGENCY_PAUSE','Emergency pause has been hit/activated. All systems on the zone/sub-zone should go to their inactive/safe state but preserve there settings. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | **0**=off. **1**=on. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones. | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all subzones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (8,513,'VSCP_TYPE_ALARM_EMERGENCY_RESET','Issued after an emergency stop or pause in order for nodes to reset and start operating .\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | **0**=off. **1**=on. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones. | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (9,513,'VSCP_TYPE_ALARM_EMERGENCY_RESUME','Issued after an emergency pause in order for nodes to start operating from where they left of without resetting their registers . \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | **0**=off. **1**=on. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (10,513,'VSCP_TYPE_ALARM_ARM','Issued after an alarm system has been armed. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | **0**=off. **1**=on. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (11,513,'VSCP_TYPE_ALARM_DISARM','Issued after an alarm system has been disarmed. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | **0**=off. **1**=on. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (12,513,'VSCP_TYPE_ALARM_WATCHDOG','Issued when a watchdog has been triggered. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | index. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255.\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,514,'VSCP_TYPE_SECURITY_GENERAL','General Event.');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (1,514,'VSCP_TYPE_SECURITY_MOTION','A motion has been detected. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | User defined data. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones. | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (2,514,'VSCP_TYPE_SECURITY_GLASS_BREAK','A glass break event has been detected. \n\n | Data byte | Description | \n | :---------: | -----------  | \n | 0 | User defined data. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones. | \n | 2  | Sub-zone for which event applies to (0-255). 255 is all subzones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (3,514,'VSCP_TYPE_SECURITY_BEAM_BREAK','A beam break event has been detected. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | User defined data. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (4,514,'VSCP_TYPE_SECURITY_SENSOR_TAMPER','A sensor tamper has been detected. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | User defined data. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (5,514,'VSCP_TYPE_SECURITY_SHOCK_SENSOR','A shock sensor event has been detected. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | User defined data. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (6,514,'VSCP_TYPE_SECURITY_SMOKE_SENSOR','A smoke sensor event has been detected. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | User defined data. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (7,514,'VSCP_TYPE_SECURITY_HEAT_SENSOR','A heat sensor event has been detected. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | User defined data. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (8,514,'VSCP_TYPE_SECURITY_PANIC_SWITCH','A panic switch event has been detected. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | User defined data. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (9,514,'VSCP_TYPE_SECURITY_DOOR_OPEN','Indicates a door sensor reports that a door is open. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | User defined data. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones. | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (10,514,'VSCP_TYPE_SECURITY_WINDOW_OPEN','Indicates a window sensor reports that a window is open.\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | User defined data. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (11,514,'VSCP_TYPE_SECURITY_CO_SENSOR','CO sensor has detected CO at non secure level\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | User defined data. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (12,514,'VSCP_TYPE_SECURITY_FROST_DETECTED','A frost sensor condition is detected\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | User defined data. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (13,514,'VSCP_TYPE_SECURITY_FLAME_DETECTED','Flame is detected.\n\n | Data byte | Description | \n | :---------: | -----------  | \n | 0 | User defined data. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (14,514,'VSCP_TYPE_SECURITY_OXYGEN_LOW','Low oxygen level detected.\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | User defined data. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (15,514,'VSCP_TYPE_SECURITY_WEIGHT_DETECTED','Weight-detector triggered.\n\n | Data byte | Description | \n | :---------: | -----------  | \n | 0 | User defined data. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (16,514,'VSCP_TYPE_SECURITY_WATER_DETECTED','Water has been detected.\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | User defined data. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (17,514,'VSCP_TYPE_SECURITY_CONDENSATION_DETECTED','Condensation (humidity) detected.\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | User defined data. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones. | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (18,514,'VSCP_TYPE_SECURITY_SOUND_DETECTED','Noise (sound) has been detected.\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | User defined data. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (19,514,'VSCP_TYPE_SECURITY_HARMFUL_SOUND_LEVEL','Harmful sound levels detected.\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | User defined data. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nIf both or one of zone/sub-zone are omitted they should be interpreted as if they where 255.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (20,514,'VSCP_TYPE_SECURITY_TAMPER','Tamper detected.\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | User defined data. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (21,514,'VSCP_TYPE_SECURITY_AUTHENTICATED','Authenticated. A user or a device has been authenticated.\n\n | Data byte | Description |\n | :---------: | ----------- |\n | 0 | User defined data. |\n | 1 | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (22,514,'VSCP_TYPE_SECURITY_UNAUTHENTICATED','Unauthenticated. A user or a device has failed authentication.\n\n | Data byte | Description |\n | :---------: | ----------- |\n | 0 | User defined data. |\n | 1 | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (23,514,'VSCP_TYPE_SECURITY_AUTHORIZED','Authorized. A user or a device has been authorized.\n\n | Data byte | Description |\n | :---------: | ----------- |\n | 0 | User defined data. |\n | 1 | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (24,514,'VSCP_TYPE_SECURITY_UNAUTHORIZED','Unauthorized. A user or a device has failed authorization.\n\n | Data byte | Description |\n | :---------: | ----------- |\n | 0 | User defined data. |\n | 1 | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (25,514,'VSCP_TYPE_SECURITY_ID_CHECK','ID Check. A user or a device has gone through an identification test and is either allowed or not allowed access according to bits in byte 0.\n\n | Data byte | Description |\n | :---------: | ----------- |\n | 0 | ID check bits. |\n | 1 | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |\n\n **ID Check bits**\n \n | Bit | Description |\n | :---------: | ----------- |\n | 0 | Authenticated if set to one. |\n | 1 | Authorized if set to one. |\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (26,514,'VSCP_TYPE_SECURITY_PIN_OK','Valid pin. A valid pin has been entered by a device or user.\n\n | Data byte | Description |\n | :---------: | ----------- |\n | 0 | User defined data. |\n | 1 | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (27,514,'VSCP_TYPE_SECURITY_PIN_FAIL','Invalid pin. An invalid pin has been entered by a device or user.\n\n | Data byte | Description |\n | :---------: | ----------- |\n | 0 | User defined data. |\n | 1 | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (28,514,'VSCP_TYPE_SECURITY_PIN_WARNING','Pin warning. An invalid pin has been entered by a device or user and a warning has been given. This warning is typically a warning that the pin will be unusable if further failures are detected.\n\n | Data byte | Description |\n | :---------: | ----------- |\n | 0 | User defined data. |\n | 1 | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (29,514,'VSCP_TYPE_SECURITY_PIN_ERROR','Pin error. An invalid pin has been entered by a device or user and it has failed so many times that the pin is now locked and unusable.\n\n | Data byte | Description |\n | :---------: | ----------- |\n | 0 | User defined data. |\n | 1 | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (30,514,'VSCP_TYPE_SECURITY_PASSWORD_OK','Valid password. A valid password has been entered by a device or user.\n\n | Data byte | Description |\n | :---------: | ----------- |\n | 0 | User defined data. |\n | 1 | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (31,514,'VSCP_TYPE_SECURITY_PASSWORD_FAIL','Invalid password. An invalid password has been entered by a device or user.\n\n | Data byte | Description |\n | :---------: | ----------- |\n | 0 | User defined data. |\n | 1 | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (32,514,'VSCP_TYPE_SECURITY_PASSWORD_WARNING','Password warning. An invalid password has been entered by a device or user and a warning has been given. This warning is typically a warning that the password will be unusable if further failures are detected.\n\n | Data byte | Description |\n | :---------: | ----------- |\n | 0 | User defined data. |\n | 1 | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (33,514,'VSCP_TYPE_SECURITY_PASSWORD_ERROR','Password error. An invalid password has been entered by a device or user and it has failed so many times that the password is now locked and unusable.\n\n | Data byte | Description |\n | :---------: | ----------- |\n | 0 | User defined data. |\n | 1 | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,522,'VSCP_TYPE_MEASUREMENT_GENERAL','This is a general (custom) measurement event that can be used if no other event is suitable. \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (1,522,'VSCP_TYPE_MEASUREMENT_COUNT','This is a discrete value typical for a count. There is no unit for this measurement just a discrete value. \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (2,522,'VSCP_TYPE_MEASUREMENT_LENGTH','**Default unit:** Meter. \n\nThis is a measurement of a length or a distance.\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (3,522,'VSCP_TYPE_MEASUREMENT_MASS','**Default unit:** Kilogram.\n\nThis is a measurement of a mass. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (4,522,'VSCP_TYPE_MEASUREMENT_TIME','A time measurement.\n\n**Default unit:** Seconds.  \n**Opt. unit:** (1) Milliseconds. Absolute: (2) y-y-m-d-h-m-s (binary). String: (3) "HHMMSS". \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (5,522,'VSCP_TYPE_MEASUREMENT_ELECTRIC_CURRENT','**Default unit:** Ampere.\n\nThis is a measurement of an electric current. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (6,522,'VSCP_TYPE_MEASUREMENT_TEMPERATURE','**Default unit:** Kelvin.  \n**Opt. unit:** Degree Celsius (1), Fahrenheit (2)\n\nThis is a measurement of a temperature. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (7,522,'VSCP_TYPE_MEASUREMENT_AMOUNT_OF_SUBSTANCE','**Default unit:** Mole.\n\nThis is a measurement of an amount of a substance. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (8,522,'VSCP_TYPE_MEASUREMENT_INTENSITY_OF_LIGHT','**Default unit:** Candela.\n\nThis is a measurement of luminous intensity. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (9,522,'VSCP_TYPE_MEASUREMENT_FREQUENCY','\n**Default unit:** Hertz.\n\nThis is a measurement of regular events during a second. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (10,522,'VSCP_TYPE_MEASUREMENT_RADIOACTIVITY','**Default unit:** becquerel.\n**Optional unit:** curie (1)\n\nThis is a measurement of rates of things, which happen randomly, or are unpredictable. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (11,522,'VSCP_TYPE_MEASUREMENT_FORCE','**Default unit:** newton.\n\nThis is a measurement of force. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (12,522,'VSCP_TYPE_MEASUREMENT_PRESSURE','**Default unit:** pascal.  \n**Opt. unit:** bar (1), psi (2)\n\nThis is a measurement of pressure. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (13,522,'VSCP_TYPE_MEASUREMENT_ENERGY','**Default unit:** Joule.  \n**Optional unit:** KWh (1)\n\nThis is a measurement of energy. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (14,522,'VSCP_TYPE_MEASUREMENT_POWER','**Default unit:** watt.  \n**Optional unit:** Horse power (1).\n\nThis is a measurement of power. \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (15,522,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_CHARGE','**Default unit:** coulomb.\n\nThis is a measurement electrical charge. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (16,522,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_POTENTIAL','**Default unit:** volt.\n\nThis is a measurement of electrical potential. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (17,522,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_CAPACITANCE','**Default unit:** farad (F).\n\nThis is a measurement of electric capacitance.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (18,522,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_RESISTANCE','**Default unit:** ohm (Ω).\n\nThis is a measurement of resistance. \n\n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (19,522,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_CONDUCTANCE','**Default unit:** siemens.\n\nThis is a measurement of electrical conductance. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (20,522,'VSCP_TYPE_MEASUREMENT_MAGNETIC_FIELD_STRENGTH','**Default unit:** amperes per meter (H).  \n**Optional units:** teslas (B) (1)\n\nThis is a measurement of magnetic field strength. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (21,522,'VSCP_TYPE_MEASUREMENT_MAGNETIC_FLUX','**Default unit:** weber (Wb).\n\nThis is a measurement of magnetic flux. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (22,522,'VSCP_TYPE_MEASUREMENT_MAGNETIC_FLUX_DENSITY','**Default unit:** tesla (B).\n\n**Optional unit:** Gauss (1)\n\nThis is a measurement of flux density or field strength for magnetic fields (also called the magnetic induction). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (23,522,'VSCP_TYPE_MEASUREMENT_INDUCTANCE','**Default unit:** henry (H).\n\nThis is a measurement of inductance. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (24,522,'VSCP_TYPE_MEASUREMENT_FLUX_OF_LIGHT','**Default unit:** Lumen (lm= cd * sr)\n\nThis is a measurement of luminous Flux. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (25,522,'VSCP_TYPE_MEASUREMENT_ILLUMINANCE','**Default unit:** lux (lx) ( lx = lm / m² )\n\nThis is used to express both Illuminance (incidence of light) and Luminous Emittance (emission of light). \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (26,522,'VSCP_TYPE_MEASUREMENT_RADIATION_DOSE_ABSORBED','**Default unit:** gray (Gy).   \n\n\nThis is a measurement of a radiation dose (Absorbed dose of ionizing radiation). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (27,522,'VSCP_TYPE_MEASUREMENT_CATALYTIC_ACITIVITY','**Default unit:** katal (kat).\n\nThis is a measurement of catalytic activity used in biochemistry. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (28,522,'VSCP_TYPE_MEASUREMENT_VOLUME','**Default unit:** cubic meter (m³)   \n**Opt. unit:** Liter (dm³) (1), decilitre (100 cm³) (2), centilitre (10 cm³) (3), millilitre (cm³) (4) where unit 4 is only available for Level II measurement events where units can hold this value.\n\nThis is a measurement of volume. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (29,522,'VSCP_TYPE_MEASUREMENT_SOUND_INTENSITY','**Default unit:** W/m2, watt per square meter. \n\nThis is a measurement of sound intensity (acoustic intensity). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (30,522,'VSCP_TYPE_MEASUREMENT_ANGLE','* **Default unit:** radian (rad) (Plane angles).   \n* **Opt Unit:** degree (1).\n* **Opt Unit:** arcminute (2).\n* **Opt Unit:** arcseconds (3).\n\nThis is a measurement of an angle. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (31,522,'VSCP_TYPE_MEASUREMENT_POSITION','**Default unit:** Longitude.  \n**Opt. unit:** Latitude.\n\nThis is a (decimal) measurement of a position as of WGS 84. Normally given as a floating point value. See [./class1.gps.md](CLASS1.GPS) for a better candidate to use for position data.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (32,522,'VSCP_TYPE_MEASUREMENT_SPEED','**Default unit:** Meters per second.   \n**Optional unit:** Kilometers per hour (1) Miles per hour (2)\n\nThis is a measurement of a speed. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (33,522,'VSCP_TYPE_MEASUREMENT_ACCELERATION','**Default unit:** Meters per second/second (m/s2).\n\nThis is a measurement of acceleration. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (34,522,'VSCP_TYPE_MEASUREMENT_TENSION','**Default unit:** N/m.\n\nThis is a measurement of tension. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (35,522,'VSCP_TYPE_MEASUREMENT_HUMIDITY','**Default unit:** Relative percentage 0-100%.\n\nThis is a measurement of relative moistness (Humidity). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (36,522,'VSCP_TYPE_MEASUREMENT_FLOW','**Default unit:** Cubic meters/second.   \n**Opt Unit:** Liters/Second.\n\nThis is a measurement of flow. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (37,522,'VSCP_TYPE_MEASUREMENT_THERMAL_RESISTANCE','**Default unit:** Thermal ohm K/W.\n\nThis is a measurement of thermal resistance. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (38,522,'VSCP_TYPE_MEASUREMENT_REFRACTIVE_POWER','**Default unit:** dioptre (dpt) m-1.\n\nThis is a measurement of refractive (optical) power. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (39,522,'VSCP_TYPE_MEASUREMENT_DYNAMIC_VISCOSITY','**Default unit:**  pascal second\n**optional units** poiseuille (Pl) = 1, poise (P) = 2\n\nThis is a measurement of dynamic viscosity. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (40,522,'VSCP_TYPE_MEASUREMENT_SOUND_IMPEDANCE','**Default unit:** rayl (Pa·s/m)\n\nThis is a measurement of sound impedance. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (41,522,'VSCP_TYPE_MEASUREMENT_SOUND_RESISTANCE','**Default unit:** Acoustic ohm Pa · s/ m³.\n\nThis is a measurement of sound resistance.\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (42,522,'VSCP_TYPE_MEASUREMENT_ELECTRIC_ELASTANCE','**Default unit:** daraf (f-1).\n\nThis is a measurement of electric elasticity. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (43,522,'VSCP_TYPE_MEASUREMENT_LUMINOUS_ENERGY','**Default unit:** talbot ( tb = lm * s) \n\nThis is a measurement of luminous energy.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (44,522,'VSCP_TYPE_MEASUREMENT_LUMINANCE','**Default unit:** cd / m²) (non SI unit = nit)\n\nThis is a measurement of luminance.\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (45,522,'VSCP_TYPE_MEASUREMENT_CHEMICAL_CONCENTRATION_MOLAR','**Default unit:** mol/m3.\n\nThis is a measurement of chemical mol concentration. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (46,522,'VSCP_TYPE_MEASUREMENT_CHEMICAL_CONCENTRATION_MASS','**Default unit:** kg/m3.\n\nThis is a measurement of chemical mass concentration. ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (47,522,'VSCP_TYPE_MEASUREMENT_DOSE_EQVIVALENT','Reserved\n\n\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (48,522,'VSCP_TYPE_MEASUREMENT_RESERVED48','Reserved \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (49,522,'VSCP_TYPE_MEASUREMENT_DEWPOINT','**Default unit:** Kelvin.  \n**Opt. unit:** Degree Celsius (1), Fahrenheit (2)\n\nThis is a measurement of the Dew Point. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (50,522,'VSCP_TYPE_MEASUREMENT_RELATIVE_LEVEL','**Default unit:** Relative value.\n\nThis is a relative value for a level measurement without a unit. It is just relative to the min/max value for the selected data representation, typically percentage or per mille or similar. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (51,522,'VSCP_TYPE_MEASUREMENT_ALTITUDE','**Default unit:** Meter.  \n**Opt. unit:** Feet(1), inches (2)\n\nAltitude in meters. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (52,522,'VSCP_TYPE_MEASUREMENT_AREA','**Default unit:** square meter (m²)\n\nArea in square meter. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (53,522,'VSCP_TYPE_MEASUREMENT_RADIANT_INTENSITY','**Default unit:** watt per steradian ( W / sr )\n\nRadiated power per room angle. \n\n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (54,522,'VSCP_TYPE_MEASUREMENT_RADIANCE','**Default unit:** watt per steradian per square metre ( W / (sr * m²) )\n\nThis is the radiant flux emitted, reflected, transmitted or received by a surface.\n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (55,522,'VSCP_TYPE_MEASUREMENT_IRRADIANCE','**Default unit:** watt per square metre ( W / m² )\n\nPower emitted from or striking onto a surface or area. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (56,522,'VSCP_TYPE_MEASUREMENT_SPECTRAL_RADIANCE','**Default unit:** watt per steradian per square metre per nm (W·sr-1·m-2·nm-1)    \n**Opt. unit:** watt per steradian per meter3 (W·sr-1·m-3) (1), watt per steradian per square metre per hertz (W·sr-1·m-3) (2)\n\nRadiance of a surface per unit frequency or wavelength.\n\n                        \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (57,522,'VSCP_TYPE_MEASUREMENT_SPECTRAL_IRRADIANCE','**Default unit:** watt per square metre per nm (W·m-2·nm-1)   \n**Opt. unit:** watt per metre3 (W·m-3) (1), watt per square metre per hertz (W·m-2·Hz-1) (2)\n\nIrradiance of a surface per unit frequency or wavelength.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (58,522,'VSCP_TYPE_MEASUREMENT_SOUND_PRESSURE','**Default unit:** pascal (Pa) \n\nThis is a measurement of sound pressure (acoustic pressure). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (59,522,'VSCP_TYPE_MEASUREMENT_SOUND_DENSITY','**Default unit:** pascal (Pa) \n\nSound energy density or sound density is the sound energy per unit volume.\n\n                        ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (60,522,'VSCP_TYPE_MEASUREMENT_SOUND_LEVEL','**Default unit:** decibel (dB) \n\nSound level expressed in decibel. This event is supplied for convenience.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (61,522,'VSCP_TYPE_MEASUREMENT_RADIATION_DOSE_EQ','**Default unit:** sievert (Sv).\n\n**Optional unit** rem (1)\n\nThis is a measurement of a radiation dose (Equivalent dose of ionizing radiation). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (62,522,'VSCP_TYPE_MEASUREMENT_RADIATION_DOSE_EXPOSURE','**Default unit:** coulomb per kilogram (C/kg).   \n**Optional unit:** Röntgen/R (1)\n\nThis is a measurement of a radiation dose (Exposed dose of ionizing radiation). \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,523,'VSCP_TYPE_MEASUREMENTX1_GENERAL','\nThis is a general (custom) event that can be used if no other event is suitable. \n \n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,524,'VSCP_TYPE_MEASUREMENTX2_GENERAL','General Event.\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,525,'VSCP_TYPE_MEASUREMENTX3_GENERAL','General Event.\n\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,526,'VSCP_TYPE_MEASUREMENTX4_GENERAL','General Event.\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,527,'VSCP_TYPE_DATA_GENERAL','General event.\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (1,527,'VSCP_TYPE_DATA_IO','General I/O value. First data byte defines format. \n\n | Data byte | Description                         | \n | :---------: | -----------                       | \n | 0         | Data coding.                        | \n | 1-7       | Data with format defined by byte 0. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (2,527,'VSCP_TYPE_DATA_AD','General A/D value. First data byte defines format. \n\n | Data byte | Description                         | \n | :---------: | -----------                       | \n | 0         | Data coding.                        | \n | 1-7       | Data with format defined by byte 0. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (3,527,'VSCP_TYPE_DATA_DA','General D/A value. First data byte defines format. \n\n | Data byte | Description                         | \n | :---------: | -----------                       | \n | 0         | Data coding.                        | \n | 1-7       | Data with format defined by byte 0. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (4,527,'VSCP_TYPE_DATA_RELATIVE_STRENGTH','Relative strength.  \n\n | Data byte | Description                         | \n | :---------: | -----------                       | \n | 0         | Data coding.                        | \n | 1-7       | Data with format defined by byte 0. | \n\n### Coding of units (Level I)\n\n | Code | Description  | \n | :----: | ----------- | \n | 0    | **Byte count = 2**: Min = 0, Max = 255 <br> **Byte count = 3**: Min = 0, Max = 65535 <br> and so on... | \n | 1    | db (decibel) | \n | 2    | dbV (decibel volts) | \n | 3    | Undefined | \n\nUnits for Level II are the same as for Level I for the first four units.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (5,527,'VSCP_TYPE_DATA_SIGNAL_LEVEL','Signal Level is a relative strength value that (as default) has its maximum at 100 and minimum at 0 interpreted as a percentage. For a digital transmission Signal Level it can be used to give an indication of the analogue signal and [CLASS1.DATA, Type = 6, Signal Quality](./class1.data.md#type6) can be used to give an indication of the quality of the digital part as BER (Bit Error Ratio) for example.\n\n | Data byte | Description                         | \n | :---------: | -----------                         | \n | 0         | Data coding.                        | \n | 1-7       | Data with format defined by byte 0. | \n\n### Coding of units (Level I)\n | Code | Description                                                                                        | \n | :----: | -----------                                                                                        | \n | 0    | (0-100) percentage.                                                                               | \n | 1    | **Byte count = 2**: Min = 0, Max = 255<br>**Byte count = 3**: Min = 0, Max = 65535<br>  and so on... | \n\n\nUnits for Level II are the same as for Level I for the first four units.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (6,527,'VSCP_TYPE_DATA_SIGNAL_QUALITY','Signal Quality be used to give an indication of the quality of the digital part as BER (Bit Error Ratio) for example.\n\n | Data byte | Description                         |\n | :---------: | -----------                       |\n | 0         | Data coding.                        |\n | 1-7       | Data with format defined by byte 0. |\n\n### Coding of units (Level I)\n\n | Code | Description                                                                                        |\n | :----: | -----------                                                                                        |\n | 0    | 0-100, Percent                                                                                     |\n | 1    | **Byte count = 2**: Min = 0, Max = 255  **Byte count = 3**: Min = 0, Max = 65535  and so on... |\n | 2    | dBm  |\n | 3    | To be defined |\n\nUnits for Level II are the same as for Level I for the first four units.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,532,'VSCP_TYPE_INFORMATION_GENERAL','General Event.');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (1,532,'VSCP_TYPE_INFORMATION_BUTTON','A button has been pressed/released. \n\n | Data byte | Description                                                                                                                                                        | \n | :---------: | -----------                                                                                                                                                        | \n | 0         | Bits 0,1,2 If 0 the button has been released. If 1 the button is pressed. If equal to 2 this is a key value (press followed by release). Bits 3-7 is repeats 0-32. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones                                                                                                          | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones                                                                                                  | \n | 3         | MSB of code for button.                                                                                                                                            | \n | 4         | LSB of code for button.                                                                                                                                            | \n | 5         | MSB of optional code-page.                                                                                                                                         | \n | 6         | LSB of optional code-page.                                                                                                                                         | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (2,532,'VSCP_TYPE_INFORMATION_MOUSE','A mouse movement has occurred. \n\n | Data byte | Description                                                                       | \n | :---------: | -----------                                                                       | \n | 0         | If zero absolute coordinates follow. If equal to one relative coordinates follow. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones                         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones                 | \n | 3         | MSB of normalized X-coordinate.                                                   | \n | 4         | LSB of normalized X-coordinate.                                                   | \n | 5         | MSB of normalized Y-coordinate.                                                   | \n | 6         | LSB of normalized Y-coordinate.                                                   | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (3,532,'VSCP_TYPE_INFORMATION_ON','A node indicates that a condition is in its on state. Heater on, lights on are two examples. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | index. Often used as an index for channels within a module.        | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (4,532,'VSCP_TYPE_INFORMATION_OFF','A node indicates that a condition is in its off state. Heater off, lights off are two examples. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index.                                                             | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (5,532,'VSCP_TYPE_INFORMATION_ALIVE','A node tells the world that it is alive. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | User specified.                                                    | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (6,532,'VSCP_TYPE_INFORMATION_TERMINATING','A node tells the world that it is terminating. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | User specified.                                                    | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nByte2 Sub-zone for which event applies to (0-255). 255 is all sub-zones.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (7,532,'VSCP_TYPE_INFORMATION_OPENED','A node indicates that an open has occurred. This can be a door/window open, a modem line open etc. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | User specified.                                                    | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (8,532,'VSCP_TYPE_INFORMATION_CLOSED','A node indicates that a close has occurred. This can be a door/window close, a modem line closure etc. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | User specified.                                                    | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (9,532,'VSCP_TYPE_INFORMATION_NODE_HEARTBEAT','Heartbeats can be used to indicate that a unit is alive or to send periodic data. This can be sent out at predefined intervals to indicate that the node is alive, however, it does not necessarily mean the node is functioning as it should. It simply states that the node is connected to the network. To check if a node is functioning, other properties such as a measurement event or registry should be used. This event should be sent as a response to a “Segment Status Heartbeat” (CLASS1.PROTOCOL, Type=1) in order to provide a method of finding out what is connected to the network. The data bytes from byte 3 and forward can be used to send a descriptive/user friendly name if desired.\n\n**Mandatory.** All nodes should send this event at least once each minute. A Level II node should normally not send this event but instead send [Level II node heartbeat](./class2.information.md#type2). Recommended interval is 30-60 seconds but in a node that need to sleep longer to save resources a longer interval can be used.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | User specified.                                                    | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (10,532,'VSCP_TYPE_INFORMATION_BELOW_LIMIT','This indicates that the node has a condition that is below a configurable limit. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (11,532,'VSCP_TYPE_INFORMATION_ABOVE_LIMIT','This indicates that the node has a condition that is above a configurable limit. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (12,532,'VSCP_TYPE_INFORMATION_PULSE','This can be used for slow pulse counts. This can be an S0-pulse interface or something similar. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (13,532,'VSCP_TYPE_INFORMATION_ERROR','A node indicates that an error occurred. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (14,532,'VSCP_TYPE_INFORMATION_RESUMED','A node indicates that it has resumed operation. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (15,532,'VSCP_TYPE_INFORMATION_PAUSED','A node indicates that it has paused. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (16,532,'VSCP_TYPE_INFORMATION_SLEEP','A node indicates that it entered a sleeping state. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (17,532,'VSCP_TYPE_INFORMATION_GOOD_MORNING','The system should enter its morning state. This can be a user pressing a button to set his/her house to its morning state. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (18,532,'VSCP_TYPE_INFORMATION_GOOD_DAY','The system should enter its day state. This can be a user pressing a button to set his/her house to its day state. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (19,532,'VSCP_TYPE_INFORMATION_GOOD_AFTERNOON','The system should enter its afternoon state. This can be a user pressing a button to set his/her house to its afternoon state. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (20,532,'VSCP_TYPE_INFORMATION_GOOD_EVENING','The system should enter its evening state. This can be a user pressing a button to set his/her house to its evening state. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (21,532,'VSCP_TYPE_INFORMATION_GOOD_NIGHT','The system should enter its night state. This can be a user pressing a button to set his/her house to its night state. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (22,532,'VSCP_TYPE_INFORMATION_SEE_YOU_SOON','The system should be on a temporary alert. This can be a user locking the door to go out to the waste bin or similar situation. An alarm system should not be activated in this situation. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (23,532,'VSCP_TYPE_INFORMATION_GOODBYE','The system should be on a goodbye alert. This can be a user locking the door to go out for a days work or similar situation. All alarm systems should be activated in this situation. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (24,532,'VSCP_TYPE_INFORMATION_STOP','A node indicates that a stop event occurred. This can for example be a motor stopping. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (25,532,'VSCP_TYPE_INFORMATION_START','A node indicates that a start event occurred. This can be a motor starting. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (26,532,'VSCP_TYPE_INFORMATION_RESET_COMPLETED','A node indicates that a reset occurred. This can be a node doing a warm start. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (27,532,'VSCP_TYPE_INFORMATION_INTERRUPTED','A node indicates that a reset occurred. This can also be a node doing a warm start. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (28,532,'VSCP_TYPE_INFORMATION_PREPARING_TO_SLEEP','A node indicates that a sleep event occurred. This can be a node going to its inactive state. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (29,532,'VSCP_TYPE_INFORMATION_WOKEN_UP','A node indicates that a wakeup event occurred. This can be a node going to it awake state. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (30,532,'VSCP_TYPE_INFORMATION_DUSK','A node indicates that the system should enter its dusk state. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (31,532,'VSCP_TYPE_INFORMATION_DAWN','A node indicates that the system should enter its dawn state. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (32,532,'VSCP_TYPE_INFORMATION_ACTIVE','A node indicates that its active. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (33,532,'VSCP_TYPE_INFORMATION_INACTIVE','A node indicates that its inactive. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (34,532,'VSCP_TYPE_INFORMATION_BUSY','A node indicates that its busy. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (35,532,'VSCP_TYPE_INFORMATION_IDLE','A node indicates that its idle. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (36,532,'VSCP_TYPE_INFORMATION_STREAM_DATA','A steam of information from a node can be reported with this event. This can be a serial RS-232 channel or some other sequential stream. \n\n | Data byte | Description                                                                                                                                                                                                                                  | \n | :---------: | -----------                                                                                                                                                                                                                                  | \n | 0         | Sequence number which is increased by one for every new event with stream data. The sequence number is increased for every frame sent going from 0 - 255 and back to 0 and so on if needed. A new stream starts with a sequence number of 0. | \n | 1-7       | Stream data.                                                                                                                                                                                                                                 | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (37,532,'VSCP_TYPE_INFORMATION_TOKEN_ACTIVITY','This event is used for cards, RFID''s, iButtons, GSM phones and other identification devices. The event is generated when the token device is attached/detached to/from the system. Level II has a counterpart to this event that can take more data. CLASS2.INFORMATION Type=1\n\nDepending on the Token device type a number of this event are sent on the segment with frame index increase for each event. The total expected number can be deduced from the type. \n\n | Data byte | Description                                                                                      | \n | :---------: | -----------                                                                                      | \n | 0         | Bit 0,1 - Event code. Bit 2-7 - Token device type code.                                          | \n | 1         | Zone.                                                                                            | \n | 2         | Sub-zone.                                                                                        | \n | 3         | Frame index (Increase by one for every frame sent out for one token activity. Start with zero ). | \n | 4-7       | Token data.                                                                                      | \n\n#####  Event codes\n\n | Code | Description           | \n | ---- | -----------           | \n | 0    | Touched and released. | \n | 1    | Touched.              | \n | 2    | Released.             | \n | 3    | Reserved.             | \n\n##### Token device type codes\n\n | Code  | Description                                                                                                                     | Size    \n | ----  | -----------                                                                                                                     | ----    \n | 0     | Unknown Token.                                                                                                                  | 128-bits | \n | 1     | iButton 64-bit token.                                                                                                           | 64-bits  | \n | 2     | RFID Token.                                                                                                                     | 64-bits  | \n | 3     | RFID Token.                                                                                                                     | 128-bits | \n | 4     | RFID Token.                                                                                                                     | 256-bits | \n | 5-8   | Reserved.                                                                                                                       |          | \n | 9     | ID/Credit card.                                                                                                                 | 128-bits | \n | 10-15 | Reserved.                                                                                                                       |          | \n | 16    | Biometric device.                                                                                                               | 256-bits | \n | 17    | Biometric device.                                                                                                               | 64-bits  | \n | 18    | Bluetooth device.                                                                                                               | 48-bits  | \n | 19    | GSM IMEI code (International Mobile Equipment Identity) AA-BBBBBB-CCCCCC-D packed in 64 bits. https://en.wikipedia.org/wiki/IMEI | 64-bits  | \n | 20    | GSM IMSI code (International Mobile Subscriber Identity) packed in 64 bits. https://en.wikipedia.org/wiki/IMSI                   | 64-bits  | \n | 21    | RFID Token.                                                                                                                     | 40-bits  | \n | 22    | RFID Token.                                                                                                                     | 32-bits  | \n | 23    | RFID Token.                                                                                                                     | 24-bits  | \n | 24    | RFID Token.                                                                                                                     | 16-bits  | \n | 25    | RFID Token.                                                                                                                     | 8-bits   | \n | 26-63 | Reserved.                         |          | ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (38,532,'VSCP_TYPE_INFORMATION_STREAM_DATA_WITH_ZONE','A steam of information from a node can be reported with this event. This can be a serial RS-232 channel or some other sequential stream. \n\n | Data byte | Description                                                                                                                                                                                                                                  | \n | :---------: | -----------                                                                                                                                                                                                                                  | \n | 0         | Zone.                                                                                                                                                                                                                                        | \n | 1         | Sub-zone.                                                                                                                                                                                                                                    | \n | 2         | Sequence number which is increased by one for every new event with stream data. The sequence number is increased for every frame sent going from 0 - 255 and back to 0 and so on if needed. A new stream starts with a sequence number of 0. | \n | 3-7       | Stream data.                                                                                                                                                                                                                                | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (39,532,'VSCP_TYPE_INFORMATION_CONFIRM','This event can be used as a general confirm event for zoned and stream data. \n\n | Data byte | Description             | \n | :---------: | -----------           | \n | 0         | Zone.                   | \n | 1         | Sub-zone.               | \n | 2         | Sequence number byte    |\n | 3         | Class MSB.              | \n | 4         | Class LSB.              | \n | 5         | Type MSB.               | \n | 6         | Type LSB.               | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (40,532,'VSCP_TYPE_INFORMATION_LEVEL_CHANGED','Response/confirmation from ex. a dimmer control after a dimmer command or some other unit that change a level. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Relative or absolute level.                                        | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (41,532,'VSCP_TYPE_INFORMATION_WARNING',' A node indicates that a warning condition occurred. \n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0         | Reserved level. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones. | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (42,532,'VSCP_TYPE_INFORMATION_STATE','A node indicates that a state change has occurred. Th numerical ID for the current state and the state that is about to become active is supplied. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | User specified.                                                    | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n | 3         | State changed from.                                                | \n | 4         | New State.                                                         | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (43,532,'VSCP_TYPE_INFORMATION_ACTION_TRIGGER','A node indicates that an action has been triggered by this event. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Action ID.                                                         | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (44,532,'VSCP_TYPE_INFORMATION_SUNRISE','A node indicates that sunrise is detected/calculated. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | User specified.                                                    | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (45,532,'VSCP_TYPE_INFORMATION_SUNSET','A node indicates that sunset is detected/calculated. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | User specified.                                                    | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (46,532,'VSCP_TYPE_INFORMATION_START_OF_RECORD','This event is used to mark the start of a multi-frame data transfer. This can typically be a GPS received which sends a train of events from one GPS record. The index byte can be used to distinguish record between each other. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for record.                                                  | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n | 3         | Number of frames to follow or zero for not used.                   | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (47,532,'VSCP_TYPE_INFORMATION_END_OF_RECORD','This event is used to mark the end of a multi-frame data transfer. The index byte can be used to distinguish record between each other. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for record.                                                  | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (48,532,'VSCP_TYPE_INFORMATION_PRESET_ACTIVE','This event is used to tell the system that a pre-set configuration is active. Usually a response from a node after a CLASS1.CONTROL, Type=28 has been received by a node.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | User specified.                                                    | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n | 3         | Code for pre-set that has been set.                                | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (49,532,'VSCP_TYPE_INFORMATION_DETECT','This event is used to tell the system that a detection of some kind has occurred. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index.                                                             | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nThe first byte is used as an index if a module have several channels or detectors. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (50,532,'VSCP_TYPE_INFORMATION_OVERFLOW','This event is used to tell the system that an overflow of some kind has occurred. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index.                                                             | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nThe first byte is used as an index if a module have several channels or detectors.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (51,532,'VSCP_TYPE_INFORMATION_BIG_LEVEL_CHANGED','This is meant to be used as a confirmation event for CLASS1.CONTROL, Type=33 events.\n\n | Data byte | Description                                                                                               | \n | :---------: | -----------                                                                                               | \n | 0         | Index.                                                                                                    | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                                | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                        | \n | 3,4,5,6,7 | Level as signed Integer. The range can be adjusted by the user by sending the needed number of bytes 1-5. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (52,532,'VSCP_TYPE_INFORMATION_SUNRISE_TWILIGHT_START','Civil twilight is the period when the Sun is below the horizon but its center is less than 6 degrees below. The "Civil Twilight Starts" time is the dawn or civil dawn, with the center of the Sun at exactly 6 degrees below the horizon. Equally, the "Civil Twilight Ends" time is dusk or civil dusk, when the Sun is 6 degrees below the horizon in the evening.\n\nDuring civil twilight, the sky is still illuminated, and with clear weather it is brightest in the direction of the Sun. The Moon and the brightest stars and planets may be visible. It is usually bright enough for outdoor activities without additional lighting.\n\nNear the equator, where the Sun sets and rises in an almost vertical direction, the civil twilight period can last only 21 minutes, a very fast nightfall compared to the much longer periods at southern and northern latitudes. In regions north of 60°24'' N or south of 60°24'' S, there will be at least one night when it does not get darker than this.\n\nTechnically, the start and end times are when the true geocentric position of the Sun is 96 degrees from the zenith position.\n\nA node indicates that sunrise twilight time is detected/calculated. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | User specified.                                                    | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (53,532,'VSCP_TYPE_INFORMATION_SUNSET_TWILIGHT_START','A node indicates that sunset twilight time is detected/calculated.\n\nCivil twilight is the period when the Sun is below the horizon but its center is less than 6 degrees below. The "Civil Twilight Starts" time is the dawn or civil dawn, with the center of the Sun at exactly 6 degrees below the horizon. Equally, the "Civil Twilight Ends" time is dusk or civil dusk, when the Sun is 6 degrees below the horizon in the evening.\n\nDuring civil twilight, the sky is still illuminated, and with clear weather it is brightest in the direction of the Sun. The Moon and the brightest stars and planets may be visible. It is usually bright enough for outdoor activities without additional lighting.\n\nNear the equator, where the Sun sets and rises in an almost vertical direction, the civil twilight period can last only 21 minutes, a very fast nightfall compared to the much longer periods at southern and northern latitudes. In regions north of 60°24'' N or south of 60°24'' S, there will be at least one night when it does not get darker than this.\n\nTechnically, the start and end times are when the true geocentric position of the Sun is 96 degrees from the zenith position.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | User specified.                                                    | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (54,532,'VSCP_TYPE_INFORMATION_NAUTICAL_SUNRISE_TWILIGHT_START','A node indicates that nautical sunrise twilight time is detected/calculated. \n\nNautical twilight is the period when the center of the Sun is between 6 and 12 degrees below the horizon, when bright stars are still visible in clear weather and the horizon is becoming visible. It is too dark to do outdoor activities without additional lighting.\n\nIn the morning, nautical twilight starts at nautical dawn, when the Sun rises above 12 degrees below the horizon; it ends when the Sun''s center reaches 6 degrees below the horizon. In the evening, nautical twilight begins when the Sun sinks below 6 degrees; it ends at nautical dusk, when the Sun is lower than 12 degrees below the horizon.\n\nFor locations north of 54°34'' N or south of 54°34'' S latitude, the Sun will never be lower than 12 degrees below the horizon for a period in the summer.\n\nTechnically, the start and end times are when the true geocentric position of the Sun is 102 degrees from the zenith position.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | User specified.                                                    | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (55,532,'VSCP_TYPE_INFORMATION_NAUTICAL_SUNSET_TWILIGHT_START','A node indicates that nautical sunset twilight time is detected/calculated.\n\nNautical twilight is the period when the center of the Sun is between 6 and 12 degrees below the horizon, when bright stars are still visible in clear weather and the horizon is becoming visible. It is too dark to do outdoor activities without additional lighting.\n\nIn the morning, nautical twilight starts at nautical dawn, when the Sun rises above 12 degrees below the horizon; it ends when the Sun''s center reaches 6 degrees below the horizon. In the evening, nautical twilight begins when the Sun sinks below 6 degrees; it ends at nautical dusk, when the Sun is lower than 12 degrees below the horizon.\n\nFor locations north of 54°34'' N or south of 54°34'' S latitude, the Sun will never be lower than 12 degrees below the horizon for a period in the summer.\n\nTechnically, the start and end times are when the true geocentric position of the Sun is 102 degrees from the zenith position.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | User specified.                                                    | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (56,532,'VSCP_TYPE_INFORMATION_ASTRONOMICAL_SUNRISE_TWILIGHT_START','A node indicates that astronomical sunrise twilight time is detected/calculated. \n\nAstronomical twilight is the period when the center of the Sun is between 12 and 18 degrees below the horizon. It starts at astronomical dawn, early in the morning when the Sun is higher than 18 degrees below the horizon. From this point, it will be difficult to observe certain faint stars, galaxies, and other objects because the Sun starts to illuminate the sky. Astronomical twilight ends at astronomical dusk in the late evening, when those faint objects again can be visible because the Sun is lower than 18 degrees below the horizon. In locations north of 48°24'' N or south of 48°24'', it never gets darker than this near the middle of the summer solstice (June or December).\n\nTechnically, the start and end times are when the true geocentric position of the Sun is 108 degrees from the zenith position, or directly above the observer.\n\nAstronomical twilight is the period when the center of the Sun is between 12 and 18 degrees below the horizon.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | User specified.                                                    | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (57,532,'VSCP_TYPE_INFORMATION_ASTRONOMICAL_SUNSET_TWILIGHT_START','A node indicates that astronomical sunset twilight time is detected/calculated.\n\nAstronomical twilight is the period when the center of the Sun is between 12 and 18 degrees below the horizon. It starts at astronomical dawn, early in the morning when the Sun is higher than 18 degrees below the horizon. From this point, it will be difficult to observe certain faint stars, galaxies, and other objects because the Sun starts to illuminate the sky. Astronomical twilight ends at astronomical dusk in the late evening, when those faint objects again can be visible because the Sun is lower than 18 degrees below the horizon. In locations north of 48°24'' N or south of 48°24'', it never gets darker than this near the middle of the summer solstice (June or December).\n\nTechnically, the start and end times are when the true geocentric position of the Sun is 108 degrees from the zenith position, or directly above the observer.\n\nAstronomical twilight is the period when the center of the Sun is between 12 and 18 degrees below the horizon.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | User specified.                                                    | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (58,532,'VSCP_TYPE_INFORMATION_CALCULATED_NOON','This event is used for reporting of a calculated noon (real noon).\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (59,532,'VSCP_TYPE_INFORMATION_SHUTTER_UP','Shutter is moving up.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (60,532,'VSCP_TYPE_INFORMATION_SHUTTER_DOWN','Shutter is moving down.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (61,532,'VSCP_TYPE_INFORMATION_SHUTTER_LEFT','Shutter is moving left.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (62,532,'VSCP_TYPE_INFORMATION_SHUTTER_RIGHT','Shutter is moving right.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (63,532,'VSCP_TYPE_INFORMATION_SHUTTER_END_TOP','Shutter reached top end.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (64,532,'VSCP_TYPE_INFORMATION_SHUTTER_END_BOTTOM','Shutter reached bottom end.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (65,532,'VSCP_TYPE_INFORMATION_SHUTTER_END_MIDDLE','Shutter reached middle end.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (66,532,'VSCP_TYPE_INFORMATION_SHUTTER_END_PRESET','Shutter reached preset end.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (67,532,'VSCP_TYPE_INFORMATION_SHUTTER_END_LEFT','Shutter reached preset left.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (68,532,'VSCP_TYPE_INFORMATION_SHUTTER_END_RIGHT','Shutter reached preset right.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (69,532,'VSCP_TYPE_INFORMATION_LONG_CLICK','Long click detected.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for device generating long click. Set to zero if not used.   | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (70,532,'VSCP_TYPE_INFORMATION_SINGLE_CLICK','Single click detected.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for device generating single click. Set to zero if not used. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (71,532,'VSCP_TYPE_INFORMATION_DOUBLE_CLICK','Double click detected.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for device generating double click. Set to zero if not used. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (72,532,'VSCP_TYPE_INFORMATION_DATE','A device generated a date event. Time is UTC. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for device generating date. Set to zero if not used.         | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n | 3         | year century                                                       | \n | 4         | year                                                               | \n | 5         | month (1-12)                                                       | \n | 6         | day (1-31)                                                         | \n\nSee also [CLASS1.INFORMATION, Type=77](./class1.information.md#type77) which combines date and time in one event.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (73,532,'VSCP_TYPE_INFORMATION_TIME','A device generated a time event. Time is UTC. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for device generating time. Set to zero if not used.         | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n | 3         | Hour (0-23)                                                        | \n | 4         | minutes (0-59)                                                     | \n | 5         | seconds (0-60)                                                     | \n | 6         | milliseconds MSB (0-999)                                           | \n | 7         | milliseconds LSB (0-999)                                           | \n\nSee also [CLASS1.INFORMATION, Type=77](./class1.information.md#type77) which combines date and time in one event.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (74,532,'VSCP_TYPE_INFORMATION_WEEKDAY','A device generated a weekday event.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for device generating weekday info. Set to zero if not used. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n | 3         | Weekday ( 0 (Monday) - 6 (Sunday))                                 | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (75,532,'VSCP_TYPE_INFORMATION_LOCK','A device got locked.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for device. Set to zero if not used.                         | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (76,532,'VSCP_TYPE_INFORMATION_UNLOCK','A device got unlocked.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for device. Set to zero if not used.                         | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (77,532,'VSCP_TYPE_INFORMATION_DATETIME','A device generated a date/time event. Time is UTC. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for device. Set to zero if not used.                         | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n | 3 - 7     | Date/time in  five byte bit array.                                 | \n\n**Bitfields** \n\n | Year  | Month | Day   | Hour  | Minute | Second | \n | :----:  | :-----: | :---:   | :----:  | :------: | :------: | \n | 26-37 | 22-25 | 17-21 | 12-16 | 6-11   | 0-5    | \n\nBit 39 is bit 7 of data byte 4. Bit 0 is bit 0 of data byte 7.\n\nBit 39 and bit 38 is reserved.\n\n** Valid values**\n\n | Item    | Value range | \n | :----:    | :-----------: | \n | Year    | 0-4095      | \n | Month   | 1-12        | \n | Day     | 1-31        | \n | Hour    | 0-23        | \n | Minute  | 0-59        | \n | Seconds | 0-59        | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (78,532,'VSCP_TYPE_INFORMATION_RISING','A rising (edge) is detected.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for device. Set to zero if not used.                         | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (79,532,'VSCP_TYPE_INFORMATION_FALLING','A falling (edge) is detected.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for device. Set to zero if not used.                         | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (80,532,'VSCP_TYPE_INFORMATION_UPDATED','Something has been updated.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for device. Set to zero if not used.                         | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (81,532,'VSCP_TYPE_INFORMATION_CONNECT','Something has been connected.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for device. Set to zero if not used.                         | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (82,532,'VSCP_TYPE_INFORMATION_DISCONNECT','Something has been disconnected.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for device. Set to zero if not used.                         | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (83,532,'VSCP_TYPE_INFORMATION_RECONNECT','Something has been reconnected.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for device. Set to zero if not used.                         | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (84,532,'VSCP_TYPE_INFORMATION_ENTER','Enter, something has been entered.\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | Index for device. Set to zero if not used. | \n | 1 | Zone for which event applies to (0-255). 255 is all zones. | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (85,532,'VSCP_TYPE_INFORMATION_EXIT','Exit, something has been exited.\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0 | Index for device. Set to zero if not used.| \n | 1 | Zone for which event applies to (0-255). 255 is all zones. | \n | 2 | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,542,'VSCP_TYPE_CONTROL_GENERAL','General Event.');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (1,542,'VSCP_TYPE_CONTROL_MUTE','Mute/Un-mute all sound generating nodes in a zone \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | If equal to zero no mute else mute.                                | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (2,542,'VSCP_TYPE_CONTROL_ALL_LAMPS','Turn on/off lamps on nodes in zone.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | If equal to zero off else on.                                      | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nSee also [CLASS1.CONTROL, Type=40](./class1.control.md#type40) and [CLASS1.CONTROL, Type=42](./class1.control.md#type41) which don''t use byte 0 but instead are separated in two distinct events.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (3,542,'VSCP_TYPE_CONTROL_OPEN','Perform open on all nodes in zone. \n\n | Data byte | Description                                                         | \n | :---------: | -----------                                                         | \n | 0         | Optional byte that have a meaning given by the issuer of the event. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.          | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.  | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (4,542,'VSCP_TYPE_CONTROL_CLOSE','Perform close on all nodes in zone. \n\n | Data byte | Description                                                         | \n | :---------: | -----------                                                         | \n | 0         | Optional byte that have a meaning given by the issuer of the event. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.          | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.  | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (5,542,'VSCP_TYPE_CONTROL_TURNON','Turn On a nodes in a zone/subzone. \n\n | Data byte | Description                                                         | \n | :---------: | -----------                                                         | \n | 0         | Optional byte that have a meaning given by the issuer of the event. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.          | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.  | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (6,542,'VSCP_TYPE_CONTROL_TURNOFF','Turn Off a nodes in a zone/subzone. \n\n | Data byte | Description                                                         | \n | :---------: | -----------                                                         | \n | 0         | Optional byte that have a meaning given by the issuer of the event. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.          | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.  | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (7,542,'VSCP_TYPE_CONTROL_START','Start all nodes in a zone.\n\n | Data byte | Description                                                         | \n | :---------: | -----------                                                         | \n | 0         | Optional byte that have a meaning given by the issuer of the event. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.          | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.  | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (8,542,'VSCP_TYPE_CONTROL_STOP','Stop all nodes in zone. \n\n | Data byte | Description                                                         | \n | :---------: | -----------                                                         | \n | 0         | Optional byte that have a meaning given by the issuer of the event. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.          | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.  | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (9,542,'VSCP_TYPE_CONTROL_RESET','Perform Reset on all nodes in zone. \n\n | Data byte | Description                                                         | \n | :---------: | -----------                                                         | \n | 0         | Optional byte that have a meaning given by the issuer of the event. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.          | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.  | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (10,542,'VSCP_TYPE_CONTROL_INTERRUPT','Perform Interrupt on all nodes in zone. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Interrupt level. (0 – 255 , zero is lowest interrupt level. ).   | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (11,542,'VSCP_TYPE_CONTROL_SLEEP','Perform Sleep on all nodes in zone. \n\n | Data byte | Description                                                         | \n | :---------: | -----------                                                         | \n | 0         | Optional byte that have a meaning given by the issuer of the event. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.          | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.  | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (12,542,'VSCP_TYPE_CONTROL_WAKEUP','Wakeup all nodes in zone. \n\n | Data byte | Description                                                         | \n | :---------: | -----------                                                         | \n | 0         | Optional byte that have a meaning given by the issuer of the event. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.          | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.  | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (13,542,'VSCP_TYPE_CONTROL_RESUME','Resume all nodes in zone. \n\n | Data byte | Description                                                         | \n | :---------: | -----------                                                         | \n | 0         | Optional byte that have a meaning given by the issuer of the event. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.          | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.  | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (14,542,'VSCP_TYPE_CONTROL_PAUSE','Pause all nodes in zone. \n\n | Data byte | Description                                                         | \n | :---------: | -----------                                                         | \n | 0         | Optional byte that have a meaning given by the issuer of the event. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.          | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.  | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (15,542,'VSCP_TYPE_CONTROL_ACTIVATE','Activate all nodes in zone. \n\n | Data byte | Description                                                         | \n | :---------: | -----------                                                         | \n | 0         | Optional byte that have a meaning given by the issuer of the event. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.          | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.  | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (16,542,'VSCP_TYPE_CONTROL_DEACTIVATE','Deactivate all nodes in zone. \n\n | Data byte | Description                                                         | \n | :---------: | -----------                                                         | \n | 0         | Optional byte that have a meaning given by the issuer of the event. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.          | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.  | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (17,542,'VSCP_TYPE_CONTROL_RESERVED17','Reserved. ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (18,542,'VSCP_TYPE_CONTROL_RESERVED18','Reserved. ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (19,542,'VSCP_TYPE_CONTROL_RESERVED19','Reserved.');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (20,542,'VSCP_TYPE_CONTROL_DIM_LAMPS','Dim all dimmer devices on a segment to a specified dim value. \n\n | Data byte | Description                                                                             | \n | :---------: | -----------                                                                             | \n | 0         | Value (0 – 100) . 0 = off, 100 = full on. 254 dim down one step. 255 dim up one step. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                              | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                      | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (21,542,'VSCP_TYPE_CONTROL_CHANGE_CHANNEL','This is typical for changing TV channels or for changing AV amp input source etc. \n\n | Data byte | Description                                                                                                                                                                                                                                                                                                                                               | \n | :---------: | -----------                                                                                                                                                                                                                                                                                                                                               | \n | 0         | A value between 0 and 127 indicates the channel number. A value between 128 to 157 is change down by the specified number of channels. A value between 160 to 191 is change up by the specified number of channels. A value of 255 means that this is an extended change channel event and that the channel number is sent in byte 3 and after if needed. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                                                                                                                                                                                                                                                                                | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                                                                                                                                                                                                                                                                        | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (22,542,'VSCP_TYPE_CONTROL_CHANGE_LEVEL','Change an absolute level. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Absolute level.                                                    | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (23,542,'VSCP_TYPE_CONTROL_RELATIVE_CHANGE_LEVEL','\n Relative Change Level request\n \n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Relative level.                                                    | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (24,542,'VSCP_TYPE_CONTROL_MEASUREMENT_REQUEST','Measurement Request\n\n| Data byte | Description                                                                                                                                                           | \n | :---------: | -----------                                                                                                                                                           | \n | 0         | Zero indicates all measurements supported by node should be sent (as separate events). Non-zero indicates a node specific index specifying which measurement to send. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                                                                                            | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                                                                                    | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (25,542,'VSCP_TYPE_CONTROL_STREAM_DATA','Request to stream data\n\n | Data byte | Description                                                               | \n | :---------: | -----------                                                               | \n | 0         | Sequence number which is increase by one for each stream data event sent. | \n | 1-7       | Stream data.                                                              | \n\nUse this event for streamed data out from a node. The source is then given by the nickname. If a specific received is needed use Zoned Stream. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (26,542,'VSCP_TYPE_CONTROL_SYNC','Synchronize events on a segment. \n\n | Data byte | Description                                                                                                                                  | \n | :---------: | -----------                                                                                                                                  | \n | 0         | Sensor index for a sensor within a module (see [data coding](./data_coding.md). 255 is all sensors. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                                                                   | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                                                           | \n\nThe sensor index can be used to index units within a module also or used as some other indexing schema. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (27,542,'VSCP_TYPE_CONTROL_ZONED_STREAM_DATA','Request streamed data from nodes identified by zone/subzone.\n\n | Data byte | Description                                                               | \n | :---------: | -----------                                                               | \n | 0         | Sequence number which is increase by one for each stream data event sent. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.        | \n | 3-7       | Stream data.                                                              | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (28,542,'VSCP_TYPE_CONTROL_SET_PRESET','Some nodes may have pre-set configurations to choose from. With this event a pre-set can be set for a zone/sub-zone.\n\nA node that receive and act on this event send CLASS1.INFORMATION, \n\nType=48 as a response event. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Code for pre-set to set.                                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (29,542,'VSCP_TYPE_CONTROL_TOGGLE_STATE','Toggle the state of a node.\n\nNote: This may be a bad design option as it often demands that the state should be known for the node on beforehand.\n\n | Data byte | Description                                                         | \n | :---------: | -----------                                                         | \n | 0         | Optional byte that have a meaning given by the issuer of the event. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.          | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.  | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (30,542,'VSCP_TYPE_CONTROL_TIMED_PULSE_ON','With this event it is possible to generate a timed pulse that is on for a specified time.\n\n | Data byte | Description                                                         |\n | :---------: | ----------- |\n | 0         | Optional byte that have a meaning given by the issuer of the event. |\n | 1         | Zone for which event applies to (0-255). 255 is all zones.      |\n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.  |\n | 3         | Control byte.                                                       |\n | 4-7       | Set time as a long with MSB in the first byte.                      |\n\n##### Control Byte\n\nThe control byte have the following bits defined\n\n | Bit | Description                                                          |\n | :---: | -----------                                                          |\n | 0-3 | Time code (see table below)                                          |\n | 4   | Reserved                                                             |\n | 5   | Reserved                                                             |\n | 6   | Send on event ( Class=20 Type = 3 (0x03) On ) when pulse goes on.    |\n | 7   | Send off event ( Class=20 Type = 4 (0x04) Off ) when pulse goes off. |\n\n##### Time code\n\n | Code | Description                     |\n | :----: | -----------                     |\n | 0    | Time specified in microseconds. |\n | 1    | Time specified in milliseconds. |\n | 2    | Time specified in seconds.      |\n | 3    | Time specified in minutes.      |\n | 4    | Time specified in hours.        |\n | 5    | Time specified in days.         |\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (31,542,'VSCP_TYPE_CONTROL_TIMED_PULSE_OFF','With this event it is possible to generate a timed pulse that is off for a specified time.\n\n | Data byte | Description                                                         | \n | :---------: | -----------                                                         | \n | 0         | Optional byte that have a meaning given by the issuer of the event. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.          | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.  | \n | 3         | Control byte.                                                       | \n | 4-7       | Set time as a long with MSB in the first byte.                      | \n\n##### Control Byte\n\nThe control byte have the following bits defined\n\n | Bit | Description                                                          | \n | :---: | -----------                                                          | \n | 0-3 | Time code (see table below)                                          | \n | 4   | Reserved                                                             | \n | 5   | Reserved                                                             | \n | 6   | Send on event ( Class=20 Type = 3 (0x03) On ) when pulse goes on.    | \n | 7   | Send off event ( Class=20 Type = 4 (0x04) Off ) when pulse goes off. | \n\n##### Time code\n\n | Code | Description                     | \n | :----: | -----------                     | \n | 0    | Time specified in microseconds. | \n | 1    | Time specified in milliseconds. | \n | 2    | Time specified in seconds.      | \n | 3    | Time specified in minutes.      | \n | 4    | Time specified in hours.        | \n | 5    | Time specified in days.         | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (32,542,'VSCP_TYPE_CONTROL_SET_COUNTRY_LANGUAGE','Set country and language.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Country/Language code.                                             | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n | 3-7       | Country/Language code specific                                     | \n\n | Language code | Description          | Example                                           | \n | :---------: | -----------          | -------                                           | \n | 0             | Custom coded system  | Byte 3 = 0 English, Byte 3 = 1 German or similar. | \n | 1             | ISO 639-1            | nl for Dutch, en for English.                     | \n | 2             | ISO 639-2/T          | nid for Dutch, eng for English.                   | \n | 3             | ISO 639-2/B          | dut for Dutch, eng for English.                   | \n | 4             | ISO 639-3            | nid for Dutch, eng for English.                   | \n | 5             | IETF (RFC-5646/4647) | en-US for American English. en-GB British.        | \n\n\nISO codes can be found [here](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes)\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (33,542,'VSCP_TYPE_CONTROL_BIG_CHANGE_LEVEL','Big Change level can be used in situations when the one byte level of CLASS1.CONTROL, Type=22 is not enough.\n\n | Data byte | Description  | \n | :---------: | -----------   | \n | 0         | Index        | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.   | \n | 3-7       | Level as signed integer. The range can be adjusted by the user by sending just the needed number of bytes (1-5) which form the signed integer (MSB first). | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (34,542,'VSCP_TYPE_CONTROL_SHUTTER_UP','Move shutter up.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index.                                                             | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (35,542,'VSCP_TYPE_CONTROL_SHUTTER_DOWN','Move shutter down.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index.                                                             | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (36,542,'VSCP_TYPE_CONTROL_SHUTTER_LEFT','Move shutter left.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index.                                                             | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (37,542,'VSCP_TYPE_CONTROL_SHUTTER_RIGHT','Move shutter right.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index.                                                             | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (38,542,'VSCP_TYPE_CONTROL_SHUTTER_MIDDLE','Move shutter to middle position.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index.                                                             | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (39,542,'VSCP_TYPE_CONTROL_SHUTTER_PRESET','Move shutter to preset position.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index.                                                             | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n | 3         | Position 0-100.                                                    | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (40,542,'VSCP_TYPE_CONTROL_ALL_LAMPS_ON','Turn on all lamps in a zone.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         |\tOptional byte that have a meaning given by the issuer of the event.| \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nSee also [CLASS1.CONTROL, Type=2](./class1.control.md#type2)\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (41,542,'VSCP_TYPE_CONTROL_ALL_LAMPS_OFF','Turn off all lamps in a zone.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         |\tOptional byte that have a meaning given by the issuer of the event.| \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\nSee also [CLASS1.CONTROL, Type=2](./class1.control.md#type2)\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (42,542,'VSCP_TYPE_CONTROL_LOCK','Lock devices in a zone.\n\n | Data byte | Description                                                        |\n | :---------: | -----------                                                      |\n | 0         |\tOptional byte that have a meaning given by the issuer of the event.| \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (43,542,'VSCP_TYPE_CONTROL_UNLOCK','Unlock devices in a zone.\n\n | Data byte | Description                                                        |\n | :---------: | -----------                                                        |\n | 0         |\tOptional byte that have a meaning given by the issuer of the event.| \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (44,542,'VSCP_TYPE_CONTROL_PWM','With this event it is possible to set duty cycle output such as PWM.\n\n | Data byte | Description   |\n | :---------: | ----------- |\n | 0         | Repeat/counter: 0=repeat forever, >0 number of repeats |\n | 1         | Zone for which event applies to (0-255). 255 is all zones.      |\n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.  |\n | 3         | Control byte.  |\n | 4         | Time-On MSB |\n | 5         | Time-On LSB |\n | 6         | Time-Off MSB |\n | 7         | Time-Off LSB |\n\n##### Control Byte\n\nThe control byte have the following bits defined\n\n | Bit | Description |\n | :---: | ----------- |\n | 0-3 | Time code (see table below) |\n | 4   | Reserved  |\n | 5   | Reserved  |\n | 6   | Reserved  |\n | 7   | Reserved  |\n\n##### Time code\n\n | Code | Description                     |\n | :----: | -----------                   |\n | 0    | Time specified in microseconds. |\n | 1    | Time specified in milliseconds. |\n | 2    | Time specified in seconds.      |\n | 3    | Time specified in minutes.      |\n | 4    | Time specified in hours.        |\n | 5    | Time specified in days.         |\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (45,542,'VSCP_TYPE_CONTROL_TOKEN_LOCK','Lock devices with token.\n\n | Data byte | Description                                                        |\n | :---------: | -----------                                                      |\n | 0         |\tOptional byte that have a meaning given by the issuer of the event.| \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |\n | 3-7 | Token. This token can be 1-5 bytes and length of event is set accordingly. It should be interpreted as an unsigned integer in the range 0-1099511627775. MSB byte is stored in first byte. |\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (46,542,'VSCP_TYPE_CONTROL_TOKEN_UNLOCK','Unlock devices with token.\n\n | Data byte | Description                                                        |\n | :---------: | -----------                                                      |\n | 0         |\tOptional byte that have a meaning given by the issuer of the event.| \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |\n | 3-7 | Token. This token can be 1-5 bytes and length of event is set accordingly. It should be interpreted as an unsigned integer in the range 0-1099511627775. MSB byte is stored in first byte. |\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (47,542,'VSCP_TYPE_CONTROL_SET_SECURITY_LEVEL','Set security level.\n\n | Data byte | Description                                                        |\n | :---------: | -----------                                                      |\n | 0         | Security level to set. 0-255 (Higher value is higher security level).  |\n | 1         | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (48,542,'VSCP_TYPE_CONTROL_SET_SECURITY_PIN','Set security pin.\n\n | Data byte | Description                                                        |\n | :---------: | -----------                                                      |\n | 0         |\tOptional byte that have a meaning given by the issuer of the event.| \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |\n | 3-7 | Security pin. This pin can be 1-5 bytes and length of event is set accordingly. It should be interpreted as an unsigned integer in the range 0-1099511627775. MSB byte is stored in first byte. |\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (49,542,'VSCP_TYPE_CONTROL_SET_SECURITY_PASSWORD','Set security password.\n\n | Data byte | Description                                                        |\n | :---------: | -----------                                                      |\n | 0         |\tOptional byte that have a meaning given by the issuer of the event.| \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |\n | 3-7 | Security password. This password can be 1-5 bytes and length of event is set accordingly. It should be interpreted as an UTF-8 string with a length set bt event data length - 3 |\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (50,542,'VSCP_TYPE_CONTROL_SET_SECURITY_TOKEN','Set security token.\n\n | Data byte | Description                                                        |\n | :---------: | -----------                                                      |\n | 0         |\tOptional byte that have a meaning given by the issuer of the event.| \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |\n | 3-7 | Token. This token can be 1-5 bytes and length of event is set accordingly. It should be interpreted as an unsigned integer in the range 0-1099511627775. MSB byte is stored in first byte. |\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (51,542,'VSCP_TYPE_CONTROL_REQUEST_SECURITY_TOKEN','Request new security token.\n\n | Data byte | Description                                                        |\n | :---------: | -----------                                                      |\n | 0         |\tOptional byte that have a meaning given by the issuer of the event.| \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |\n \n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,552,'VSCP_TYPE_MULTIMEDIA_GENERAL','General Event.');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (1,552,'VSCP_TYPE_MULTIMEDIA_PLAYBACK','This is for controlling playback functionality \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Function (See below)                                               | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\n##### Function Codes\n\n | Code | Description         | \n | :----: | -----------         | \n | 0    | Stop                | \n | 1    | Pause               | \n | 2    | Play                | \n | 3    | Forward             | \n | 4    | Rewind              | \n | 5    | Fast Forward        | \n | 6    | Fast Rewind         | \n | 7    | Next Track          | \n | 30   | Previous Track      | \n | 31   | Toggle repeat mode  | \n | 32   | Repeat mode ON      | \n | 33   | Repeat mode OFF     | \n | 34   | Toggle Shuffle mode | \n | 35   | Shuffle ON          | \n | 36   | Shuffle mode OFF    | \n | 37   | Fade in, Play       | \n | 38   | Fade out, Stop      | \n\nAppropriate **CLASS1.INFORMATION** events should be sent from the controlled device as response to this event. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (2,552,'VSCP_TYPE_MULTIMEDIA_NAVIGATOR_KEY_ENG','This is typically for navigation functions or DVD controls \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Function                                                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\n##### Function Codes\n\n | Code    | Description                                                                            | \n | :----:    | -----------                                                                            | \n | 0..9    | 0..9 keys                                                                              | \n | 10      | 10+ key                                                                                | \n | 20      | OK                                                                                     | \n | 21      | Left                                                                                   | \n | 22      | Right                                                                                  | \n | 23      | Up                                                                                     | \n | 24      | Down                                                                                   | \n | 25      | Menu                                                                                   | \n | 26      | Selecting                                                                              | \n | 65—90 | A..Z Keys                                                                              | \n | 97..122 | a-z keys (can''t use ASCII hex as numbers are too large so this is the next best thing) | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (3,552,'VSCP_TYPE_MULTIMEDIA_ADJUST_CONTRAST','This is typically for adjusting the contrast level of a display device \n\n | Data byte | Description                                                                                                                                                                                                                                                                                                                                                                | \n | :---------: | -----------                                                                                                                                                                                                                                                                                                                                                                | \n | 0         | A value between 0 and 127 indicates the specific contrast level to set. A value between 128 and 159 is change down by the specified number of contrast levels. A value between 160 and 191 is change up by the specified number of contrast levels. A value of 255 means that this is and extended event and that the specific contrast level is sent in byte 3 and after. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                                                                                                                                                                                                                                                                                                 | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                                                                                                                                                                                                                                                                                         | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (4,552,'VSCP_TYPE_MULTIMEDIA_ADJUST_FOCUS','This is typically for adjusting the focus settings of a display device \n\n | Data byte | Description                                                                                                                                                                                                                                                                                                                                                    | \n | :---------: | -----------                                                                                                                                                                                                                                                                                                                                                    | \n | 0         | A value between 0 and 127 indicates the specific focus level to set. A value between 128 and 159 is change down by the specified number of focus levels. A value between 160 and 191 is change up by the specified number of focus levels. A value of 255 means that this is and extended event and that the specific focus level is sent in byte 3 and after. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                                                                                                                                                                                                                                                                                     | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                                                                                                                                                                                                                                                                             | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (5,552,'VSCP_TYPE_MULTIMEDIA_ADJUST_TINT','This is typically for adjusting the tint settings of a display device \n\n | Data byte | Description                                                                                                                                                                                                                                                                                                                                                | \n | :---------: | -----------                                                                                                                                                                                                                                                                                                                                                | \n | 0         | A value between 0 and 127 indicates the specific tint level to set. A value between 128 and 159 is change down by the specified number of tint levels. A value between 160 and 191 is change up by the specified number of tint levels. A value of 255 means that this is and extended event and that the specific tint level is sent in byte 3 and after. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                                                                                                                                                                                                                                                                                 | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                                                                                                                                                                                                                                                                         | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (6,552,'VSCP_TYPE_MULTIMEDIA_ADJUST_COLOUR_BALANCE','This is typically for adjusting the color balance settings of a display device. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (7,552,'VSCP_TYPE_MULTIMEDIA_ADJUST_BRIGHTNESS','This is typically for adjusting the tint settings of a display device \n\n | Data byte | Description                                                                                                                                                                                                                                                                                                                                                                        | \n | :---------: | -----------                                                                                                                                                                                                                                                                                                                                                                        | \n | 0         | A value between 0 and 127 indicates the specific brightness level to set. A value between 128 and 159 is change down by the specified number of brightness levels. A value between 160 and 191 is change up by the specified number of brightness levels. A value of 255 means that this is and extended event and that the specific brightness level is sent in byte 3 and after. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                                                                                                                                                                                                                                                                                                         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                                                                                                                                                                                                                                                                                                 | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (8,552,'VSCP_TYPE_MULTIMEDIA_ADJUST_HUE','This is typically for adjusting the hue settings of a display device \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | A value between 0 and 127 indicates the specific hue level to set. A value between 128 and 159 is change down by the specified number of hue levels. A value between 160 and 191 is change up by the specified number of hue levels. A value of 255 means that this is and extended event and that the specific hue level is sent in byte 3 and after. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (9,552,'VSCP_TYPE_MULTIMEDIA_ADJUST_BASS','This is typically for adjusting the bass level settings of a sound device. Depending on the implementation, this could automatically adjust the treble level. To adjust left and right bass levels, a node would have to use separate zones or sub-zones for left and right. \n\n | Data byte | Description                                                                                                                                                                                                                                                                                                                                                | \n | :---------: | -----------                                                                                                                                                                                                                                                                                                                                                | \n | 0         | A value between 0 and 127 indicates the specific bass level to set. A value between 128 and 159 is change down by the specified number of bass levels. A value between 160 and 191 is change up by the specified number of bass levels. A value of 255 means that this is and extended event and that the specific bass level is sent in byte 3 and after. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                                                                                                                                                                                                                                                                                 | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                                                                                                                                                                                                                                                                         | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (10,552,'VSCP_TYPE_MULTIMEDIA_ADJUST_TREBLE','This is typically for adjusting the treble level settings of a sound device. Depending on the implementation, this could automatically adjust the bass level. To adjust left and right treble levels, a node would have to use separate zones or sub-zones for left and right. \n\n | Data byte | Description                                                                                                                                                                                                                                                                                                                                                          | \n | :---------: | -----------                                                                                                                                                                                                                                                                                                                                                          | \n | 0         | 0 A value between 0 and 127 indicates the specific treble level to set. A value between 128 and 159 is change down by the specified number of treble levels. A value between 160 and 191 is change up by the specified number of treble levels. A value of 255 means that this is and extended event and that the specific treble level is sent in byte 3 and after. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                                                                                                                                                                                                                                                                                           | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                                                                                                                                                                                                                                                                                   | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (11,552,'VSCP_TYPE_MULTIMEDIA_ADJUST_MASTER_VOLUME','This is typically for adjusting the master volume level. This could be used for adjusting the level for all speakers. \n\n | Data byte | Description                                                                                                                                                                                                                                                                                                                                                        | \n | :---------: | -----------                                                                                                                                                                                                                                                                                                                                                        | \n | 0         | A value between 0 and 127 indicates the specific volume level to set. A value between 128 and 159 is change down by the specified number of volume levels. A value between 160 and 191 is change up by the specified number of volume levels. A value of 255 means that this is and extended event and that the specific volume level is sent in byte 3 and after. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                                                                                                                                                                                                                                                                                         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                                                                                                                                                                                                                                                                                 | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (12,552,'VSCP_TYPE_MULTIMEDIA_ADJUST_FRONT_VOLUME','This is typically for adjusting the front speaker volume level. This usually means the two front speakers as opposed to the single center speaker. \n\n | Data byte | Description                                                                                                                                                                                                                                                                                                                                                        | \n | :---------: | -----------                                                                                                                                                                                                                                                                                                                                                        | \n | 0         | A value between 0 and 127 indicates the specific volume level to set. A value between 128 and 159 is change down by the specified number of volume levels. A value between 160 and 191 is change up by the specified number of volume levels. A value of 255 means that this is and extended event and that the specific volume level is sent in byte 3 and after. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                                                                                                                                                                                                                                                                                         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                                                                                                                                                                                                                                                                                 | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (13,552,'VSCP_TYPE_MULTIMEDIA_ADJUST_CENTRE_VOLUME','This is typically for adjusting the front speaker volume level. This usually means the single center speaker as opposed to the two front speakers. \n\n | Data byte | Description                                                                                                                                                                                                                                                                                                                                                        | \n | :---------: | -----------                                                                                                                                                                                                                                                                                                                                                        | \n | 0         | A value between 0 and 127 indicates the specific volume level to set. A value between 128 and 159 is change down by the specified number of volume levels. A value between 160 and 191 is change up by the specified number of volume levels. A value of 255 means that this is and extended event and that the specific volume level is sent in byte 3 and after. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                                                                                                                                                                                                                                                                                         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                                                                                                                                                                                                                                                                                 | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (14,552,'VSCP_TYPE_MULTIMEDIA_ADJUST_REAR_VOLUME','This is typically for adjusting the rear speaker volume level. \n\n | Data byte | Description                                                                                                                                                                                                                                                                                                                                                        | \n | :---------: | -----------                                                                                                                                                                                                                                                                                                                                                        | \n | 0         | A value between 0 and 127 indicates the specific volume level to set. A value between 128 and 159 is change down by the specified number of volume levels. A value between 160 and 191 is change up by the specified number of volume levels. A value of 255 means that this is and extended event and that the specific volume level is sent in byte 3 and after. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                                                                                                                                                                                                                                                                                         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                                                                                                                                                                                                                                                                                 | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (15,552,'VSCP_TYPE_MULTIMEDIA_ADJUST_SIDE_VOLUME','This is typically for adjusting the side speaker volume level. \n\n | Data byte | Description                                                                                                                                                                                                                                                                                                                                                        | \n | :---------: | -----------                                                                                                                                                                                                                                                                                                                                                        | \n | 0         | A value between 0 and 127 indicates the specific volume level to set. A value between 128 and 159 is change down by the specified number of volume levels. A value between 160 and 191 is change up by the specified number of volume levels. A value of 255 means that this is and extended event and that the specific volume level is sent in byte 3 and after. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                                                                                                                                                                                                                                                                                         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                                                                                                                                                                                                                                                                                 | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (16,552,'VSCP_TYPE_MULTIMEDIA_RESERVED16','These are reserved for other future speaker combinations');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (17,552,'VSCP_TYPE_MULTIMEDIA_RESERVED17','These are reserved for other future speaker combinations');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (18,552,'VSCP_TYPE_MULTIMEDIA_RESERVED18','These are reserved for other future speaker combinations');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (19,552,'VSCP_TYPE_MULTIMEDIA_RESERVED19','These are reserved for other future speaker combinations');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (20,552,'VSCP_TYPE_MULTIMEDIA_ADJUST_SELECT_DISK','This is typically for selecting a disk for playback \n\n | Data byte | Description                                                                                                                                                                                                                                                                                                                                                                 | \n | :---------: | -----------                                                                                                                                                                                                                                                                                                                                                                 | \n | 0         | A value between 0 and 127 indicates the specific disk number. A value between 128 and 159 is change down by the specified number of disks. A value between 160 and 191 is change up by the specified number of disks. A value of 200 means select a random disk. A value of 255 means that this is and extended event and that the disk number is sent in byte 3 and after. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                                                                                                                                                                                                                                                                                                  | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                                                                                                                                                                                                                                                                                          | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (21,552,'VSCP_TYPE_MULTIMEDIA_ADJUST_SELECT_TRACK','This is typically for selecting a track for playback \n\n | Data byte | Description                                                                                                                                                                                                                                                                                                                                                             | \n | :---------: | -----------                                                                                                                                                                                                                                                                                                                                                             | \n | 0         | A value between 0 and 127 indicates the track number. A value between 128 and 159 is change down by the specified number of tracks. A value between 160 and 191 is change up by the specified number of tracks. A value of 200 means select a random track. A value of 255 means that this is and extended event and that the track number is sent in byte 3 and after. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                                                                                                                                                                                                                                                                                              | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                                                                                                                                                                                                                                                                                      | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (22,552,'VSCP_TYPE_MULTIMEDIA_ADJUST_SELECT_ALBUM','This is typically for selecting an album or play-list for playback \n\n | Data byte | Description                                                                                                                                                                                                                                                                                                                                                                                  | \n | :---------: | -----------                                                                                                                                                                                                                                                                                                                                                                                  | \n | 0         | A value between 0 and 127 indicates the album/play-list number. A value between 128 and 159 is change down by the specified number of albums/play-lists. A value between 160 and 191 is change up by the specified number of albums. A value of 200 means select a random album. A value of 255 means that this is and extended event and that the album number is sent in byte 3 and after. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                                                                                                                                                                                                                                                                                                                   | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                                                                                                                                                                                                                                                                                                           | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (23,552,'VSCP_TYPE_MULTIMEDIA_ADJUST_SELECT_CHANNEL','This is typically for selecting a TV Channel \n\n | Data byte | Description                                                                                                                                                                                                                                                                                                                                                                       | \n | :---------: | -----------                                                                                                                                                                                                                                                                                                                                                                       | \n | 0         | A value between 0 and 127 indicates the channel number. A value between 128 and 159 is change down by the specified number of channels. A value between 160 and 191 is change up by the specified number of channels. A value of 200 means select a random channel. A value of 255 means that this is and extended event and that the channel number is sent in byte 3 and after. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                                                                                                                                                                                                                                                                                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                                                                                                                                                                                                                                                                                                | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (24,552,'VSCP_TYPE_MULTIMEDIA_ADJUST_SELECT_PAGE','This is typically for selecting a page of a film \n\n | Data byte | Description                                                                                                                                                                                                                                                                                                                                                        | \n | :---------: | -----------                                                                                                                                                                                                                                                                                                                                                        | \n | 0         | A value between 0 and 127 indicates the page number. A value between 128 and 159 is change down by the specified number of pages. A value between 160 and 191 is change up by the specified number of pages. A value of 200 means select a random page. A value of 255 means that this is and extended event and that the page number is sent in byte 3 and after. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                                                                                                                                                                                                                                                                                         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                                                                                                                                                                                                                                                                                 | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (25,552,'VSCP_TYPE_MULTIMEDIA_ADJUST_SELECT_CHAPTER','This is typically for selecting a chapter of a film \n\n | Data byte | Description                                                                                                                                                                                                                                                                                                                                                                       | \n | :---------: | -----------                                                                                                                                                                                                                                                                                                                                                                       | \n | 0         | A value between 0 and 127 indicates the chapter number. A value between 128 and 159 is change down by the specified number of chapters. A value between 160 and 191 is change up by the specified number of chapters. A value of 200 means select a random chapter. A value of 255 means that this is and extended event and that the chapter number is sent in byte 3 and after. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                                                                                                                                                                                                                                                                                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                                                                                                                                                                                                                                                                                                | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (26,552,'VSCP_TYPE_MULTIMEDIA_ADJUST_SELECT_SCREEN_FORMAT','This is for controlling screen format of a display device \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | 0 = Auto, 1 = Just, 2 = Norma,l 3 = Zoom.                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (27,552,'VSCP_TYPE_MULTIMEDIA_ADJUST_SELECT_INPUT_SOURCE','This is for controlling the input source of a playback device \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Device code                                                        | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\n##### Device Code\n\n | Code | Description                        | \n | :----: | -----------                        | \n | 0    | Auto                               | \n | 1    | CD                                 | \n | 2    | AUX                                | \n | 3    | DVD                                | \n | 4    | SAT                                | \n | 5    | VCR                                | \n | 6    | Tape                               | \n | 7    | Phone                              | \n | 8    | Tuner                              | \n | 9    | FM                                 | \n | 10   | AM                                 | \n | 11   | Radio (9 – 10 are more specific) | \n | 16   | Component                          | \n | 17   | VGA                                | \n | 18   | SVideo                             | \n | 19   | Video1                             | \n | 20   | Video2                             | \n | 21   | Video3                             | \n | 22   | Sat1                               | \n | 23   | Sat2                               | \n | 24   | Sat3                               | \n | 25   | mp3 source                         | \n | 26   | mpeg source                        | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (28,552,'VSCP_TYPE_MULTIMEDIA_ADJUST_SELECT_OUTPUT','This is for controlling the output of a playback device \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Output Code                                                        | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\n##### Output Code\n\n | Code | Description | \n | :----: | ----------- | \n | 0    | Auto        | \n | 16   | Component   | \n | 17   | VGA         | \n | 18   | SVideo      | \n | 19   | Video1      | \n | 20   | Video2      | \n | 21   | Video3      | \n | 30   | HDMI1       | \n | 32   | HDMI2       | \n | 32   | HDMI3       | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (29,552,'VSCP_TYPE_MULTIMEDIA_RECORD','Control a recording device. \n\n | Data byte | Description                                                            | \n | :---------: | -----------                                                            | \n | 0         | 0 - Start to record, 1 - Stop record, 2 - Disable, AGC 3 - Enable AGC. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.             | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.     | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (30,552,'VSCP_TYPE_MULTIMEDIA_SET_RECORDING_VOLUME','Control a recording device. \n\n | Data byte | Description                                                                                                                                                                                                                                                                                                                                                                | \n | :---------: | -----------                                                                                                                                                                                                                                                                                                                                                                | \n | 0         | A value between 0 and 127 indicates the specific contrast level to set. A value between 128 and 159 is change down by the specified number of contrast levels. A value between 160 and 191 is change up by the specified number of contrast levels. A value of 255 means that this is and extended event and that the specific contrast level is sent in byte 3 and after. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                                                                                                                                                                                                                                                                                                 | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                                                                                                                                                                                                                                                                                         | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (40,552,'VSCP_TYPE_MULTIMEDIA_TIVO_FUNCTION','This is typically for accessing TIVO functions \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | TIVO Code                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\n##### TIVO Code\n\n | Code | Description   | \n | :----: | -----------   | \n | 1    | Box Office    | \n | 2    | Services      | \n | 3    | Program Guide | \n | 4    | Text          | \n | 5    | Info          | \n | 6    | Help          | \n | 7    | Backup        | \n | 20   | Red key       | \n | 21   | Yellow key    | \n | 22   | Green key     | \n | 23   | Blue key      | \n | 24   | White key     | \n | 25   | Black key     | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (50,552,'VSCP_TYPE_MULTIMEDIA_GET_CURRENT_TITLE','Get the title for the current active media. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (51,552,'VSCP_TYPE_MULTIMEDIA_SET_POSITION','This is for controlling the position in the stream/file of a playback device \n\n | Data byte | Description                                                                                                                                                                                         | \n | :---------: | -----------                                                                                                                                                                                         | \n | 0         | Reserved                                                                                                                                                                                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                                                                                                                          | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                                                                                                                  | \n | 3-7       | Position in milliseconds, This is an integer with a size specified by the event size. This 0xFF, 0xFFFF, 0xFFFFFF, 0xFFFFFFFF and 0xFFFFFFFFFF is the maximum that can be sent for different sizes. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (52,552,'VSCP_TYPE_MULTIMEDIA_GET_MEDIA_INFO','Get various media information from a device. \n\n | Data byte | Description                                                                                                                                                                          | \n | :---------: | -----------                                                                                                                                                                          | \n | 0         | Type of media information requested. 1 - Current Title, 1 - Get Folders, 2 - Get Disks, 3 - Get Tracks, 4 - Get Albums/Play list,s 5 - Get Channels, 6 - Get Pages, 7 - Get Chapters | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                                                                                                           | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                                                                                                   | \n\nIf a device does not support the requested type of media information its sends a CLASS1.INFORMATION error event or does not response. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (53,552,'VSCP_TYPE_MULTIMEDIA_REMOVE_ITEM','Remove an item from an album. \n\n | Data byte | Description                                                                                                                                                       | \n | :---------: | -----------                                                                                                                                                       | \n | 0         | 0-128 - Pos to remove from album/play-list A value of 255 means that this is and extended event and that the specific contrast level is sent in byte 3 and after. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                                                                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                                                                                | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (54,552,'VSCP_TYPE_MULTIMEDIA_REMOVE_ALL_ITEMS','Remove all items from an album. \n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Reserved.                                                          | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (55,552,'VSCP_TYPE_MULTIMEDIA_SAVE_ALBUM','Save album/play-list to permanent storage. \n\n | Data byte | Description                                                          | \n | :---------: | -----------                                                          | \n | 0         | 0 - Do not overwrite if it already exists 1 - Overwrite if it exist. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.           | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.   | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (60,552,'VSCP_TYPE_MULTIMEDIA_CONTROL','Send multimedia information. This can be the title for the current active media. It can be sent as a response to a “Get Title” or similar event or by its own when a new title is playing or other multimedia information has changed.\n\nResponse should be Type=61 \n\n | Data byte | Description                                                          | \n | :---------: | -----------                                                          | \n | 0         | Control codes                                                        | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.           | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.   | \n | 3         | Index. Base 0. Increase by one for every fragment of the title sent. | \n | 4-7       | Data.                                                                | \n\n##### Control Codes\n\n | Code | Description                                | \n | :----: | -----------                                | \n | 0    | Active Title (URL).                        | \n | 1    | Set Title(URL).                            | \n | 2    | Active Folder(URL).                        | \n | 3    | Set Active Folder(URL).                    | \n | 4    | Artist(string).                            | \n | 5    | Year(string).                              | \n | 6    | Genre(string).                             | \n | 7    | Album(string).                             | \n | 8    | Comment(string).                           | \n | 9    | Track(integer).                            | \n | 10   | Picture(url).                              | \n | 11   | Sample rate(integer).                      | \n | 12   | Bit-rate(integer).                         | \n | 13   | Channels(integer).                         | \n | 14   | Media size bytes(integer).                 | \n | 15   | Time(string).                              | \n | 16   | Mpeg version(string).                      | \n | 17   | Mpeg layer(string).                        | \n | 18   | Frequency(integer).                        | \n | 19   | Channel Mode.                              | \n | 20   | CRC(integer).                              | \n | 21   | Copyright(string).                         | \n | 22   | Original(string).                          | \n | 23   | Emphasis.                                  | \n | 24   | Media position in milliseconds(integer).   | \n | 25   | Media-length in milliseconds(integer).     | \n | 26   | Version(string).                           | \n | 27   | Album/Play list(string).                   | \n | 28   | Play file(URL).                            | \n | 29   | Add file to album/play-list(URL).          | \n | 30   | Current Folder (URL).                      | \n | 31   | Folder content(URL).                       | \n | 32   | Set Folder(URL).                           | \n | 33   | Get Folder content(URL).                   | \n | 34   | Get Folder content albums/play-lists(URL). | \n | 35   | Get Folder content filter(string)          | \n | 36   | Disks list(String)                         | \n | 37   | Folders list(String)                       | \n | 38   | Tracks list(String)                        | \n | 39   | Albums/Play list list(String)              | \n | 40   | Channels list(String)                      | \n | 41   | Pages list(String)                         | \n | 42   | Chapters list(String)                      | \n | 43   | New Album/Play list(URL)                   | \n\nThe last fragment is sent with no data.\n\nLists in string form have list items separated with a zero (0x00).\n\nAlbum can be looked upon as a play-list which is a term used for many other multimedia products. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (61,552,'VSCP_TYPE_MULTIMEDIA_CONTROL_RESPONSE','Response for multimedia control.');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,562,'VSCP_TYPE_AOL_GENERAL','General Event.');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (1,562,'VSCP_TYPE_AOL_UNPLUGGED_POWER','This node was unplugged from its power source.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for record.                                                  | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (2,562,'VSCP_TYPE_AOL_UNPLUGGED_LAN','This node was unplugged from the network.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for record.                                                  | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (3,562,'VSCP_TYPE_AOL_CHASSIS_INTRUSION','This node detected chassis intrusion.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for record.                                                  | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (4,562,'VSCP_TYPE_AOL_PROCESSOR_REMOVAL','This node detected processor removal.\n\n | Data byte | Description                                                        | \n | --------- | -----------                                                        | \n | 0         | Index for record.                                                  | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (5,562,'VSCP_TYPE_AOL_ENVIRONMENT_ERROR','This node detected system environmental errors.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for record.                                                  | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (6,562,'VSCP_TYPE_AOL_HIGH_TEMPERATURE','This node detected high temperature.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for record.                                                  | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (7,562,'VSCP_TYPE_AOL_FAN_SPEED','This node detected Fan speed problem.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for record.                                                  | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (8,562,'VSCP_TYPE_AOL_VOLTAGE_FLUCTUATIONS','This node detected Voltage fluctuations.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for record.                                                  | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (9,562,'VSCP_TYPE_AOL_OS_ERROR','This node detected Operating system errors.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for record.                                                  | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (10,562,'VSCP_TYPE_AOL_POWER_ON_ERROR','This node detected System power-on errors.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for record.                                                  | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (11,562,'VSCP_TYPE_AOL_SYSTEM_HUNG','This node detected System is hung.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for record.                                                  | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (12,562,'VSCP_TYPE_AOL_COMPONENT_FAILURE','This node detected Component failure.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for record.                                                  | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (13,562,'VSCP_TYPE_AOL_REBOOT_UPON_FAILURE','This node detected Remote system reboot upon report of a critical failure.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for record.                                                  | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (14,562,'VSCP_TYPE_AOL_REPAIR_OPERATING_SYSTEM','This node detected Repair Operating System.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for record.                                                  | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (15,562,'VSCP_TYPE_AOL_UPDATE_BIOS_IMAGE','This node detected Update BIOS image.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for record.                                                  | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (16,562,'VSCP_TYPE_AOL_UPDATE_DIAGNOSTIC_PROCEDURE','This node detected Update Perform other diagnostic procedures.\n\n | Data byte | Description                                                        | \n | :---------: | -----------                                                        | \n | 0         | Index for record.                                                  | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,572,'VSCP_TYPE_MEASUREMENT_GENERAL','This is a general (custom) measurement event that can be used if no other event is suitable. \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (1,572,'VSCP_TYPE_MEASUREMENT_COUNT','This is a discrete value typical for a count. There is no unit for this measurement just a discrete value. \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (2,572,'VSCP_TYPE_MEASUREMENT_LENGTH','**Default unit:** Meter. \n\nThis is a measurement of a length or a distance.\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (3,572,'VSCP_TYPE_MEASUREMENT_MASS','**Default unit:** Kilogram.\n\nThis is a measurement of a mass. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (4,572,'VSCP_TYPE_MEASUREMENT_TIME','A time measurement.\n\n**Default unit:** Seconds.  \n**Opt. unit:** (1) Milliseconds. Absolute: (2) y-y-m-d-h-m-s (binary). String: (3) "HHMMSS". \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (5,572,'VSCP_TYPE_MEASUREMENT_ELECTRIC_CURRENT','**Default unit:** Ampere.\n\nThis is a measurement of an electric current. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (6,572,'VSCP_TYPE_MEASUREMENT_TEMPERATURE','**Default unit:** Kelvin.  \n**Opt. unit:** Degree Celsius (1), Fahrenheit (2)\n\nThis is a measurement of a temperature. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (7,572,'VSCP_TYPE_MEASUREMENT_AMOUNT_OF_SUBSTANCE','**Default unit:** Mole.\n\nThis is a measurement of an amount of a substance. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (8,572,'VSCP_TYPE_MEASUREMENT_INTENSITY_OF_LIGHT','**Default unit:** Candela.\n\nThis is a measurement of luminous intensity. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (9,572,'VSCP_TYPE_MEASUREMENT_FREQUENCY','\n**Default unit:** Hertz.\n\nThis is a measurement of regular events during a second. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (10,572,'VSCP_TYPE_MEASUREMENT_RADIOACTIVITY','**Default unit:** becquerel.\n**Optional unit:** curie (1)\n\nThis is a measurement of rates of things, which happen randomly, or are unpredictable. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (11,572,'VSCP_TYPE_MEASUREMENT_FORCE','**Default unit:** newton.\n\nThis is a measurement of force. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (12,572,'VSCP_TYPE_MEASUREMENT_PRESSURE','**Default unit:** pascal.  \n**Opt. unit:** bar (1), psi (2)\n\nThis is a measurement of pressure. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (13,572,'VSCP_TYPE_MEASUREMENT_ENERGY','**Default unit:** Joule.  \n**Optional unit:** KWh (1)\n\nThis is a measurement of energy. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (14,572,'VSCP_TYPE_MEASUREMENT_POWER','**Default unit:** watt.  \n**Optional unit:** Horse power (1).\n\nThis is a measurement of power. \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (15,572,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_CHARGE','**Default unit:** coulomb.\n\nThis is a measurement electrical charge. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (16,572,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_POTENTIAL','**Default unit:** volt.\n\nThis is a measurement of electrical potential. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (17,572,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_CAPACITANCE','**Default unit:** farad (F).\n\nThis is a measurement of electric capacitance.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (18,572,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_RESISTANCE','**Default unit:** ohm (Ω).\n\nThis is a measurement of resistance. \n\n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (19,572,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_CONDUCTANCE','**Default unit:** siemens.\n\nThis is a measurement of electrical conductance. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (20,572,'VSCP_TYPE_MEASUREMENT_MAGNETIC_FIELD_STRENGTH','**Default unit:** amperes per meter (H).  \n**Optional units:** teslas (B) (1)\n\nThis is a measurement of magnetic field strength. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (21,572,'VSCP_TYPE_MEASUREMENT_MAGNETIC_FLUX','**Default unit:** weber (Wb).\n\nThis is a measurement of magnetic flux. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (22,572,'VSCP_TYPE_MEASUREMENT_MAGNETIC_FLUX_DENSITY','**Default unit:** tesla (B).\n\n**Optional unit:** Gauss (1)\n\nThis is a measurement of flux density or field strength for magnetic fields (also called the magnetic induction). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (23,572,'VSCP_TYPE_MEASUREMENT_INDUCTANCE','**Default unit:** henry (H).\n\nThis is a measurement of inductance. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (24,572,'VSCP_TYPE_MEASUREMENT_FLUX_OF_LIGHT','**Default unit:** Lumen (lm= cd * sr)\n\nThis is a measurement of luminous Flux. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (25,572,'VSCP_TYPE_MEASUREMENT_ILLUMINANCE','**Default unit:** lux (lx) ( lx = lm / m² )\n\nThis is used to express both Illuminance (incidence of light) and Luminous Emittance (emission of light). \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (26,572,'VSCP_TYPE_MEASUREMENT_RADIATION_DOSE_ABSORBED','**Default unit:** gray (Gy).   \n\n\nThis is a measurement of a radiation dose (Absorbed dose of ionizing radiation). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (27,572,'VSCP_TYPE_MEASUREMENT_CATALYTIC_ACITIVITY','**Default unit:** katal (kat).\n\nThis is a measurement of catalytic activity used in biochemistry. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (28,572,'VSCP_TYPE_MEASUREMENT_VOLUME','**Default unit:** cubic meter (m³)   \n**Opt. unit:** Liter (dm³) (1), decilitre (100 cm³) (2), centilitre (10 cm³) (3), millilitre (cm³) (4) where unit 4 is only available for Level II measurement events where units can hold this value.\n\nThis is a measurement of volume. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (29,572,'VSCP_TYPE_MEASUREMENT_SOUND_INTENSITY','**Default unit:** W/m2, watt per square meter. \n\nThis is a measurement of sound intensity (acoustic intensity). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (30,572,'VSCP_TYPE_MEASUREMENT_ANGLE','* **Default unit:** radian (rad) (Plane angles).   \n* **Opt Unit:** degree (1).\n* **Opt Unit:** arcminute (2).\n* **Opt Unit:** arcseconds (3).\n\nThis is a measurement of an angle. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (31,572,'VSCP_TYPE_MEASUREMENT_POSITION','**Default unit:** Longitude.  \n**Opt. unit:** Latitude.\n\nThis is a (decimal) measurement of a position as of WGS 84. Normally given as a floating point value. See [./class1.gps.md](CLASS1.GPS) for a better candidate to use for position data.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (32,572,'VSCP_TYPE_MEASUREMENT_SPEED','**Default unit:** Meters per second.   \n**Optional unit:** Kilometers per hour (1) Miles per hour (2)\n\nThis is a measurement of a speed. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (33,572,'VSCP_TYPE_MEASUREMENT_ACCELERATION','**Default unit:** Meters per second/second (m/s2).\n\nThis is a measurement of acceleration. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (34,572,'VSCP_TYPE_MEASUREMENT_TENSION','**Default unit:** N/m.\n\nThis is a measurement of tension. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (35,572,'VSCP_TYPE_MEASUREMENT_HUMIDITY','**Default unit:** Relative percentage 0-100%.\n\nThis is a measurement of relative moistness (Humidity). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (36,572,'VSCP_TYPE_MEASUREMENT_FLOW','**Default unit:** Cubic meters/second.   \n**Opt Unit:** Liters/Second.\n\nThis is a measurement of flow. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (37,572,'VSCP_TYPE_MEASUREMENT_THERMAL_RESISTANCE','**Default unit:** Thermal ohm K/W.\n\nThis is a measurement of thermal resistance. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (38,572,'VSCP_TYPE_MEASUREMENT_REFRACTIVE_POWER','**Default unit:** dioptre (dpt) m-1.\n\nThis is a measurement of refractive (optical) power. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (39,572,'VSCP_TYPE_MEASUREMENT_DYNAMIC_VISCOSITY','**Default unit:**  pascal second\n**optional units** poiseuille (Pl) = 1, poise (P) = 2\n\nThis is a measurement of dynamic viscosity. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (40,572,'VSCP_TYPE_MEASUREMENT_SOUND_IMPEDANCE','**Default unit:** rayl (Pa·s/m)\n\nThis is a measurement of sound impedance. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (41,572,'VSCP_TYPE_MEASUREMENT_SOUND_RESISTANCE','**Default unit:** Acoustic ohm Pa · s/ m³.\n\nThis is a measurement of sound resistance.\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (42,572,'VSCP_TYPE_MEASUREMENT_ELECTRIC_ELASTANCE','**Default unit:** daraf (f-1).\n\nThis is a measurement of electric elasticity. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (43,572,'VSCP_TYPE_MEASUREMENT_LUMINOUS_ENERGY','**Default unit:** talbot ( tb = lm * s) \n\nThis is a measurement of luminous energy.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (44,572,'VSCP_TYPE_MEASUREMENT_LUMINANCE','**Default unit:** cd / m²) (non SI unit = nit)\n\nThis is a measurement of luminance.\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (45,572,'VSCP_TYPE_MEASUREMENT_CHEMICAL_CONCENTRATION_MOLAR','**Default unit:** mol/m3.\n\nThis is a measurement of chemical mol concentration. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (46,572,'VSCP_TYPE_MEASUREMENT_CHEMICAL_CONCENTRATION_MASS','**Default unit:** kg/m3.\n\nThis is a measurement of chemical mass concentration. ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (47,572,'VSCP_TYPE_MEASUREMENT_DOSE_EQVIVALENT','Reserved\n\n\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (48,572,'VSCP_TYPE_MEASUREMENT_RESERVED48','Reserved \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (49,572,'VSCP_TYPE_MEASUREMENT_DEWPOINT','**Default unit:** Kelvin.  \n**Opt. unit:** Degree Celsius (1), Fahrenheit (2)\n\nThis is a measurement of the Dew Point. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (50,572,'VSCP_TYPE_MEASUREMENT_RELATIVE_LEVEL','**Default unit:** Relative value.\n\nThis is a relative value for a level measurement without a unit. It is just relative to the min/max value for the selected data representation, typically percentage or per mille or similar. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (51,572,'VSCP_TYPE_MEASUREMENT_ALTITUDE','**Default unit:** Meter.  \n**Opt. unit:** Feet(1), inches (2)\n\nAltitude in meters. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (52,572,'VSCP_TYPE_MEASUREMENT_AREA','**Default unit:** square meter (m²)\n\nArea in square meter. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (53,572,'VSCP_TYPE_MEASUREMENT_RADIANT_INTENSITY','**Default unit:** watt per steradian ( W / sr )\n\nRadiated power per room angle. \n\n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (54,572,'VSCP_TYPE_MEASUREMENT_RADIANCE','**Default unit:** watt per steradian per square metre ( W / (sr * m²) )\n\nThis is the radiant flux emitted, reflected, transmitted or received by a surface.\n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (55,572,'VSCP_TYPE_MEASUREMENT_IRRADIANCE','**Default unit:** watt per square metre ( W / m² )\n\nPower emitted from or striking onto a surface or area. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (56,572,'VSCP_TYPE_MEASUREMENT_SPECTRAL_RADIANCE','**Default unit:** watt per steradian per square metre per nm (W·sr-1·m-2·nm-1)    \n**Opt. unit:** watt per steradian per meter3 (W·sr-1·m-3) (1), watt per steradian per square metre per hertz (W·sr-1·m-3) (2)\n\nRadiance of a surface per unit frequency or wavelength.\n\n                        \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (57,572,'VSCP_TYPE_MEASUREMENT_SPECTRAL_IRRADIANCE','**Default unit:** watt per square metre per nm (W·m-2·nm-1)   \n**Opt. unit:** watt per metre3 (W·m-3) (1), watt per square metre per hertz (W·m-2·Hz-1) (2)\n\nIrradiance of a surface per unit frequency or wavelength.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (58,572,'VSCP_TYPE_MEASUREMENT_SOUND_PRESSURE','**Default unit:** pascal (Pa) \n\nThis is a measurement of sound pressure (acoustic pressure). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (59,572,'VSCP_TYPE_MEASUREMENT_SOUND_DENSITY','**Default unit:** pascal (Pa) \n\nSound energy density or sound density is the sound energy per unit volume.\n\n                        ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (60,572,'VSCP_TYPE_MEASUREMENT_SOUND_LEVEL','**Default unit:** decibel (dB) \n\nSound level expressed in decibel. This event is supplied for convenience.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (61,572,'VSCP_TYPE_MEASUREMENT_RADIATION_DOSE_EQ','**Default unit:** sievert (Sv).\n\n**Optional unit** rem (1)\n\nThis is a measurement of a radiation dose (Equivalent dose of ionizing radiation). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (62,572,'VSCP_TYPE_MEASUREMENT_RADIATION_DOSE_EXPOSURE','**Default unit:** coulomb per kilogram (C/kg).   \n**Optional unit:** Röntgen/R (1)\n\nThis is a measurement of a radiation dose (Exposed dose of ionizing radiation). \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,573,'VSCP_TYPE_MEASUREMENTX1_GENERAL','\nThis is a general (custom) event that can be used if no other event is suitable. \n \n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,574,'VSCP_TYPE_MEASUREMENTX2_GENERAL','General Event.\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,575,'VSCP_TYPE_MEASUREMENTX3_GENERAL','General Event.\n\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,576,'VSCP_TYPE_MEASUREMENTX4_GENERAL','General Event.\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,577,'VSCP_TYPE_MEASUREMENT_GENERAL','This is a general (custom) measurement event that can be used if no other event is suitable. \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (1,577,'VSCP_TYPE_MEASUREMENT_COUNT','This is a discrete value typical for a count. There is no unit for this measurement just a discrete value. \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (2,577,'VSCP_TYPE_MEASUREMENT_LENGTH','**Default unit:** Meter. \n\nThis is a measurement of a length or a distance.\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (3,577,'VSCP_TYPE_MEASUREMENT_MASS','**Default unit:** Kilogram.\n\nThis is a measurement of a mass. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (4,577,'VSCP_TYPE_MEASUREMENT_TIME','A time measurement.\n\n**Default unit:** Seconds.  \n**Opt. unit:** (1) Milliseconds. Absolute: (2) y-y-m-d-h-m-s (binary). String: (3) "HHMMSS". \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (5,577,'VSCP_TYPE_MEASUREMENT_ELECTRIC_CURRENT','**Default unit:** Ampere.\n\nThis is a measurement of an electric current. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (6,577,'VSCP_TYPE_MEASUREMENT_TEMPERATURE','**Default unit:** Kelvin.  \n**Opt. unit:** Degree Celsius (1), Fahrenheit (2)\n\nThis is a measurement of a temperature. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (7,577,'VSCP_TYPE_MEASUREMENT_AMOUNT_OF_SUBSTANCE','**Default unit:** Mole.\n\nThis is a measurement of an amount of a substance. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (8,577,'VSCP_TYPE_MEASUREMENT_INTENSITY_OF_LIGHT','**Default unit:** Candela.\n\nThis is a measurement of luminous intensity. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (9,577,'VSCP_TYPE_MEASUREMENT_FREQUENCY','\n**Default unit:** Hertz.\n\nThis is a measurement of regular events during a second. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (10,577,'VSCP_TYPE_MEASUREMENT_RADIOACTIVITY','**Default unit:** becquerel.\n**Optional unit:** curie (1)\n\nThis is a measurement of rates of things, which happen randomly, or are unpredictable. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (11,577,'VSCP_TYPE_MEASUREMENT_FORCE','**Default unit:** newton.\n\nThis is a measurement of force. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (12,577,'VSCP_TYPE_MEASUREMENT_PRESSURE','**Default unit:** pascal.  \n**Opt. unit:** bar (1), psi (2)\n\nThis is a measurement of pressure. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (13,577,'VSCP_TYPE_MEASUREMENT_ENERGY','**Default unit:** Joule.  \n**Optional unit:** KWh (1)\n\nThis is a measurement of energy. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (14,577,'VSCP_TYPE_MEASUREMENT_POWER','**Default unit:** watt.  \n**Optional unit:** Horse power (1).\n\nThis is a measurement of power. \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (15,577,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_CHARGE','**Default unit:** coulomb.\n\nThis is a measurement electrical charge. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (16,577,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_POTENTIAL','**Default unit:** volt.\n\nThis is a measurement of electrical potential. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (17,577,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_CAPACITANCE','**Default unit:** farad (F).\n\nThis is a measurement of electric capacitance.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (18,577,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_RESISTANCE','**Default unit:** ohm (Ω).\n\nThis is a measurement of resistance. \n\n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (19,577,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_CONDUCTANCE','**Default unit:** siemens.\n\nThis is a measurement of electrical conductance. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (20,577,'VSCP_TYPE_MEASUREMENT_MAGNETIC_FIELD_STRENGTH','**Default unit:** amperes per meter (H).  \n**Optional units:** teslas (B) (1)\n\nThis is a measurement of magnetic field strength. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (21,577,'VSCP_TYPE_MEASUREMENT_MAGNETIC_FLUX','**Default unit:** weber (Wb).\n\nThis is a measurement of magnetic flux. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (22,577,'VSCP_TYPE_MEASUREMENT_MAGNETIC_FLUX_DENSITY','**Default unit:** tesla (B).\n\n**Optional unit:** Gauss (1)\n\nThis is a measurement of flux density or field strength for magnetic fields (also called the magnetic induction). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (23,577,'VSCP_TYPE_MEASUREMENT_INDUCTANCE','**Default unit:** henry (H).\n\nThis is a measurement of inductance. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (24,577,'VSCP_TYPE_MEASUREMENT_FLUX_OF_LIGHT','**Default unit:** Lumen (lm= cd * sr)\n\nThis is a measurement of luminous Flux. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (25,577,'VSCP_TYPE_MEASUREMENT_ILLUMINANCE','**Default unit:** lux (lx) ( lx = lm / m² )\n\nThis is used to express both Illuminance (incidence of light) and Luminous Emittance (emission of light). \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (26,577,'VSCP_TYPE_MEASUREMENT_RADIATION_DOSE_ABSORBED','**Default unit:** gray (Gy).   \n\n\nThis is a measurement of a radiation dose (Absorbed dose of ionizing radiation). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (27,577,'VSCP_TYPE_MEASUREMENT_CATALYTIC_ACITIVITY','**Default unit:** katal (kat).\n\nThis is a measurement of catalytic activity used in biochemistry. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (28,577,'VSCP_TYPE_MEASUREMENT_VOLUME','**Default unit:** cubic meter (m³)   \n**Opt. unit:** Liter (dm³) (1), decilitre (100 cm³) (2), centilitre (10 cm³) (3), millilitre (cm³) (4) where unit 4 is only available for Level II measurement events where units can hold this value.\n\nThis is a measurement of volume. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (29,577,'VSCP_TYPE_MEASUREMENT_SOUND_INTENSITY','**Default unit:** W/m2, watt per square meter. \n\nThis is a measurement of sound intensity (acoustic intensity). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (30,577,'VSCP_TYPE_MEASUREMENT_ANGLE','* **Default unit:** radian (rad) (Plane angles).   \n* **Opt Unit:** degree (1).\n* **Opt Unit:** arcminute (2).\n* **Opt Unit:** arcseconds (3).\n\nThis is a measurement of an angle. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (31,577,'VSCP_TYPE_MEASUREMENT_POSITION','**Default unit:** Longitude.  \n**Opt. unit:** Latitude.\n\nThis is a (decimal) measurement of a position as of WGS 84. Normally given as a floating point value. See [./class1.gps.md](CLASS1.GPS) for a better candidate to use for position data.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (32,577,'VSCP_TYPE_MEASUREMENT_SPEED','**Default unit:** Meters per second.   \n**Optional unit:** Kilometers per hour (1) Miles per hour (2)\n\nThis is a measurement of a speed. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (33,577,'VSCP_TYPE_MEASUREMENT_ACCELERATION','**Default unit:** Meters per second/second (m/s2).\n\nThis is a measurement of acceleration. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (34,577,'VSCP_TYPE_MEASUREMENT_TENSION','**Default unit:** N/m.\n\nThis is a measurement of tension. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (35,577,'VSCP_TYPE_MEASUREMENT_HUMIDITY','**Default unit:** Relative percentage 0-100%.\n\nThis is a measurement of relative moistness (Humidity). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (36,577,'VSCP_TYPE_MEASUREMENT_FLOW','**Default unit:** Cubic meters/second.   \n**Opt Unit:** Liters/Second.\n\nThis is a measurement of flow. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (37,577,'VSCP_TYPE_MEASUREMENT_THERMAL_RESISTANCE','**Default unit:** Thermal ohm K/W.\n\nThis is a measurement of thermal resistance. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (38,577,'VSCP_TYPE_MEASUREMENT_REFRACTIVE_POWER','**Default unit:** dioptre (dpt) m-1.\n\nThis is a measurement of refractive (optical) power. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (39,577,'VSCP_TYPE_MEASUREMENT_DYNAMIC_VISCOSITY','**Default unit:**  pascal second\n**optional units** poiseuille (Pl) = 1, poise (P) = 2\n\nThis is a measurement of dynamic viscosity. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (40,577,'VSCP_TYPE_MEASUREMENT_SOUND_IMPEDANCE','**Default unit:** rayl (Pa·s/m)\n\nThis is a measurement of sound impedance. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (41,577,'VSCP_TYPE_MEASUREMENT_SOUND_RESISTANCE','**Default unit:** Acoustic ohm Pa · s/ m³.\n\nThis is a measurement of sound resistance.\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (42,577,'VSCP_TYPE_MEASUREMENT_ELECTRIC_ELASTANCE','**Default unit:** daraf (f-1).\n\nThis is a measurement of electric elasticity. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (43,577,'VSCP_TYPE_MEASUREMENT_LUMINOUS_ENERGY','**Default unit:** talbot ( tb = lm * s) \n\nThis is a measurement of luminous energy.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (44,577,'VSCP_TYPE_MEASUREMENT_LUMINANCE','**Default unit:** cd / m²) (non SI unit = nit)\n\nThis is a measurement of luminance.\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (45,577,'VSCP_TYPE_MEASUREMENT_CHEMICAL_CONCENTRATION_MOLAR','**Default unit:** mol/m3.\n\nThis is a measurement of chemical mol concentration. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (46,577,'VSCP_TYPE_MEASUREMENT_CHEMICAL_CONCENTRATION_MASS','**Default unit:** kg/m3.\n\nThis is a measurement of chemical mass concentration. ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (47,577,'VSCP_TYPE_MEASUREMENT_DOSE_EQVIVALENT','Reserved\n\n\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (48,577,'VSCP_TYPE_MEASUREMENT_RESERVED48','Reserved \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (49,577,'VSCP_TYPE_MEASUREMENT_DEWPOINT','**Default unit:** Kelvin.  \n**Opt. unit:** Degree Celsius (1), Fahrenheit (2)\n\nThis is a measurement of the Dew Point. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (50,577,'VSCP_TYPE_MEASUREMENT_RELATIVE_LEVEL','**Default unit:** Relative value.\n\nThis is a relative value for a level measurement without a unit. It is just relative to the min/max value for the selected data representation, typically percentage or per mille or similar. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (51,577,'VSCP_TYPE_MEASUREMENT_ALTITUDE','**Default unit:** Meter.  \n**Opt. unit:** Feet(1), inches (2)\n\nAltitude in meters. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (52,577,'VSCP_TYPE_MEASUREMENT_AREA','**Default unit:** square meter (m²)\n\nArea in square meter. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (53,577,'VSCP_TYPE_MEASUREMENT_RADIANT_INTENSITY','**Default unit:** watt per steradian ( W / sr )\n\nRadiated power per room angle. \n\n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (54,577,'VSCP_TYPE_MEASUREMENT_RADIANCE','**Default unit:** watt per steradian per square metre ( W / (sr * m²) )\n\nThis is the radiant flux emitted, reflected, transmitted or received by a surface.\n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (55,577,'VSCP_TYPE_MEASUREMENT_IRRADIANCE','**Default unit:** watt per square metre ( W / m² )\n\nPower emitted from or striking onto a surface or area. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (56,577,'VSCP_TYPE_MEASUREMENT_SPECTRAL_RADIANCE','**Default unit:** watt per steradian per square metre per nm (W·sr-1·m-2·nm-1)    \n**Opt. unit:** watt per steradian per meter3 (W·sr-1·m-3) (1), watt per steradian per square metre per hertz (W·sr-1·m-3) (2)\n\nRadiance of a surface per unit frequency or wavelength.\n\n                        \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (57,577,'VSCP_TYPE_MEASUREMENT_SPECTRAL_IRRADIANCE','**Default unit:** watt per square metre per nm (W·m-2·nm-1)   \n**Opt. unit:** watt per metre3 (W·m-3) (1), watt per square metre per hertz (W·m-2·Hz-1) (2)\n\nIrradiance of a surface per unit frequency or wavelength.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (58,577,'VSCP_TYPE_MEASUREMENT_SOUND_PRESSURE','**Default unit:** pascal (Pa) \n\nThis is a measurement of sound pressure (acoustic pressure). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (59,577,'VSCP_TYPE_MEASUREMENT_SOUND_DENSITY','**Default unit:** pascal (Pa) \n\nSound energy density or sound density is the sound energy per unit volume.\n\n                        ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (60,577,'VSCP_TYPE_MEASUREMENT_SOUND_LEVEL','**Default unit:** decibel (dB) \n\nSound level expressed in decibel. This event is supplied for convenience.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (61,577,'VSCP_TYPE_MEASUREMENT_RADIATION_DOSE_EQ','**Default unit:** sievert (Sv).\n\n**Optional unit** rem (1)\n\nThis is a measurement of a radiation dose (Equivalent dose of ionizing radiation). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (62,577,'VSCP_TYPE_MEASUREMENT_RADIATION_DOSE_EXPOSURE','**Default unit:** coulomb per kilogram (C/kg).   \n**Optional unit:** Röntgen/R (1)\n\nThis is a measurement of a radiation dose (Exposed dose of ionizing radiation). \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,578,'VSCP_TYPE_MEASUREMENTX1_GENERAL','\nThis is a general (custom) event that can be used if no other event is suitable. \n \n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,579,'VSCP_TYPE_MEASUREMENTX2_GENERAL','General Event.\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,580,'VSCP_TYPE_MEASUREMENTX3_GENERAL','General Event.\n\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,581,'VSCP_TYPE_MEASUREMENTX4_GENERAL','General Event.\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,582,'VSCP_TYPE_MEASUREMENT_GENERAL','This is a general (custom) measurement event that can be used if no other event is suitable. \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (1,582,'VSCP_TYPE_MEASUREMENT_COUNT','This is a discrete value typical for a count. There is no unit for this measurement just a discrete value. \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (2,582,'VSCP_TYPE_MEASUREMENT_LENGTH','**Default unit:** Meter. \n\nThis is a measurement of a length or a distance.\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (3,582,'VSCP_TYPE_MEASUREMENT_MASS','**Default unit:** Kilogram.\n\nThis is a measurement of a mass. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (4,582,'VSCP_TYPE_MEASUREMENT_TIME','A time measurement.\n\n**Default unit:** Seconds.  \n**Opt. unit:** (1) Milliseconds. Absolute: (2) y-y-m-d-h-m-s (binary). String: (3) "HHMMSS". \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (5,582,'VSCP_TYPE_MEASUREMENT_ELECTRIC_CURRENT','**Default unit:** Ampere.\n\nThis is a measurement of an electric current. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (6,582,'VSCP_TYPE_MEASUREMENT_TEMPERATURE','**Default unit:** Kelvin.  \n**Opt. unit:** Degree Celsius (1), Fahrenheit (2)\n\nThis is a measurement of a temperature. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (7,582,'VSCP_TYPE_MEASUREMENT_AMOUNT_OF_SUBSTANCE','**Default unit:** Mole.\n\nThis is a measurement of an amount of a substance. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (8,582,'VSCP_TYPE_MEASUREMENT_INTENSITY_OF_LIGHT','**Default unit:** Candela.\n\nThis is a measurement of luminous intensity. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (9,582,'VSCP_TYPE_MEASUREMENT_FREQUENCY','\n**Default unit:** Hertz.\n\nThis is a measurement of regular events during a second. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (10,582,'VSCP_TYPE_MEASUREMENT_RADIOACTIVITY','**Default unit:** becquerel.\n**Optional unit:** curie (1)\n\nThis is a measurement of rates of things, which happen randomly, or are unpredictable. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (11,582,'VSCP_TYPE_MEASUREMENT_FORCE','**Default unit:** newton.\n\nThis is a measurement of force. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (12,582,'VSCP_TYPE_MEASUREMENT_PRESSURE','**Default unit:** pascal.  \n**Opt. unit:** bar (1), psi (2)\n\nThis is a measurement of pressure. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (13,582,'VSCP_TYPE_MEASUREMENT_ENERGY','**Default unit:** Joule.  \n**Optional unit:** KWh (1)\n\nThis is a measurement of energy. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (14,582,'VSCP_TYPE_MEASUREMENT_POWER','**Default unit:** watt.  \n**Optional unit:** Horse power (1).\n\nThis is a measurement of power. \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (15,582,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_CHARGE','**Default unit:** coulomb.\n\nThis is a measurement electrical charge. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (16,582,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_POTENTIAL','**Default unit:** volt.\n\nThis is a measurement of electrical potential. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (17,582,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_CAPACITANCE','**Default unit:** farad (F).\n\nThis is a measurement of electric capacitance.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (18,582,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_RESISTANCE','**Default unit:** ohm (Ω).\n\nThis is a measurement of resistance. \n\n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (19,582,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_CONDUCTANCE','**Default unit:** siemens.\n\nThis is a measurement of electrical conductance. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (20,582,'VSCP_TYPE_MEASUREMENT_MAGNETIC_FIELD_STRENGTH','**Default unit:** amperes per meter (H).  \n**Optional units:** teslas (B) (1)\n\nThis is a measurement of magnetic field strength. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (21,582,'VSCP_TYPE_MEASUREMENT_MAGNETIC_FLUX','**Default unit:** weber (Wb).\n\nThis is a measurement of magnetic flux. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (22,582,'VSCP_TYPE_MEASUREMENT_MAGNETIC_FLUX_DENSITY','**Default unit:** tesla (B).\n\n**Optional unit:** Gauss (1)\n\nThis is a measurement of flux density or field strength for magnetic fields (also called the magnetic induction). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (23,582,'VSCP_TYPE_MEASUREMENT_INDUCTANCE','**Default unit:** henry (H).\n\nThis is a measurement of inductance. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (24,582,'VSCP_TYPE_MEASUREMENT_FLUX_OF_LIGHT','**Default unit:** Lumen (lm= cd * sr)\n\nThis is a measurement of luminous Flux. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (25,582,'VSCP_TYPE_MEASUREMENT_ILLUMINANCE','**Default unit:** lux (lx) ( lx = lm / m² )\n\nThis is used to express both Illuminance (incidence of light) and Luminous Emittance (emission of light). \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (26,582,'VSCP_TYPE_MEASUREMENT_RADIATION_DOSE_ABSORBED','**Default unit:** gray (Gy).   \n\n\nThis is a measurement of a radiation dose (Absorbed dose of ionizing radiation). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (27,582,'VSCP_TYPE_MEASUREMENT_CATALYTIC_ACITIVITY','**Default unit:** katal (kat).\n\nThis is a measurement of catalytic activity used in biochemistry. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (28,582,'VSCP_TYPE_MEASUREMENT_VOLUME','**Default unit:** cubic meter (m³)   \n**Opt. unit:** Liter (dm³) (1), decilitre (100 cm³) (2), centilitre (10 cm³) (3), millilitre (cm³) (4) where unit 4 is only available for Level II measurement events where units can hold this value.\n\nThis is a measurement of volume. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (29,582,'VSCP_TYPE_MEASUREMENT_SOUND_INTENSITY','**Default unit:** W/m2, watt per square meter. \n\nThis is a measurement of sound intensity (acoustic intensity). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (30,582,'VSCP_TYPE_MEASUREMENT_ANGLE','* **Default unit:** radian (rad) (Plane angles).   \n* **Opt Unit:** degree (1).\n* **Opt Unit:** arcminute (2).\n* **Opt Unit:** arcseconds (3).\n\nThis is a measurement of an angle. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (31,582,'VSCP_TYPE_MEASUREMENT_POSITION','**Default unit:** Longitude.  \n**Opt. unit:** Latitude.\n\nThis is a (decimal) measurement of a position as of WGS 84. Normally given as a floating point value. See [./class1.gps.md](CLASS1.GPS) for a better candidate to use for position data.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (32,582,'VSCP_TYPE_MEASUREMENT_SPEED','**Default unit:** Meters per second.   \n**Optional unit:** Kilometers per hour (1) Miles per hour (2)\n\nThis is a measurement of a speed. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (33,582,'VSCP_TYPE_MEASUREMENT_ACCELERATION','**Default unit:** Meters per second/second (m/s2).\n\nThis is a measurement of acceleration. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (34,582,'VSCP_TYPE_MEASUREMENT_TENSION','**Default unit:** N/m.\n\nThis is a measurement of tension. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (35,582,'VSCP_TYPE_MEASUREMENT_HUMIDITY','**Default unit:** Relative percentage 0-100%.\n\nThis is a measurement of relative moistness (Humidity). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (36,582,'VSCP_TYPE_MEASUREMENT_FLOW','**Default unit:** Cubic meters/second.   \n**Opt Unit:** Liters/Second.\n\nThis is a measurement of flow. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (37,582,'VSCP_TYPE_MEASUREMENT_THERMAL_RESISTANCE','**Default unit:** Thermal ohm K/W.\n\nThis is a measurement of thermal resistance. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (38,582,'VSCP_TYPE_MEASUREMENT_REFRACTIVE_POWER','**Default unit:** dioptre (dpt) m-1.\n\nThis is a measurement of refractive (optical) power. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (39,582,'VSCP_TYPE_MEASUREMENT_DYNAMIC_VISCOSITY','**Default unit:**  pascal second\n**optional units** poiseuille (Pl) = 1, poise (P) = 2\n\nThis is a measurement of dynamic viscosity. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (40,582,'VSCP_TYPE_MEASUREMENT_SOUND_IMPEDANCE','**Default unit:** rayl (Pa·s/m)\n\nThis is a measurement of sound impedance. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (41,582,'VSCP_TYPE_MEASUREMENT_SOUND_RESISTANCE','**Default unit:** Acoustic ohm Pa · s/ m³.\n\nThis is a measurement of sound resistance.\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (42,582,'VSCP_TYPE_MEASUREMENT_ELECTRIC_ELASTANCE','**Default unit:** daraf (f-1).\n\nThis is a measurement of electric elasticity. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (43,582,'VSCP_TYPE_MEASUREMENT_LUMINOUS_ENERGY','**Default unit:** talbot ( tb = lm * s) \n\nThis is a measurement of luminous energy.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (44,582,'VSCP_TYPE_MEASUREMENT_LUMINANCE','**Default unit:** cd / m²) (non SI unit = nit)\n\nThis is a measurement of luminance.\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (45,582,'VSCP_TYPE_MEASUREMENT_CHEMICAL_CONCENTRATION_MOLAR','**Default unit:** mol/m3.\n\nThis is a measurement of chemical mol concentration. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (46,582,'VSCP_TYPE_MEASUREMENT_CHEMICAL_CONCENTRATION_MASS','**Default unit:** kg/m3.\n\nThis is a measurement of chemical mass concentration. ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (47,582,'VSCP_TYPE_MEASUREMENT_DOSE_EQVIVALENT','Reserved\n\n\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (48,582,'VSCP_TYPE_MEASUREMENT_RESERVED48','Reserved \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (49,582,'VSCP_TYPE_MEASUREMENT_DEWPOINT','**Default unit:** Kelvin.  \n**Opt. unit:** Degree Celsius (1), Fahrenheit (2)\n\nThis is a measurement of the Dew Point. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (50,582,'VSCP_TYPE_MEASUREMENT_RELATIVE_LEVEL','**Default unit:** Relative value.\n\nThis is a relative value for a level measurement without a unit. It is just relative to the min/max value for the selected data representation, typically percentage or per mille or similar. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (51,582,'VSCP_TYPE_MEASUREMENT_ALTITUDE','**Default unit:** Meter.  \n**Opt. unit:** Feet(1), inches (2)\n\nAltitude in meters. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (52,582,'VSCP_TYPE_MEASUREMENT_AREA','**Default unit:** square meter (m²)\n\nArea in square meter. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (53,582,'VSCP_TYPE_MEASUREMENT_RADIANT_INTENSITY','**Default unit:** watt per steradian ( W / sr )\n\nRadiated power per room angle. \n\n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (54,582,'VSCP_TYPE_MEASUREMENT_RADIANCE','**Default unit:** watt per steradian per square metre ( W / (sr * m²) )\n\nThis is the radiant flux emitted, reflected, transmitted or received by a surface.\n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (55,582,'VSCP_TYPE_MEASUREMENT_IRRADIANCE','**Default unit:** watt per square metre ( W / m² )\n\nPower emitted from or striking onto a surface or area. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (56,582,'VSCP_TYPE_MEASUREMENT_SPECTRAL_RADIANCE','**Default unit:** watt per steradian per square metre per nm (W·sr-1·m-2·nm-1)    \n**Opt. unit:** watt per steradian per meter3 (W·sr-1·m-3) (1), watt per steradian per square metre per hertz (W·sr-1·m-3) (2)\n\nRadiance of a surface per unit frequency or wavelength.\n\n                        \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (57,582,'VSCP_TYPE_MEASUREMENT_SPECTRAL_IRRADIANCE','**Default unit:** watt per square metre per nm (W·m-2·nm-1)   \n**Opt. unit:** watt per metre3 (W·m-3) (1), watt per square metre per hertz (W·m-2·Hz-1) (2)\n\nIrradiance of a surface per unit frequency or wavelength.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (58,582,'VSCP_TYPE_MEASUREMENT_SOUND_PRESSURE','**Default unit:** pascal (Pa) \n\nThis is a measurement of sound pressure (acoustic pressure). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (59,582,'VSCP_TYPE_MEASUREMENT_SOUND_DENSITY','**Default unit:** pascal (Pa) \n\nSound energy density or sound density is the sound energy per unit volume.\n\n                        ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (60,582,'VSCP_TYPE_MEASUREMENT_SOUND_LEVEL','**Default unit:** decibel (dB) \n\nSound level expressed in decibel. This event is supplied for convenience.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (61,582,'VSCP_TYPE_MEASUREMENT_RADIATION_DOSE_EQ','**Default unit:** sievert (Sv).\n\n**Optional unit** rem (1)\n\nThis is a measurement of a radiation dose (Equivalent dose of ionizing radiation). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (62,582,'VSCP_TYPE_MEASUREMENT_RADIATION_DOSE_EXPOSURE','**Default unit:** coulomb per kilogram (C/kg).   \n**Optional unit:** Röntgen/R (1)\n\nThis is a measurement of a radiation dose (Exposed dose of ionizing radiation). \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,583,'VSCP_TYPE_MEASUREMENTX1_GENERAL','\nThis is a general (custom) event that can be used if no other event is suitable. \n \n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,584,'VSCP_TYPE_MEASUREMENTX2_GENERAL','General Event.\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,585,'VSCP_TYPE_MEASUREMENTX3_GENERAL','General Event.\n\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,586,'VSCP_TYPE_MEASUREMENTX4_GENERAL','General Event.\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,597,'VSCP_TYPE_MEASUREMENT_GENERAL','This is a general (custom) measurement event that can be used if no other event is suitable. \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (1,597,'VSCP_TYPE_MEASUREMENT_COUNT','This is a discrete value typical for a count. There is no unit for this measurement just a discrete value. \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (2,597,'VSCP_TYPE_MEASUREMENT_LENGTH','**Default unit:** Meter. \n\nThis is a measurement of a length or a distance.\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (3,597,'VSCP_TYPE_MEASUREMENT_MASS','**Default unit:** Kilogram.\n\nThis is a measurement of a mass. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (4,597,'VSCP_TYPE_MEASUREMENT_TIME','A time measurement.\n\n**Default unit:** Seconds.  \n**Opt. unit:** (1) Milliseconds. Absolute: (2) y-y-m-d-h-m-s (binary). String: (3) "HHMMSS". \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (5,597,'VSCP_TYPE_MEASUREMENT_ELECTRIC_CURRENT','**Default unit:** Ampere.\n\nThis is a measurement of an electric current. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (6,597,'VSCP_TYPE_MEASUREMENT_TEMPERATURE','**Default unit:** Kelvin.  \n**Opt. unit:** Degree Celsius (1), Fahrenheit (2)\n\nThis is a measurement of a temperature. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (7,597,'VSCP_TYPE_MEASUREMENT_AMOUNT_OF_SUBSTANCE','**Default unit:** Mole.\n\nThis is a measurement of an amount of a substance. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (8,597,'VSCP_TYPE_MEASUREMENT_INTENSITY_OF_LIGHT','**Default unit:** Candela.\n\nThis is a measurement of luminous intensity. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (9,597,'VSCP_TYPE_MEASUREMENT_FREQUENCY','\n**Default unit:** Hertz.\n\nThis is a measurement of regular events during a second. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (10,597,'VSCP_TYPE_MEASUREMENT_RADIOACTIVITY','**Default unit:** becquerel.\n**Optional unit:** curie (1)\n\nThis is a measurement of rates of things, which happen randomly, or are unpredictable. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (11,597,'VSCP_TYPE_MEASUREMENT_FORCE','**Default unit:** newton.\n\nThis is a measurement of force. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (12,597,'VSCP_TYPE_MEASUREMENT_PRESSURE','**Default unit:** pascal.  \n**Opt. unit:** bar (1), psi (2)\n\nThis is a measurement of pressure. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (13,597,'VSCP_TYPE_MEASUREMENT_ENERGY','**Default unit:** Joule.  \n**Optional unit:** KWh (1)\n\nThis is a measurement of energy. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (14,597,'VSCP_TYPE_MEASUREMENT_POWER','**Default unit:** watt.  \n**Optional unit:** Horse power (1).\n\nThis is a measurement of power. \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (15,597,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_CHARGE','**Default unit:** coulomb.\n\nThis is a measurement electrical charge. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (16,597,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_POTENTIAL','**Default unit:** volt.\n\nThis is a measurement of electrical potential. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (17,597,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_CAPACITANCE','**Default unit:** farad (F).\n\nThis is a measurement of electric capacitance.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (18,597,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_RESISTANCE','**Default unit:** ohm (Ω).\n\nThis is a measurement of resistance. \n\n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (19,597,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_CONDUCTANCE','**Default unit:** siemens.\n\nThis is a measurement of electrical conductance. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (20,597,'VSCP_TYPE_MEASUREMENT_MAGNETIC_FIELD_STRENGTH','**Default unit:** amperes per meter (H).  \n**Optional units:** teslas (B) (1)\n\nThis is a measurement of magnetic field strength. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (21,597,'VSCP_TYPE_MEASUREMENT_MAGNETIC_FLUX','**Default unit:** weber (Wb).\n\nThis is a measurement of magnetic flux. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (22,597,'VSCP_TYPE_MEASUREMENT_MAGNETIC_FLUX_DENSITY','**Default unit:** tesla (B).\n\n**Optional unit:** Gauss (1)\n\nThis is a measurement of flux density or field strength for magnetic fields (also called the magnetic induction). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (23,597,'VSCP_TYPE_MEASUREMENT_INDUCTANCE','**Default unit:** henry (H).\n\nThis is a measurement of inductance. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (24,597,'VSCP_TYPE_MEASUREMENT_FLUX_OF_LIGHT','**Default unit:** Lumen (lm= cd * sr)\n\nThis is a measurement of luminous Flux. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (25,597,'VSCP_TYPE_MEASUREMENT_ILLUMINANCE','**Default unit:** lux (lx) ( lx = lm / m² )\n\nThis is used to express both Illuminance (incidence of light) and Luminous Emittance (emission of light). \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (26,597,'VSCP_TYPE_MEASUREMENT_RADIATION_DOSE_ABSORBED','**Default unit:** gray (Gy).   \n\n\nThis is a measurement of a radiation dose (Absorbed dose of ionizing radiation). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (27,597,'VSCP_TYPE_MEASUREMENT_CATALYTIC_ACITIVITY','**Default unit:** katal (kat).\n\nThis is a measurement of catalytic activity used in biochemistry. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (28,597,'VSCP_TYPE_MEASUREMENT_VOLUME','**Default unit:** cubic meter (m³)   \n**Opt. unit:** Liter (dm³) (1), decilitre (100 cm³) (2), centilitre (10 cm³) (3), millilitre (cm³) (4) where unit 4 is only available for Level II measurement events where units can hold this value.\n\nThis is a measurement of volume. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (29,597,'VSCP_TYPE_MEASUREMENT_SOUND_INTENSITY','**Default unit:** W/m2, watt per square meter. \n\nThis is a measurement of sound intensity (acoustic intensity). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (30,597,'VSCP_TYPE_MEASUREMENT_ANGLE','* **Default unit:** radian (rad) (Plane angles).   \n* **Opt Unit:** degree (1).\n* **Opt Unit:** arcminute (2).\n* **Opt Unit:** arcseconds (3).\n\nThis is a measurement of an angle. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (31,597,'VSCP_TYPE_MEASUREMENT_POSITION','**Default unit:** Longitude.  \n**Opt. unit:** Latitude.\n\nThis is a (decimal) measurement of a position as of WGS 84. Normally given as a floating point value. See [./class1.gps.md](CLASS1.GPS) for a better candidate to use for position data.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (32,597,'VSCP_TYPE_MEASUREMENT_SPEED','**Default unit:** Meters per second.   \n**Optional unit:** Kilometers per hour (1) Miles per hour (2)\n\nThis is a measurement of a speed. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (33,597,'VSCP_TYPE_MEASUREMENT_ACCELERATION','**Default unit:** Meters per second/second (m/s2).\n\nThis is a measurement of acceleration. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (34,597,'VSCP_TYPE_MEASUREMENT_TENSION','**Default unit:** N/m.\n\nThis is a measurement of tension. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (35,597,'VSCP_TYPE_MEASUREMENT_HUMIDITY','**Default unit:** Relative percentage 0-100%.\n\nThis is a measurement of relative moistness (Humidity). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (36,597,'VSCP_TYPE_MEASUREMENT_FLOW','**Default unit:** Cubic meters/second.   \n**Opt Unit:** Liters/Second.\n\nThis is a measurement of flow. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (37,597,'VSCP_TYPE_MEASUREMENT_THERMAL_RESISTANCE','**Default unit:** Thermal ohm K/W.\n\nThis is a measurement of thermal resistance. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (38,597,'VSCP_TYPE_MEASUREMENT_REFRACTIVE_POWER','**Default unit:** dioptre (dpt) m-1.\n\nThis is a measurement of refractive (optical) power. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (39,597,'VSCP_TYPE_MEASUREMENT_DYNAMIC_VISCOSITY','**Default unit:**  pascal second\n**optional units** poiseuille (Pl) = 1, poise (P) = 2\n\nThis is a measurement of dynamic viscosity. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (40,597,'VSCP_TYPE_MEASUREMENT_SOUND_IMPEDANCE','**Default unit:** rayl (Pa·s/m)\n\nThis is a measurement of sound impedance. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (41,597,'VSCP_TYPE_MEASUREMENT_SOUND_RESISTANCE','**Default unit:** Acoustic ohm Pa · s/ m³.\n\nThis is a measurement of sound resistance.\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (42,597,'VSCP_TYPE_MEASUREMENT_ELECTRIC_ELASTANCE','**Default unit:** daraf (f-1).\n\nThis is a measurement of electric elasticity. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (43,597,'VSCP_TYPE_MEASUREMENT_LUMINOUS_ENERGY','**Default unit:** talbot ( tb = lm * s) \n\nThis is a measurement of luminous energy.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (44,597,'VSCP_TYPE_MEASUREMENT_LUMINANCE','**Default unit:** cd / m²) (non SI unit = nit)\n\nThis is a measurement of luminance.\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (45,597,'VSCP_TYPE_MEASUREMENT_CHEMICAL_CONCENTRATION_MOLAR','**Default unit:** mol/m3.\n\nThis is a measurement of chemical mol concentration. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (46,597,'VSCP_TYPE_MEASUREMENT_CHEMICAL_CONCENTRATION_MASS','**Default unit:** kg/m3.\n\nThis is a measurement of chemical mass concentration. ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (47,597,'VSCP_TYPE_MEASUREMENT_DOSE_EQVIVALENT','Reserved\n\n\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (48,597,'VSCP_TYPE_MEASUREMENT_RESERVED48','Reserved \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (49,597,'VSCP_TYPE_MEASUREMENT_DEWPOINT','**Default unit:** Kelvin.  \n**Opt. unit:** Degree Celsius (1), Fahrenheit (2)\n\nThis is a measurement of the Dew Point. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (50,597,'VSCP_TYPE_MEASUREMENT_RELATIVE_LEVEL','**Default unit:** Relative value.\n\nThis is a relative value for a level measurement without a unit. It is just relative to the min/max value for the selected data representation, typically percentage or per mille or similar. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (51,597,'VSCP_TYPE_MEASUREMENT_ALTITUDE','**Default unit:** Meter.  \n**Opt. unit:** Feet(1), inches (2)\n\nAltitude in meters. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (52,597,'VSCP_TYPE_MEASUREMENT_AREA','**Default unit:** square meter (m²)\n\nArea in square meter. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (53,597,'VSCP_TYPE_MEASUREMENT_RADIANT_INTENSITY','**Default unit:** watt per steradian ( W / sr )\n\nRadiated power per room angle. \n\n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (54,597,'VSCP_TYPE_MEASUREMENT_RADIANCE','**Default unit:** watt per steradian per square metre ( W / (sr * m²) )\n\nThis is the radiant flux emitted, reflected, transmitted or received by a surface.\n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (55,597,'VSCP_TYPE_MEASUREMENT_IRRADIANCE','**Default unit:** watt per square metre ( W / m² )\n\nPower emitted from or striking onto a surface or area. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (56,597,'VSCP_TYPE_MEASUREMENT_SPECTRAL_RADIANCE','**Default unit:** watt per steradian per square metre per nm (W·sr-1·m-2·nm-1)    \n**Opt. unit:** watt per steradian per meter3 (W·sr-1·m-3) (1), watt per steradian per square metre per hertz (W·sr-1·m-3) (2)\n\nRadiance of a surface per unit frequency or wavelength.\n\n                        \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (57,597,'VSCP_TYPE_MEASUREMENT_SPECTRAL_IRRADIANCE','**Default unit:** watt per square metre per nm (W·m-2·nm-1)   \n**Opt. unit:** watt per metre3 (W·m-3) (1), watt per square metre per hertz (W·m-2·Hz-1) (2)\n\nIrradiance of a surface per unit frequency or wavelength.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (58,597,'VSCP_TYPE_MEASUREMENT_SOUND_PRESSURE','**Default unit:** pascal (Pa) \n\nThis is a measurement of sound pressure (acoustic pressure). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (59,597,'VSCP_TYPE_MEASUREMENT_SOUND_DENSITY','**Default unit:** pascal (Pa) \n\nSound energy density or sound density is the sound energy per unit volume.\n\n                        ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (60,597,'VSCP_TYPE_MEASUREMENT_SOUND_LEVEL','**Default unit:** decibel (dB) \n\nSound level expressed in decibel. This event is supplied for convenience.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (61,597,'VSCP_TYPE_MEASUREMENT_RADIATION_DOSE_EQ','**Default unit:** sievert (Sv).\n\n**Optional unit** rem (1)\n\nThis is a measurement of a radiation dose (Equivalent dose of ionizing radiation). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (62,597,'VSCP_TYPE_MEASUREMENT_RADIATION_DOSE_EXPOSURE','**Default unit:** coulomb per kilogram (C/kg).   \n**Optional unit:** Röntgen/R (1)\n\nThis is a measurement of a radiation dose (Exposed dose of ionizing radiation). \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,598,'VSCP_TYPE_MEASUREMENTX1_GENERAL','\nThis is a general (custom) event that can be used if no other event is suitable. \n \n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,599,'VSCP_TYPE_MEASUREMENTX2_GENERAL','General Event.\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,600,'VSCP_TYPE_MEASUREMENTX3_GENERAL','General Event.\n\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,601,'VSCP_TYPE_MEASUREMENTX4_GENERAL','General Event.\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,602,'VSCP_TYPE_WEATHER_GENERAL','General Event.');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (1,602,'VSCP_TYPE_WEATHER_SEASONS_WINTER','The winter season has started.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (2,602,'VSCP_TYPE_WEATHER_SEASONS_SPRING','The spring season has started.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (3,602,'VSCP_TYPE_WEATHER_SEASONS_SUMMER','The summer season has started.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (4,602,'VSCP_TYPE_WEATHER_SEASONS_AUTUMN','The autumn season has started.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (5,602,'VSCP_TYPE_WEATHER_WIND_NONE','No wind\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (6,602,'VSCP_TYPE_WEATHER_WIND_LOW','Low wind speed conditions.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (7,602,'VSCP_TYPE_WEATHER_WIND_MEDIUM','Medium wind speed conditions.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (8,602,'VSCP_TYPE_WEATHER_WIND_HIGH','High wind speed conditions.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (9,602,'VSCP_TYPE_WEATHER_WIND_VERY_HIGH','Very high wind speed conditions.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (10,602,'VSCP_TYPE_WEATHER_AIR_FOGGY','Fogg.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (11,602,'VSCP_TYPE_WEATHER_AIR_FREEZING','Freezing.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (12,602,'VSCP_TYPE_WEATHER_AIR_VERY_COLD','Cold\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (13,602,'VSCP_TYPE_WEATHER_AIR_COLD','Very cold\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (14,602,'VSCP_TYPE_WEATHER_AIR_NORMAL','Air normal\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (15,602,'VSCP_TYPE_WEATHER_AIR_HOT','Air hot\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (16,602,'VSCP_TYPE_WEATHER_AIR_VERY_HOT','Air very hot\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (17,602,'VSCP_TYPE_WEATHER_AIR_POLLUTION_LOW','Pollution low\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (18,602,'VSCP_TYPE_WEATHER_AIR_POLLUTION_MEDIUM','Pollution medium\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (19,602,'VSCP_TYPE_WEATHER_AIR_POLLUTION_HIGH','Pollution high\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (20,602,'VSCP_TYPE_WEATHER_AIR_HUMID','Air humid\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (21,602,'VSCP_TYPE_WEATHER_AIR_DRY','Air dry\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (22,602,'VSCP_TYPE_WEATHER_SOIL_HUMID','soil humid\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (23,602,'VSCP_TYPE_WEATHER_SOIL_DRY','soil dry\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (24,602,'VSCP_TYPE_WEATHER_RAIN_NONE','Rain none\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (25,602,'VSCP_TYPE_WEATHER_RAIN_LIGHT','Rain light\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (26,602,'VSCP_TYPE_WEATHER_RAIN_HEAVY','Rain heavy\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (27,602,'VSCP_TYPE_WEATHER_RAIN_VERY_HEAVY','Rain very heavy\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (28,602,'VSCP_TYPE_WEATHER_SUN_NONE','Sun none\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (29,602,'VSCP_TYPE_WEATHER_SUN_LIGHT','Sun light\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (30,602,'VSCP_TYPE_WEATHER_SUN_HEAVY','Sun heavy\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (31,602,'VSCP_TYPE_WEATHER_SNOW_NONE','Snow none.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (32,602,'VSCP_TYPE_WEATHER_SNOW_LIGHT','Snow light.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (33,602,'VSCP_TYPE_WEATHER_SNOW_HEAVY','Snow heavy.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (34,602,'VSCP_TYPE_WEATHER_DEW_POINT','Dew point.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (35,602,'VSCP_TYPE_WEATHER_STORM','Storm.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (36,602,'VSCP_TYPE_WEATHER_FLOOD','Flood.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (37,602,'VSCP_TYPE_WEATHER_EARTHQUAKE','Earthquake\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (38,602,'VSCP_TYPE_WEATHER_NUCLEAR_DISASTER','Nuclera disaster\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (39,602,'VSCP_TYPE_WEATHER_FIRE','Fire.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (40,602,'VSCP_TYPE_WEATHER_LIGHTNING','Lightning.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (41,602,'VSCP_TYPE_WEATHER_UV_RADIATION_LOW','Radiation low.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (42,602,'VSCP_TYPE_WEATHER_UV_RADIATION_MEDIUM','Radiation medium.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (43,602,'VSCP_TYPE_WEATHER_UV_RADIATION_NORMAL','Radiation normal.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (44,602,'VSCP_TYPE_WEATHER_UV_RADIATION_HIGH','Radiation high.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (45,602,'VSCP_TYPE_WEATHER_UV_RADIATION_VERY_HIGH','Radiation very high.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (46,602,'VSCP_TYPE_WEATHER_WARNING_LEVEL1','Warning level 1. This is the lowest varning level.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (47,602,'VSCP_TYPE_WEATHER_WARNING_LEVEL2','Warninglevel 2.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (48,602,'VSCP_TYPE_WEATHER_WARNING_LEVEL3','Warninglevel 3.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (49,602,'VSCP_TYPE_WEATHER_WARNING_LEVEL4','Warning level 4.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (50,602,'VSCP_TYPE_WEATHER_WARNING_LEVEL5','Warning level 5. This is the highest warning level.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (51,602,'VSCP_TYPE_WEATHER_ARMAGEDON','The final warning level not seen by humans.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (52,602,'VSCP_TYPE_WEATHER_UV_INDEX','\nUV Index is an international scale for UV intensity which can have the range of 1-15 where 1 is very low radiation and a value over 10 is extremely high radiation.\n\n | Data byte | Description                         |\n | :-------: | ----------------------------------- |\n | 0    | Index.                                                             |\n | 1    | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |\n | 3    | UV index (0-15)                        |\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,607,'VSCP_TYPE_WEATHER_GENERAL','General Event.');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (1,607,'VSCP_TYPE_WEATHER_SEASONS_WINTER','The winter season has started.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (2,607,'VSCP_TYPE_WEATHER_SEASONS_SPRING','The spring season has started.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (3,607,'VSCP_TYPE_WEATHER_SEASONS_SUMMER','The summer season has started.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (4,607,'VSCP_TYPE_WEATHER_SEASONS_AUTUMN','The autumn season has started.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (5,607,'VSCP_TYPE_WEATHER_WIND_NONE','No wind\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (6,607,'VSCP_TYPE_WEATHER_WIND_LOW','Low wind speed conditions.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (7,607,'VSCP_TYPE_WEATHER_WIND_MEDIUM','Medium wind speed conditions.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (8,607,'VSCP_TYPE_WEATHER_WIND_HIGH','High wind speed conditions.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (9,607,'VSCP_TYPE_WEATHER_WIND_VERY_HIGH','Very high wind speed conditions.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (10,607,'VSCP_TYPE_WEATHER_AIR_FOGGY','Fogg.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (11,607,'VSCP_TYPE_WEATHER_AIR_FREEZING','Freezing.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (12,607,'VSCP_TYPE_WEATHER_AIR_VERY_COLD','Cold\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (13,607,'VSCP_TYPE_WEATHER_AIR_COLD','Very cold\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (14,607,'VSCP_TYPE_WEATHER_AIR_NORMAL','Air normal\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (15,607,'VSCP_TYPE_WEATHER_AIR_HOT','Air hot\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (16,607,'VSCP_TYPE_WEATHER_AIR_VERY_HOT','Air very hot\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (17,607,'VSCP_TYPE_WEATHER_AIR_POLLUTION_LOW','Pollution low\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (18,607,'VSCP_TYPE_WEATHER_AIR_POLLUTION_MEDIUM','Pollution medium\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (19,607,'VSCP_TYPE_WEATHER_AIR_POLLUTION_HIGH','Pollution high\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (20,607,'VSCP_TYPE_WEATHER_AIR_HUMID','Air humid\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (21,607,'VSCP_TYPE_WEATHER_AIR_DRY','Air dry\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (22,607,'VSCP_TYPE_WEATHER_SOIL_HUMID','soil humid\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (23,607,'VSCP_TYPE_WEATHER_SOIL_DRY','soil dry\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (24,607,'VSCP_TYPE_WEATHER_RAIN_NONE','Rain none\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (25,607,'VSCP_TYPE_WEATHER_RAIN_LIGHT','Rain light\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (26,607,'VSCP_TYPE_WEATHER_RAIN_HEAVY','Rain heavy\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (27,607,'VSCP_TYPE_WEATHER_RAIN_VERY_HEAVY','Rain very heavy\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (28,607,'VSCP_TYPE_WEATHER_SUN_NONE','Sun none\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (29,607,'VSCP_TYPE_WEATHER_SUN_LIGHT','Sun light\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (30,607,'VSCP_TYPE_WEATHER_SUN_HEAVY','Sun heavy\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (31,607,'VSCP_TYPE_WEATHER_SNOW_NONE','Snow none.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (32,607,'VSCP_TYPE_WEATHER_SNOW_LIGHT','Snow light.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (33,607,'VSCP_TYPE_WEATHER_SNOW_HEAVY','Snow heavy.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (34,607,'VSCP_TYPE_WEATHER_DEW_POINT','Dew point.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (35,607,'VSCP_TYPE_WEATHER_STORM','Storm.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (36,607,'VSCP_TYPE_WEATHER_FLOOD','Flood.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (37,607,'VSCP_TYPE_WEATHER_EARTHQUAKE','Earthquake\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (38,607,'VSCP_TYPE_WEATHER_NUCLEAR_DISASTER','Nuclera disaster\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (39,607,'VSCP_TYPE_WEATHER_FIRE','Fire.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (40,607,'VSCP_TYPE_WEATHER_LIGHTNING','Lightning.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (41,607,'VSCP_TYPE_WEATHER_UV_RADIATION_LOW','Radiation low.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (42,607,'VSCP_TYPE_WEATHER_UV_RADIATION_MEDIUM','Radiation medium.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (43,607,'VSCP_TYPE_WEATHER_UV_RADIATION_NORMAL','Radiation normal.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (44,607,'VSCP_TYPE_WEATHER_UV_RADIATION_HIGH','Radiation high.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (45,607,'VSCP_TYPE_WEATHER_UV_RADIATION_VERY_HIGH','Radiation very high.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (46,607,'VSCP_TYPE_WEATHER_WARNING_LEVEL1','Warning level 1. This is the lowest varning level.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (47,607,'VSCP_TYPE_WEATHER_WARNING_LEVEL2','Warninglevel 2.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (48,607,'VSCP_TYPE_WEATHER_WARNING_LEVEL3','Warninglevel 3.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (49,607,'VSCP_TYPE_WEATHER_WARNING_LEVEL4','Warning level 4.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (50,607,'VSCP_TYPE_WEATHER_WARNING_LEVEL5','Warning level 5. This is the highest warning level.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (51,607,'VSCP_TYPE_WEATHER_ARMAGEDON','The final warning level not seen by humans.\n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (52,607,'VSCP_TYPE_WEATHER_UV_INDEX','\nUV Index is an international scale for UV intensity which can have the range of 1-15 where 1 is very low radiation and a value over 10 is extremely high radiation.\n\n | Data byte | Description                         |\n | :-------: | ----------------------------------- |\n | 0    | Index.                                                             |\n | 1    | Zone for which event applies to (0-255). 255 is all zones.         |\n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. |\n | 3    | UV index (0-15)                        |\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,612,'VSCP_TYPE_PHONE_GENERAL','General Event.');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (1,612,'VSCP_TYPE_PHONE_INCOMING_CALL','There is an incoming phone call. Usually a caller ID node just sends out numerical information. A database event can follow (later) that contains the real text information.\n\nPhone calls are reported in the following form\n\n    from,to\n\nwhere from is the originating number and to is the receiving phone. Numbers is preferable presented in an international form. So a call from England to a Swedish phone should take the following form\n\n    44-123-1122334,46-657-413430\n\nwhich is sent in tree frames. Some device can''t separate country and area-code and therefore the form\n\n    441231122334,46657413430\n\nwill also be valid.\n\na database connected application can later resolve this and present\n\n    A customer,Eurosource\n\nThis is the type=8 event, database info, (see below). Note that the comma cant be used in the descriptive names.\n\nCalls from unlisted numbers are presented as\n\n    ,to \n\n | Byte | Description | \n | :----: | ----------- | \n | 0    | Id for the call. This is an incremental identity number for each call. | \n | 1    | Index of phone event (base = 0). Each call can be broken up into fragments. This is the fragment number. | \n | 2    | Total number of events (fragments) for this call information. | \n | 3-7  | Caller information. Number or real text information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (2,612,'VSCP_TYPE_PHONE_OUTGOING_CALL','There is an outgoing phone call. \n\n | Byte | Description | \n | :----: | ----------- | \n | 0    | Id for the call. This is an incremental ID number for each call. |\n | 1    | Index of phone event (base = 0). Each call can be broken up into fragments. This is the fragment number. | \n | 2    | Total number of events (fragments) for this call information. | \n | 3-7  | Caller information. Number or real text information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (3,612,'VSCP_TYPE_PHONE_RING','This is a event indicating that there is a “ring” for this call. \n\n | Byte | Description | \n | :----: | ----------- | \n | 0    | An ID for the call. This can for instance be a number that increases by one for each call. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (4,612,'VSCP_TYPE_PHONE_ANSWER','The call has been answered. \n\n | Byte | Description | \n | :----: | ----------- | \n | 0    | An ID for the call. This can for instance be a number that increases by one for each call. | \n | 1    | Zone for answer location. | \n | 2    | Sub-zone for answer location. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (5,612,'VSCP_TYPE_PHONE_HANGUP','The call has been terminated by the receiving end. \n\n | Byte | Description | \n | :----: | ----------- | \n | 0 | An ID for the call. This can for instance be a number that increases by one for each call. | \n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (6,612,'VSCP_TYPE_PHONE_GIVEUP','The call has been terminated by the originating end. byte \n\n| Byte | Description | \n | :----: | ----------- | \n | 0 | An ID for the call. This can for instance be a number that increases by one for each call. | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (7,612,'VSCP_TYPE_PHONE_TRANSFER','The call has been transferred. byte \n\n | Byte | Description | \n | :----: | ----------- | \n | 0 | An ID for the call. This can for instance be a number that increases by one for each call. | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (8,612,'VSCP_TYPE_PHONE_DATABASE_INFO',' Call database info.\n \n | Byte | Description | \n | :----: | ----------- | \n | 0   | Id for the call. This is a number that is increased by one for each call. In this case the number is the same as for the incoming or outgoing events. | \n | 1   | Index of phone event (base=0). Each call can be broken up into fragments. This is the fragment number. | \n | 2   | Total number of events (fragments) for this call information. | \n | 3-7 | Caller information. Real text information.  | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,614,'VSCP_TYPE_DISPLAY_GENERAL','General Event.');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (1,614,'VSCP_TYPE_DISPLAY_CLEAR_DISPLAY','Clear the display on displays in a certain zone,sub-zone. \n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Code - not yet defined.                                            | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (2,614,'VSCP_TYPE_DISPLAY_POSITION_CURSOR','Move the cursor to a specific position on displays in a certain zone,sub-zone. \n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index.                                                             | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n | 3    | Row to move to (first row is 0).                                   | \n | 4    | Column to move to (first column is 0).                             | \n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (3,614,'VSCP_TYPE_DISPLAY_WRITE_DISPLAY','Write to display(s) in a certain zone,sub-zone. The update of the display is immediate. \n\n | Byte | Description                                                               | \n | :----: | -----------                                                               | \n | 0    | index - Increase by one for each event sent for specific text to display. | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.                | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones.        | \n | 3-7  | Display data.                                                             | \n\nIndex is increased by one for each event that builds up a specific event. If needed an empty (no data) can be sent as the last event else sending data to fill the display buffer will give the end automatically. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (4,614,'VSCP_TYPE_DISPLAY_WRITE_DISPLAY_BUFFER','Write to the buffers of displays in a certain zone,sub-zone. The update of the display is is not done right away but is instead done when the Show Buffer event is received by the display unit. \n\n | Byte | Description                                                               | \n | :----: | -----------                                                               | \n | 0    | index - Increase by one for each event sent for specific text to display. | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.                | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones.        | \n | 3-7  | Display data.                                                             | \n\nIndex is increased by one for each event that builds up a specific event. If needed an empty (no data) can be sent as the last event else sending data to fill the display buffer will give the end automatically.\n\nMany LCD displays allow definition of special characters. Use this event to define custom matrices buy defining a sub-zone for the user defined matrix(es). \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (5,614,'VSCP_TYPE_DISPLAY_SHOW_DISPLAY_BUFFER','Tells displays in a certain zone,sub-zone to display the content in their display buffers. The update of the display is immediate. \n\n | Byte | Description                                                               | \n | :----: | -----------                                                               | \n | 0    | index - Increase by one for each event sent for specific text to display. | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.                | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones.        | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (6,614,'VSCP_TYPE_DISPLAY_SET_DISPLAY_BUFFER_PARAM','With this call a display buffer parameter can be sent to a display. This parameter is inserted at the escape position %pn in the string in the buffer *when the buffer is transferred to the display*.\n\nNote that there are no zone and sub-zone defined for this event and the escapes must instead be chosen to be distinct in a system. This means that &p1 will be unique within a system and updating this parameter will update on all displays that has it defined. \n\n | Byte | Description                                | \n | :----: | -----------                                | \n | 0    | Display parameter index.                   | \n | 1    | Data coding byte as of VSCP Specification. | \n | 2-7  | Data as of coding.                         | \n\nNote that the event have one byte less then standard measurement events so all coding types can not be used. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (32,614,'VSCP_TYPE_DISPLAY_SHOW_TEXT','This event contains information that should be displayed on displays pointed out by zone/sub-zone.\n\nThis event can have the same functionality as Write Display or be set on an higher abstraction level. \n\n | Byte | Description                                                               | \n | :----: | -----------                                                               | \n | 0    | Index - Increase by one for each event sent for specific text to display. | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.                | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones.        | \n | 3-7  | event.                                                                    | \n\nIndex is increase by one for each event that builds up a specific event. If needed an empty (no data) can be sent as the last event else sending data to fill the display buffer will give the end automatically.\n\nThe text sent to a node can contain escape characters that themselves display data or other display events. Se the new_york node for examples of this.\n\nFor a multi line display one can use different sub-zones o address different lines. One can also us macro characters to map display events to a line. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (48,614,'VSCP_TYPE_DISPLAY_SHOW_LED','This event contains information that should be displayed on LED(s) pointed out by zone/sub-zone. \n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index                                                              | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n | 3    | 0 =off, 1=on, 2=blink                                              | \n | 4    | Blink period: MSB milliseconds for ON.                             | \n | 5    | Blink period: LSB milliseconds for ON.                             | \n | 6    | Blink period: MSB milliseconds for OFF.                            | \n | 7    | Blink period: LSB milliseconds for OFF.                            | \n\nBlink period can be omitted if not used or if blink period is defined hard. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (49,614,'VSCP_TYPE_DISPLAY_SHOW_LED_COLOR','This event set the color for LED(s) pointed out by zone/sub-zone. \n\n | Byte | Description                                                        | \n | :----: | -----------                                                        | \n | 0    | Index                                                              | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.         | \n | 2    | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n | 3    | Color R to display 0-255.                                          | \n | 4    | Color G to display 0-255.                                          | \n | 5    | Color B to display 0-255.                                          | \n\nIf multi-byte resolution for the colors is needed use index to address the byte where 0 means the MSB byte, 1 MSB+1 byte etc (Big endian).\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,622,'VSCP_TYPE_REMOTE_GENERAL','General Event.');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (1,622,'VSCP_TYPE_REMOTE_RC5','A RC5 remote code. [http://www.xs4all.nl/~sbp/knowledge/ir/sirc.htm ]Use the VSCP abstract remote format if possible.\n\n | Byte | Description          | \n | :----: | -----------          | \n | 0    | RC5 code.            | \n | 1    | RC5 Address.         | \n | 2    | Repeat count if any. | ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (3,622,'VSCP_TYPE_REMOTE_SONY12','A SONY remote code. [http://www.xs4all.nl/~sbp/knowledge/ir/sirc.htm] Use the VSCP abstract remote format if possible.\n\n | Byte | Description          | \n | :----: | -----------          | \n | 0    | SONY code.           | \n | 1    | SONY address.        | \n | 2    | Repeat count if any. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (32,622,'VSCP_TYPE_REMOTE_LIRC','Packed LIRC codes code. LRC Codes are normally sent as 64-bit codes or even larger codes. Only codes with a length less then 56 bits (7-bytes) are supported by VSCP and the most significant byte of the LIRC code is not transferred. [http://www.lirc.org/](http://www.lirc.org/) \n\n | Byte | Description          | \n | :----: | -----------          | \n | 0    | LIRC Code, MSB.      | \n | 1    | LIRC Code.           | \n | 2    | LIRC Code.           | \n | 3    | LIRC Code.           | \n | 4    | LIRC Code.           | \n | 5    | LIRC Code.           | \n | 6    | LIRC Code. LSB.      | \n | 7    | Repeat count if any. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (48,622,'VSCP_TYPE_REMOTE_VSCP','Instead of sending codes that relates to a certain remote this format is general. And therefore more flexible \n\n | Byte | Description                                                            | \n | :----: | -----------                                                            | \n | 0    | Code, MSB.                                                             | \n | 1    | Code LSB.                                                              | \n | 2    | Zone for which event applies to (0-255). 255 is all zones.             | \n | 3    | Sub-zone for which the event applies to (0-255). 255 is all sub-zones. | \n | 4    | Repeat count if any.                                                   | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (49,622,'VSCP_TYPE_REMOTE_MAPITO','Instead of sending codes that relates to a certain remote this format is general. And therefore more flexible. \n\n | Byte | Description                                                            | \n | :----: | -----------                                                            | \n | 0    | Repeat Count.                                                          | \n | 1    | Zone for which event applies to (0-255). 255 is all zones.             | \n | 2    | Sub-zone for which the event applies to (0-255). 255 is all sub-zones. | \n | 3    | Control address MSB.                                                   | \n | 4    | Control address.                                                       | \n | 5    | Control address.                                                       | \n | 6    | Control address LSB.                                                   | \n | 7    | Key Code.                                                              | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,718,'VSCP_TYPE_GNSS_GENERAL','General Event.');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (1,718,'VSCP_TYPE_GNSS_POSITION','Position information as decimal Latitude + Longitude. \n\n | Byte | Description                        | \n | :----: | -----------                        | \n | 0-3  | Latitude as floating point value.  | \n | 4-7  | Longitude as floating point value. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (2,718,'VSCP_TYPE_GNSS_SATELLITES','Number of satellites used. \n\n | Byte | Description                | \n | :----: | -----------                | \n | 0    | Number of satellites used. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,724,'VSCP_TYPE_WIRELESS_GENERAL','General Event.');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (1,724,'VSCP_TYPE_WIRELESS_GSM_CELL','Event with ID for the GSM cell. Normally this is a 16-bit value but a 32-bit value is used in VSCP. \n\n | Byte | Description  | \n | :----: | -----------  | \n | 0-3  | GSM Cell ID. | ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,1018,'VSCP_TYPE_DIAGNOSTIC_GENERAL','General Event. \n\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0         | index. Often used as an index for channels/subdevices within a module. | \n | 1         | Zone for which event applies to (0-255). 255 is all zones. | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones. | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n        ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (1,1018,'VSCP_TYPE_DIAGNOSTIC_OVERVOLTAGE','Over voltage has been diagnosed. \n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (2,1018,'VSCP_TYPE_DIAGNOSTIC_UNDERVOLTAGE','Under voltage has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (3,1018,'VSCP_TYPE_DIAGNOSTIC_VBUS_LOW','Low voltage on USB VBUS has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (4,1018,'VSCP_TYPE_DIAGNOSTIC_BATTERY_LOW','Low battery voltage has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (5,1018,'VSCP_TYPE_DIAGNOSTIC_BATTERY_FULL','Battery full voltage has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (6,1018,'VSCP_TYPE_DIAGNOSTIC_BATTERY_ERROR','Battery error has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (7,1018,'VSCP_TYPE_DIAGNOSTIC_BATTERY_OK','Functional battery has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (8,1018,'VSCP_TYPE_DIAGNOSTIC_OVERCURRENT','Over current has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (9,1018,'VSCP_TYPE_DIAGNOSTIC_CIRCUIT_ERROR','Circuit error has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (10,1018,'VSCP_TYPE_DIAGNOSTIC_SHORT_CIRCUIT','Short circuit has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (11,1018,'VSCP_TYPE_DIAGNOSTIC_OPEN_CIRCUIT','Open Circuit has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (12,1018,'VSCP_TYPE_DIAGNOSTIC_MOIST','Moist has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (13,1018,'VSCP_TYPE_DIAGNOSTIC_WIRE_FAIL','Wire failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (14,1018,'VSCP_TYPE_DIAGNOSTIC_WIRELESS_FAIL','Wireless faliure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (15,1018,'VSCP_TYPE_DIAGNOSTIC_IR_FAIL','IR failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (16,1018,'VSCP_TYPE_DIAGNOSTIC_1WIRE_FAIL','1-wire failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (17,1018,'VSCP_TYPE_DIAGNOSTIC_RS222_FAIL','RS-222 failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (18,1018,'VSCP_TYPE_DIAGNOSTIC_RS232_FAIL','RS-232 failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (19,1018,'VSCP_TYPE_DIAGNOSTIC_RS423_FAIL','RS-423 failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (20,1018,'VSCP_TYPE_DIAGNOSTIC_RS485_FAIL','RS-485 failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (21,1018,'VSCP_TYPE_DIAGNOSTIC_CAN_FAIL','CAN failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (22,1018,'VSCP_TYPE_DIAGNOSTIC_LAN_FAIL','LAN failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (23,1018,'VSCP_TYPE_DIAGNOSTIC_USB_FAIL','USB failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (24,1018,'VSCP_TYPE_DIAGNOSTIC_WIFI_FAIL','Wifi failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (25,1018,'VSCP_TYPE_DIAGNOSTIC_NFC_RFID_FAIL','NFC/RFID failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (26,1018,'VSCP_TYPE_DIAGNOSTIC_LOW_SIGNAL','Low signal has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (27,1018,'VSCP_TYPE_DIAGNOSTIC_HIGH_SIGNAL','High signal has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (28,1018,'VSCP_TYPE_DIAGNOSTIC_ADC_FAIL','ADC failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (29,1018,'VSCP_TYPE_DIAGNOSTIC_ALU_FAIL','ALU failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (30,1018,'VSCP_TYPE_DIAGNOSTIC_ASSERT','An assert has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (31,1018,'VSCP_TYPE_DIAGNOSTIC_DAC_FAIL','DAC failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (32,1018,'VSCP_TYPE_DIAGNOSTIC_DMA_FAIL','DMA failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (33,1018,'VSCP_TYPE_DIAGNOSTIC_ETH_FAIL','Ethernet failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (34,1018,'VSCP_TYPE_DIAGNOSTIC_EXCEPTION','Exception has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (35,1018,'VSCP_TYPE_DIAGNOSTIC_FPU_FAIL','Floating point unit (FPU) failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (36,1018,'VSCP_TYPE_DIAGNOSTIC_GPIO_FAIL','General purpose I/O (GPIO) failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (37,1018,'VSCP_TYPE_DIAGNOSTIC_I2C_FAIL','I2C failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (38,1018,'VSCP_TYPE_DIAGNOSTIC_I2S_FAIL','I2C failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (39,1018,'VSCP_TYPE_DIAGNOSTIC_INVALID_CONFIG','Invalid configuration has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (40,1018,'VSCP_TYPE_DIAGNOSTIC_MMU_FAIL','Memory Management Unit (MMU) failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (41,1018,'VSCP_TYPE_DIAGNOSTIC_NMI','Non mask-able interrupt (NMI) failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (42,1018,'VSCP_TYPE_DIAGNOSTIC_OVERHEAT','Overheat has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (43,1018,'VSCP_TYPE_DIAGNOSTIC_PLL_FAIL','Phased Locked Loop (PLL) fail has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (44,1018,'VSCP_TYPE_DIAGNOSTIC_POR_FAIL','Power ON Reset (POR) fail has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (45,1018,'VSCP_TYPE_DIAGNOSTIC_PWM_FAIL','Pulse Width Modulation (PWM) failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (46,1018,'VSCP_TYPE_DIAGNOSTIC_RAM_FAIL','Random Access Memory (RAM) failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (47,1018,'VSCP_TYPE_DIAGNOSTIC_ROM_FAIL','Read only memory (ROM) failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (48,1018,'VSCP_TYPE_DIAGNOSTIC_SPI_FAIL','Serial peripheral interface (SPI) failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (49,1018,'VSCP_TYPE_DIAGNOSTIC_STACK_FAIL','Stack failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (50,1018,'VSCP_TYPE_DIAGNOSTIC_LIN_FAIL','LIN bus failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (51,1018,'VSCP_TYPE_DIAGNOSTIC_UART_FAIL','UART failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (52,1018,'VSCP_TYPE_DIAGNOSTIC_UNHANDLED_INT','Unhandled interrupt has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (53,1018,'VSCP_TYPE_DIAGNOSTIC_MEMORY_FAIL','Memory failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (54,1018,'VSCP_TYPE_DIAGNOSTIC_VARIABLE_RANGE','Variable range failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (55,1018,'VSCP_TYPE_DIAGNOSTIC_WDT','Watch Dog Timer (WDT) failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (56,1018,'VSCP_TYPE_DIAGNOSTIC_EEPROM_FAIL','EEPROM failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (57,1018,'VSCP_TYPE_DIAGNOSTIC_ENCRYPTION_FAIL','Encryption failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (58,1018,'VSCP_TYPE_DIAGNOSTIC_BAD_USER_INPUT','Bad user input failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (59,1018,'VSCP_TYPE_DIAGNOSTIC_DECRYPTION_FAIL','Decryption failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (60,1018,'VSCP_TYPE_DIAGNOSTIC_NOISE','Noise has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (61,1018,'VSCP_TYPE_DIAGNOSTIC_BOOTLOADER_FAIL','Boot loader failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (62,1018,'VSCP_TYPE_DIAGNOSTIC_PROGRAMFLOW_FAIL','Program flow failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (63,1018,'VSCP_TYPE_DIAGNOSTIC_RTC_FAIL','Real Time Clock (RTC) failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (64,1018,'VSCP_TYPE_DIAGNOSTIC_SYSTEM_TEST_FAIL','System test failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (65,1018,'VSCP_TYPE_DIAGNOSTIC_SENSOR_FAIL','Sensor failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (66,1018,'VSCP_TYPE_DIAGNOSTIC_SAFESTATE','Safe state entered has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (67,1018,'VSCP_TYPE_DIAGNOSTIC_SIGNAL_IMPLAUSIBLE','Signal implausible has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (68,1018,'VSCP_TYPE_DIAGNOSTIC_STORAGE_FAIL','Storage fail has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (69,1018,'VSCP_TYPE_DIAGNOSTIC_SELFTEST_FAIL','Self test OK has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (70,1018,'VSCP_TYPE_DIAGNOSTIC_ESD_EMC_EMI','ESD/EMC/EMI failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (71,1018,'VSCP_TYPE_DIAGNOSTIC_TIMEOUT','Timeout has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (72,1018,'VSCP_TYPE_DIAGNOSTIC_LCD_FAIL','LCD failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (73,1018,'VSCP_TYPE_DIAGNOSTIC_TOUCHPANEL_FAIL','Touch panel failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (74,1018,'VSCP_TYPE_DIAGNOSTIC_NOLOAD','No load has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (75,1018,'VSCP_TYPE_DIAGNOSTIC_COOLING_FAIL','Cooling failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (76,1018,'VSCP_TYPE_DIAGNOSTIC_HEATING_FAIL','Heating failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (77,1018,'VSCP_TYPE_DIAGNOSTIC_TX_FAIL','Transmission failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (78,1018,'VSCP_TYPE_DIAGNOSTIC_RX_FAIL','Receiption failure has been diagnosed.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (79,1018,'VSCP_TYPE_DIAGNOSTIC_EXT_IC_FAIL','A failure in an external IC circuit has been detected.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/subdevices within a module.                            | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,1020,'VSCP_TYPE_ERROR_SUCCESS','This error message is used to report success, that is no error.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (1,1020,'VSCP_TYPE_ERROR_ERROR','This error message is used to indicate an error condition.\n\n | Data byte | Description | \n | :---------: | ----------- | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (7,1020,'VSCP_TYPE_ERROR_CHANNEL','This error message is used to indicate a (communication) channel problem.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (8,1020,'VSCP_TYPE_ERROR_FIFO_EMPTY','This error message is used to indicate a fifo empty problem.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (9,1020,'VSCP_TYPE_ERROR_FIFO_FULL','This error message is used to indicate a fifo full problem.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (10,1020,'VSCP_TYPE_ERROR_FIFO_SIZE','This error message is used to indicate a fifo size problem.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (11,1020,'VSCP_TYPE_ERROR_FIFO_WAIT','This error message is used to indicate a fifo wait problem.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (12,1020,'VSCP_TYPE_ERROR_GENERIC','This error message is used to indicate a generic error.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (13,1020,'VSCP_TYPE_ERROR_HARDWARE','This error message is used to indicate a hardware error.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (14,1020,'VSCP_TYPE_ERROR_INIT_FAIL','This error message is used to indicate a initialization error.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (15,1020,'VSCP_TYPE_ERROR_INIT_MISSING','This error message is used to indicate a missing initialization error.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (16,1020,'VSCP_TYPE_ERROR_INIT_READY','This error message is used to indicate a initialization ready error.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (17,1020,'VSCP_TYPE_ERROR_NOT_SUPPORTED','This error message is used to indicate a not supported error.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (18,1020,'VSCP_TYPE_ERROR_OVERRUN','This error message is used to indicate an overrun error.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (19,1020,'VSCP_TYPE_ERROR_RCV_EMPTY','This error message is used to indicate a receiver empty error.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (20,1020,'VSCP_TYPE_ERROR_REGISTER','This error message is used to indicate a register error.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (21,1020,'VSCP_TYPE_ERROR_TRM_FULL','This error message is used to indicate a transmitter full error.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (28,1020,'VSCP_TYPE_ERROR_LIBRARY','This error message is used to indicate a library error.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (29,1020,'VSCP_TYPE_ERROR_PROCADDRESS','This error message is used to indicate a procedural address error.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (30,1020,'VSCP_TYPE_ERROR_ONLY_ONE_INSTANCE','This error message is used to indicate an only one instance error.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (31,1020,'VSCP_TYPE_ERROR_SUB_DRIVER','This error message is used to indicate a sub driver error.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (32,1020,'VSCP_TYPE_ERROR_TIMEOUT','This error message is used to indicate a timeout error.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (33,1020,'VSCP_TYPE_ERROR_NOT_OPEN','This error message is used to indicate a not open error.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (34,1020,'VSCP_TYPE_ERROR_PARAMETER','This error message is used to indicate a parameter error.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (35,1020,'VSCP_TYPE_ERROR_MEMORY','This error message is used to indicate a memory error.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (36,1020,'VSCP_TYPE_ERROR_INTERNAL','This error message is used to indicate a internal error.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (37,1020,'VSCP_TYPE_ERROR_COMMUNICATION','This error message is used to indicate a communication error.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (38,1020,'VSCP_TYPE_ERROR_USER','This error message is used to indicate a user error.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (39,1020,'VSCP_TYPE_ERROR_PASSWORD','This error message is used to indicate a password error.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (40,1020,'VSCP_TYPE_ERROR_CONNECTION','This error message is used to indicate a connection error.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (41,1020,'VSCP_TYPE_ERROR_INVALID_HANDLE','This error message is used to indicate a invalid handle error.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (42,1020,'VSCP_TYPE_ERROR_OPERATION_FAILED','This error message is used to indicate an operation failed error.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (43,1020,'VSCP_TYPE_ERROR_BUFFER_SMALL','This error message is used to indicate that the supplied buffer is to small to fit content.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (44,1020,'VSCP_TYPE_ERROR_ITEM_UNKNOWN','This error message is used to indicate that the requested item (remote variable) is unknown.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (45,1020,'VSCP_TYPE_ERROR_NAME_USED','This error message is used to indicate that the name is already in use.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (46,1020,'VSCP_TYPE_ERROR_DATA_WRITE','This error message is used to indicate an error when writing data.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (47,1020,'VSCP_TYPE_ERROR_ABORTED','This error message is used to indicate a stopped or an aborted operation.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. |');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (48,1020,'VSCP_TYPE_ERROR_INVALID_POINTER','This error message is used to indicate a pointer with an invalid value.\n\n | Data byte | Description                                                                                       | \n | :---------: | -----------                                                                                       | \n | 0         | index. Often used as an index for channels/sub devices within a module.                           | \n | 1         | Zone for which event applies to (0-255). 255 is all zones.                                        | \n | 2         | Sub-zone for which event applies to (0-255). 255 is all sub-zones.                                | \n | 3-7       | Can be present or not be present. If present the bytes give additional user specific information. | ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,1021,'VSCP_TYPE_LOG_GENERAL','General Event.');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (1,1021,'VSCP_TYPE_LOG_MESSAGE','Message for Log. Several frames have to be sent for a event that take up more the five bytes which is the maximum for each frame. In this case the zero based index (byte 2) should be increased for each frame. \n\n | Byte | Description            | \n | :----: | -----------            | \n | 0    | ID for event.          | \n | 1    | Log level for message. | \n | 2    | Idx for this message.  | \n | 3-7  | Message.               |');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (2,1021,'VSCP_TYPE_LOG_START','Start logging. \n\n | Byte | Description | \n | :----: | ----------- | \n | 0    | ID for log. | ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (3,1021,'VSCP_TYPE_LOG_STOP','Stop logging. \n\n | Byte | Description | \n | :----: | ----------- | \n | 0    | ID for log. | ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (4,1021,'VSCP_TYPE_LOG_LEVEL','Set level for logging. \n\n | Byte | Description                  | \n | :----: | -----------                  | \n | 0    | ID for log byte 0 Log level. | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,1022,'VSCP_TYPE_LABORATORY_GENERAL','General Event.');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,1023,'VSCP_TYPE_LOCAL_GENERAL','General Event.');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,1024,'CLASS2.PROTOCOL','General Event.');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (1,1024,'CLASS2.PROTOCOL','Read a Level II register \n\n | Byte       | Description                                      | \n | ----       | -----------                                      | \n | Byte 0-15  | Contains the GUID of the target node (MSB->LSB). | \n | Byte 16-19 | Register to read (or start index), (MSB->LSB).   | \n | Byte 20-21 | Number of registers to read (max 487).           | \n\nNumber of registers to read can also be restricted by the buffer size on the board (register 0x98). If this register is set to something else then 0 (default) this is the max size for data.\n\nThis means that buffer_size - 8 is maximum data bytes read. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (2,1024,'CLASS2.PROTOCOL',' | Byte       | Description                                      | \n | ----       | -----------                                      | \n | Byte 0-15  | Contains the GUID of the target node (MSB->LSB). | \n | Byte 16-19 | Register to write (or start index), (MSB->LSB).  | \n | Byte 20… | Data to write to register(s).                    | \n\nNumber of registers to write can also be restricted by the buffer size on the board (register 0x98). If this register is set to something else then 0 (default) this is the max size for data. This means that buffer_size - 24 is maximum data bytes written. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (3,1024,'CLASS2.PROTOCOL','This is the response from a read and a write. Note that the data is returned in both cases and can be checked for validity. \n\n | Byte      | Description                               | \n | ----      | -----------                               | \n | Byte 0-3  | Start register for register read/written. | \n | Byte 4… | Data read/written.                        | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (20,1024,'CLASS2.PROTOCOL','Should be implemented by all Level II devices and be sent out at least once every 60 second.\n\n | Data byte | Description                                                                                                                      |\n | :----: | -----------                                                                                                                      |\n | 0         | VSCP server 64-bit capability code MSB                                                                                           |\n | 1         | VSCP server 64-bit capability code                                                                                               |\n | 2         | VSCP server 64-bit capability code                                                                                               |\n | 3         | VSCP server 64-bit capability code                                                                                               |\n | 4         | VSCP server 64-bit capability code                                                                                               |\n | 5         | VSCP server 64-bit capability code                                                                                               |\n | 6         | VSCP server 64-bit capability code                                                                                               |\n | 7         | VSCP server 64-bit capability code LSB                                                                                           |\n | 8-23      | GUID for server                                                                                                                  |\n | 24-39     | For IPv4 or IPv6 IP address or other transport id identifier (MSB first). Note that this info is often already part of the GUID. |\n | 40-103    | 64 byte max zero terminated utf8 encoded name for this server. Blank if no name set.                                             |\n | 104..     | Non standard port info for services. Not needed if the standard port is used.                                                    |\n\n### Capability code\n\nDescription of bit-usage for VSCP server 64-bit **capability code**. A bit should be set only if the service is active.\n\n | Bit       | Usage                   |\n | :----:       | -----                |\n | 63 | Node supports VSCP remote variables. |\n | 62 | Node have a standard decision matrix. |\n | 61 | Node is a multi interface node (tcp/ip ''interface'' command list interfaces). |\n | Bit 16-60 | Reserved.               |\n | Bit 15    | Have VSCP TCP server with VCSP link interface.  |\n | Bit 14    | Have VSCP UDP server.   |\n | Bit 13    | Have VSCP Multicast announce interface. |\n | Bit 12    | Have VSCP raw Ethernet. |\n | Bit 11    | Have Web server.        |\n | Bit 10    | Have VSCP Websocket interface . |\n | Bit 9     | Have VSCP REST interface. |\n | Bit 8     | Have VSCP Multicast channel support. |\n | Bit 7     | Reserved.                 |\n | Bit 6     | IP6 support.              |\n | Bit 5     | IP4 support.              |\n | Bit 4     | SSL support.              |\n | Bit 3     | Accepts two or more simultaneous connections on TCP/IP interface. A limited device may only accept one connection.   |\n | Bit 2     | Support AES256 encryption. |\n | Bit 1     | Support AES192 encryption. |\n | Bit 0     | Support AES128 encryption. |\n\n**For programmers:** Bits are defined in vscp.h.\n\n### Non standard ports\n\nNon standard port definitions. Each consist of three bytes.\n | Byte | Description                                                                                                     |\n | :----: | -----------                                                                                                     |\n | 0    | 0-63 Identify the service from the bit number (see bit usage). Offset zero. Bit 7 is set if encryption is used. |\n | 1    | Port MSB byte                                                                                                   |\n | 2    | Port LSB byte                                                                                                   |\n\n### Example\n\n**Example:** The standard TCP/IP server is on port **9598** if it has been moved to port **32000** the three bytes will be\n\n | Byte | Description                                       |\n | :----: | -----------                                       |\n | 0    | 15 for bit 15 which is the TCP/IP server          |\n | 1    | 0xD4 which is the most significant byte of 32000  |\n | 3    | 0x00 which is the least significant byte of 32000 |\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (32,1024,'CLASS2.PROTOCOL','This defines the response from a Level II node for a [CLASS1.PROTOCOL, Type=32, Who is there?](./class1.protocol.md#type31) event.\n\n | Byte  | Description                                       |\n | :----:  | -----------                                     |\n | 0-15  | GUID for node                                     |\n | 16-47 | MDF of node                                       |\n | 3     | 0x00 which is the least significant byte of 32000 |\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,1025,'CLASS2.CONTROL','General Event.');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,1026,'CLASS2.INFORMATION','General Event.');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (1,1026,'CLASS2.INFORMATION','This event is used for cards, RFID''s, iButtons and other identification devices. The event is generated when the token device is attached/detached to/from the system. \n\n | Byte | Description                | \n | :----: | -----------                | \n | 0    | Event code.                | \n | 1    | Zone.                      | \n | 2    | Sub-zone.                  | \n | 3    | Token device type code     | \n | 4-7  | Reserved.                  | \n | 8..  | Unique ID of token-device. | \n\n##### Event codes\n\n | Code  | Description           | \n | :----:  | -----------           | \n | 0     | Touched and released. | \n | 1     | Touched.              | \n | 2     | Released.             | \n | 3-254 | Reserved.             | \n | 255   | Error.                | \n\n##### Token device type \n\n | Device type | Description                                                                                                                                                          | \n | :-----------: | -----------                                                                                                                                                          | \n | 0           | Unknown Token.                                                                                                                                                       | \n | 1           | iButton 64-bit token.                                                                                                                                                | \n | 2           | RFID Token.                                                                                                                                                          | \n | 3           | Philips mifare® RFID Token.                                                                                                                                         | \n | 4-8         | Reserved.                                                                                                                                                            | \n | 9           | ID/Credit card.                                                                                                                                                      | \n | 10-15       | Reserved.                                                                                                                                                            | \n | 16          | Biometri device 256-bits.                                                                                                                                            | \n | 17          | Biometri device. 64-bits.                                                                                                                                            | \n | 18          | Bluetooth device. 48-bits                                                                                                                                            | \n | 19          | GSM IMEI code (International Mobile Equipment Identity) AA-BBBBBB-CCCCCC-D packed in 64 bits. [https://en.wikipedia.org/wiki/IMEI](https://en.wikipedia.org/wiki/IMEI) | \n | 20          | GSM IMSI code (International Mobile Subscriber Identity) packed in 64 bits. [https://en.wikipedia.org/wiki/IMSI](https://en.wikipedia.org/wiki/IMSI)                   | \n | 21-255      | Reserved.                                                                                                                                                          | ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (2,1026,'CLASS2.INFORMATION','A level II node should send this event at least once a minute to indicate that it is live and well. The implementation **is mandatory**. Recommended interval is 30-60 seconds but in a node that need to sleep longer to save resources a longer interval can be used.\n\n | Byte | Description                 | \n | :----: | -----------                 | \n | 0-63 | Real text name of the node. | \n\nThis event is sent by all level nodes even if they are just a client which can connect to a server but not accept connections itself. \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (3,1026,'CLASS2.INFORMATION','This event, which it is advised that all nodes should implement, can be sent by a server that have lower end nodes connected to it at different interfaces. This can be level II or level I nodes. \n\n | Byte    | Description                                                             | \n | :----:    | -----------                                                             | \n | 0-15    | Real GUID for node (not interface GUID)                                 | \n | 16-31   | Reserved                                                                | \n | 32-47   | GUID for interface on server the node is connected to.                  | \n | 48      | Interface Level (0=Level I, 1=Level II)                                 | \n | 49-63   | Reserved                                                                | \n | 64-127  | Real text name of node (if any). Set to all zero if not available.      | \n | 128-191 | Real text name of interface (if any). Set to all zero if not available. | \n\nIf the real GUID for a node is not known (for example discovery is in progress or have failed) bytes 0-15 should be set to zero. This is true for a node that has been configured as a known node but where the system has not yet fetched information from the node.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (4,1026,'CLASS2.INFORMATION','This event is used by multicast nodes to announce which port(=channel) they communicate on. This may be something they want or not want to share with the rest of the world for security reasons. Therefore this is an optional event. \n\nIf several channels is used several events is sent.\n\nTypically this event is sent on the multicast announce channel\n\n | Byte | Description    | \n | :----: | -----------    | \n | 0    | MSB of channel | \n | 1    | LSB of channel | \n | 2-5  | Reserved       | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,1027,'CLASS2.TEXT2SPEECH','General Event.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (1,1027,'CLASS2.TEXT2SPEECH','Talk some text out on a device.\n\n | Byte | Description               | \n | :----: | -----------               | \n | 0-1  | Zone to talk in.          | \n | 2-3  | Sub-zone to talk in.      | \n | 4    | Relative volume (0-100%). | \n | 5-7  | Reserved.                 | \n | 9..  | Text to speak.            | \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,1028,'CLASS2.HLO','General HLO Event.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (1,1028,'CLASS2.HLO','High Level Object (HLO) event is a command/response or other packed object sent to a device or sent as a response from a device. Content can be XML, JSON, character separated, BASE64, etc.\n\nCommand and response packages are separated into different VSCP types to be easier to filter even if this is not strictly needed. \n\nVSCP uses some of the contents in HLO events to pack driver configuration and other things. Therefore there is a restriction on tags used by user in that all tags prefixed with "vscp-" belongs to VSCP and should not be used by other applications. Apart from that naming is completely free. With XML content this restriction only applies to the highest level tag. For example\n\n```xml\n<vscp-cmd />\n```\n\nis restricted. But\n\n```xml\n<vscp-cmd no-restrictions-on-attributes-here="">\n<no-restriction-on-tags-here />\n</vscp-cmd>\n```\n\nFor JSON the restriction does not apply for sub object.\n\nThis event is not mandatory to implement by a device.\n\n##### Payload content \n\n | Byte   | Description |\n | :----: | ----------- |\n | 0-15  | GUID for node that is addressed |\n | 16 | Type + Encryption |\n | 17-511 | Variable length high level payload. For type=0 first byte \n\n##### Type (bits 7,6,5,4)\n\n | Type  | Description |\n | :----:  | ----------- |\n | 0 | UTF8 data where items is separated with a char specified by the first byte in the payload. Typical examples are comma separated-, semicolon separated-, etc, data |\n| 1 | XML encoded data |\n| 2 | JSON encoded data |\n| 3 | BASE64 encoded data |\n| 4-14 | Undefined |\n| 15 | User specified content |\n\n##### Encryption (bits 3,2,1,0)\n\n | Type  | Description |\n | :----:  | ----------- |\n | 0 | No encryption |\n | 1 | AES128 |\n | 2 | AES192 |\n | 3 | AES256 |\n\n\nEncrypted content is encrypted with AES128/AES192/AES256 CBC. The encrypted content is sent with a 16-byte IV appended to it meaning that the actual payload can be max 479 bytes (512-16 (GUID)-1 (type)-16 (IV)).\n\nMulti frame commands is first collected (all events that make up the command is read) then the IV is extracted from the last 16-bytes and after that the decryption of the rest of the data is carried out.\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (2,1028,'CLASS2.HLO','High Level Object (HLO) event is a command/response or other packed object sent to a device or sent as a response from a device. Content can be XML, JSON, character separated, BASE64, etc.\n\nCommand and response packages are separated into different VSCP types to be easier to filter even if this is not strictly needed.  \n\nVSCP uses some of the contents in HLO events to pack driver configuration and other things. Therefore there is a restriction on tags used by user in that all tags prefixed with "vscp-" belongs to VSCP and should not be used by other applications. Apart from that naming is completely free. With XML content this restriction only applies to the highest level tag. For example\n\n```xml\n<vscp-resp />\n```\n\nis restricted. But\n\n```xml\n<vscp-resp no-restrictions-on-attributes-here="">\n<no-restriction-on-tags-here />\n</vscp-resp>\n```\n\nFor JSON the restriction does not apply for sub object.\n\nThis event is not mandatory to implement by a device.\n\n##### Payload content\n\n | Byte  | Description |\n | :----:  | ----------- |\n | 0-15  | GUID for node that is addressed |\n | 16 | Type + Encryption |\n | 17-511 | Variable length high level payload. For type=0 first byte is separation character. |\n\n##### Type (bits 7,6,5,4)\n\n | Type  | Description |\n | :----:  | ----------- |\n | 0 | UTF8 data where items is separated with a char specified by the first byte in the payload. Typical examples are comma separated-, semicolon separated-, etc, data |\n| 1 | XML encoded data |\n| 2 | JSON encoded data |\n| 3 | BASE64 encoded data |\n| 4-14 | Undefined |\n| 15 | User specified content |\n\n##### Encryption (bits 3,2,1,0)\n\n | Type  | Description |\n | :----:  | ----------- |\n | 0 | No encryption |\n | 1 | AES128 |\n | 2 | AES192 |\n | 3 | AES256 |\n\nEncrypted content is encrypted with AES128/AES192/AES256 CBC. The encrypted content is sent with a 16-byte IV appended to it meaning that the actual payload can be max 479 bytes (512-16 (GUID)-1 (type)-16 (IV)).\n\nMulti frame commands is first collected (all events that make up the command is read) then the IV is extracted from the last 16-bytes and after that the decryption of the rest of the data is carried out.\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,1029,'CLASS2.CUSTOM','General Event.\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,1030,'CLASS2.DISPLAY','General Event.');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,1040,'VSCP_TYPE_MEASUREMENT_GENERAL','This is a general (custom) measurement event that can be used if no other event is suitable. \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (1,1040,'VSCP_TYPE_MEASUREMENT_COUNT','This is a discrete value typical for a count. There is no unit for this measurement just a discrete value. \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (2,1040,'VSCP_TYPE_MEASUREMENT_LENGTH','**Default unit:** Meter. \n\nThis is a measurement of a length or a distance.\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (3,1040,'VSCP_TYPE_MEASUREMENT_MASS','**Default unit:** Kilogram.\n\nThis is a measurement of a mass. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (4,1040,'VSCP_TYPE_MEASUREMENT_TIME','A time measurement.\n\n**Default unit:** Seconds.  \n**Opt. unit:** (1) Milliseconds. Absolute: (2) y-y-m-d-h-m-s (binary). String: (3) "HHMMSS". \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (5,1040,'VSCP_TYPE_MEASUREMENT_ELECTRIC_CURRENT','**Default unit:** Ampere.\n\nThis is a measurement of an electric current. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (6,1040,'VSCP_TYPE_MEASUREMENT_TEMPERATURE','**Default unit:** Kelvin.  \n**Opt. unit:** Degree Celsius (1), Fahrenheit (2)\n\nThis is a measurement of a temperature. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (7,1040,'VSCP_TYPE_MEASUREMENT_AMOUNT_OF_SUBSTANCE','**Default unit:** Mole.\n\nThis is a measurement of an amount of a substance. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (8,1040,'VSCP_TYPE_MEASUREMENT_INTENSITY_OF_LIGHT','**Default unit:** Candela.\n\nThis is a measurement of luminous intensity. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (9,1040,'VSCP_TYPE_MEASUREMENT_FREQUENCY','\n**Default unit:** Hertz.\n\nThis is a measurement of regular events during a second. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (10,1040,'VSCP_TYPE_MEASUREMENT_RADIOACTIVITY','**Default unit:** becquerel.\n**Optional unit:** curie (1)\n\nThis is a measurement of rates of things, which happen randomly, or are unpredictable. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (11,1040,'VSCP_TYPE_MEASUREMENT_FORCE','**Default unit:** newton.\n\nThis is a measurement of force. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (12,1040,'VSCP_TYPE_MEASUREMENT_PRESSURE','**Default unit:** pascal.  \n**Opt. unit:** bar (1), psi (2)\n\nThis is a measurement of pressure. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (13,1040,'VSCP_TYPE_MEASUREMENT_ENERGY','**Default unit:** Joule.  \n**Optional unit:** KWh (1)\n\nThis is a measurement of energy. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (14,1040,'VSCP_TYPE_MEASUREMENT_POWER','**Default unit:** watt.  \n**Optional unit:** Horse power (1).\n\nThis is a measurement of power. \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (15,1040,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_CHARGE','**Default unit:** coulomb.\n\nThis is a measurement electrical charge. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (16,1040,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_POTENTIAL','**Default unit:** volt.\n\nThis is a measurement of electrical potential. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (17,1040,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_CAPACITANCE','**Default unit:** farad (F).\n\nThis is a measurement of electric capacitance.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (18,1040,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_RESISTANCE','**Default unit:** ohm (Ω).\n\nThis is a measurement of resistance. \n\n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (19,1040,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_CONDUCTANCE','**Default unit:** siemens.\n\nThis is a measurement of electrical conductance. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (20,1040,'VSCP_TYPE_MEASUREMENT_MAGNETIC_FIELD_STRENGTH','**Default unit:** amperes per meter (H).  \n**Optional units:** teslas (B) (1)\n\nThis is a measurement of magnetic field strength. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (21,1040,'VSCP_TYPE_MEASUREMENT_MAGNETIC_FLUX','**Default unit:** weber (Wb).\n\nThis is a measurement of magnetic flux. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (22,1040,'VSCP_TYPE_MEASUREMENT_MAGNETIC_FLUX_DENSITY','**Default unit:** tesla (B).\n\n**Optional unit:** Gauss (1)\n\nThis is a measurement of flux density or field strength for magnetic fields (also called the magnetic induction). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (23,1040,'VSCP_TYPE_MEASUREMENT_INDUCTANCE','**Default unit:** henry (H).\n\nThis is a measurement of inductance. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (24,1040,'VSCP_TYPE_MEASUREMENT_FLUX_OF_LIGHT','**Default unit:** Lumen (lm= cd * sr)\n\nThis is a measurement of luminous Flux. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (25,1040,'VSCP_TYPE_MEASUREMENT_ILLUMINANCE','**Default unit:** lux (lx) ( lx = lm / m² )\n\nThis is used to express both Illuminance (incidence of light) and Luminous Emittance (emission of light). \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (26,1040,'VSCP_TYPE_MEASUREMENT_RADIATION_DOSE_ABSORBED','**Default unit:** gray (Gy).   \n\n\nThis is a measurement of a radiation dose (Absorbed dose of ionizing radiation). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (27,1040,'VSCP_TYPE_MEASUREMENT_CATALYTIC_ACITIVITY','**Default unit:** katal (kat).\n\nThis is a measurement of catalytic activity used in biochemistry. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (28,1040,'VSCP_TYPE_MEASUREMENT_VOLUME','**Default unit:** cubic meter (m³)   \n**Opt. unit:** Liter (dm³) (1), decilitre (100 cm³) (2), centilitre (10 cm³) (3), millilitre (cm³) (4) where unit 4 is only available for Level II measurement events where units can hold this value.\n\nThis is a measurement of volume. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (29,1040,'VSCP_TYPE_MEASUREMENT_SOUND_INTENSITY','**Default unit:** W/m2, watt per square meter. \n\nThis is a measurement of sound intensity (acoustic intensity). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (30,1040,'VSCP_TYPE_MEASUREMENT_ANGLE','* **Default unit:** radian (rad) (Plane angles).   \n* **Opt Unit:** degree (1).\n* **Opt Unit:** arcminute (2).\n* **Opt Unit:** arcseconds (3).\n\nThis is a measurement of an angle. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (31,1040,'VSCP_TYPE_MEASUREMENT_POSITION','**Default unit:** Longitude.  \n**Opt. unit:** Latitude.\n\nThis is a (decimal) measurement of a position as of WGS 84. Normally given as a floating point value. See [./class1.gps.md](CLASS1.GPS) for a better candidate to use for position data.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (32,1040,'VSCP_TYPE_MEASUREMENT_SPEED','**Default unit:** Meters per second.   \n**Optional unit:** Kilometers per hour (1) Miles per hour (2)\n\nThis is a measurement of a speed. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (33,1040,'VSCP_TYPE_MEASUREMENT_ACCELERATION','**Default unit:** Meters per second/second (m/s2).\n\nThis is a measurement of acceleration. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (34,1040,'VSCP_TYPE_MEASUREMENT_TENSION','**Default unit:** N/m.\n\nThis is a measurement of tension. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (35,1040,'VSCP_TYPE_MEASUREMENT_HUMIDITY','**Default unit:** Relative percentage 0-100%.\n\nThis is a measurement of relative moistness (Humidity). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (36,1040,'VSCP_TYPE_MEASUREMENT_FLOW','**Default unit:** Cubic meters/second.   \n**Opt Unit:** Liters/Second.\n\nThis is a measurement of flow. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (37,1040,'VSCP_TYPE_MEASUREMENT_THERMAL_RESISTANCE','**Default unit:** Thermal ohm K/W.\n\nThis is a measurement of thermal resistance. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (38,1040,'VSCP_TYPE_MEASUREMENT_REFRACTIVE_POWER','**Default unit:** dioptre (dpt) m-1.\n\nThis is a measurement of refractive (optical) power. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (39,1040,'VSCP_TYPE_MEASUREMENT_DYNAMIC_VISCOSITY','**Default unit:**  pascal second\n**optional units** poiseuille (Pl) = 1, poise (P) = 2\n\nThis is a measurement of dynamic viscosity. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (40,1040,'VSCP_TYPE_MEASUREMENT_SOUND_IMPEDANCE','**Default unit:** rayl (Pa·s/m)\n\nThis is a measurement of sound impedance. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (41,1040,'VSCP_TYPE_MEASUREMENT_SOUND_RESISTANCE','**Default unit:** Acoustic ohm Pa · s/ m³.\n\nThis is a measurement of sound resistance.\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (42,1040,'VSCP_TYPE_MEASUREMENT_ELECTRIC_ELASTANCE','**Default unit:** daraf (f-1).\n\nThis is a measurement of electric elasticity. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (43,1040,'VSCP_TYPE_MEASUREMENT_LUMINOUS_ENERGY','**Default unit:** talbot ( tb = lm * s) \n\nThis is a measurement of luminous energy.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (44,1040,'VSCP_TYPE_MEASUREMENT_LUMINANCE','**Default unit:** cd / m²) (non SI unit = nit)\n\nThis is a measurement of luminance.\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (45,1040,'VSCP_TYPE_MEASUREMENT_CHEMICAL_CONCENTRATION_MOLAR','**Default unit:** mol/m3.\n\nThis is a measurement of chemical mol concentration. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (46,1040,'VSCP_TYPE_MEASUREMENT_CHEMICAL_CONCENTRATION_MASS','**Default unit:** kg/m3.\n\nThis is a measurement of chemical mass concentration. ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (47,1040,'VSCP_TYPE_MEASUREMENT_DOSE_EQVIVALENT','Reserved\n\n\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (48,1040,'VSCP_TYPE_MEASUREMENT_RESERVED48','Reserved \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (49,1040,'VSCP_TYPE_MEASUREMENT_DEWPOINT','**Default unit:** Kelvin.  \n**Opt. unit:** Degree Celsius (1), Fahrenheit (2)\n\nThis is a measurement of the Dew Point. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (50,1040,'VSCP_TYPE_MEASUREMENT_RELATIVE_LEVEL','**Default unit:** Relative value.\n\nThis is a relative value for a level measurement without a unit. It is just relative to the min/max value for the selected data representation, typically percentage or per mille or similar. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (51,1040,'VSCP_TYPE_MEASUREMENT_ALTITUDE','**Default unit:** Meter.  \n**Opt. unit:** Feet(1), inches (2)\n\nAltitude in meters. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (52,1040,'VSCP_TYPE_MEASUREMENT_AREA','**Default unit:** square meter (m²)\n\nArea in square meter. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (53,1040,'VSCP_TYPE_MEASUREMENT_RADIANT_INTENSITY','**Default unit:** watt per steradian ( W / sr )\n\nRadiated power per room angle. \n\n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (54,1040,'VSCP_TYPE_MEASUREMENT_RADIANCE','**Default unit:** watt per steradian per square metre ( W / (sr * m²) )\n\nThis is the radiant flux emitted, reflected, transmitted or received by a surface.\n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (55,1040,'VSCP_TYPE_MEASUREMENT_IRRADIANCE','**Default unit:** watt per square metre ( W / m² )\n\nPower emitted from or striking onto a surface or area. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (56,1040,'VSCP_TYPE_MEASUREMENT_SPECTRAL_RADIANCE','**Default unit:** watt per steradian per square metre per nm (W·sr-1·m-2·nm-1)    \n**Opt. unit:** watt per steradian per meter3 (W·sr-1·m-3) (1), watt per steradian per square metre per hertz (W·sr-1·m-3) (2)\n\nRadiance of a surface per unit frequency or wavelength.\n\n                        \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (57,1040,'VSCP_TYPE_MEASUREMENT_SPECTRAL_IRRADIANCE','**Default unit:** watt per square metre per nm (W·m-2·nm-1)   \n**Opt. unit:** watt per metre3 (W·m-3) (1), watt per square metre per hertz (W·m-2·Hz-1) (2)\n\nIrradiance of a surface per unit frequency or wavelength.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (58,1040,'VSCP_TYPE_MEASUREMENT_SOUND_PRESSURE','**Default unit:** pascal (Pa) \n\nThis is a measurement of sound pressure (acoustic pressure). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (59,1040,'VSCP_TYPE_MEASUREMENT_SOUND_DENSITY','**Default unit:** pascal (Pa) \n\nSound energy density or sound density is the sound energy per unit volume.\n\n                        ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (60,1040,'VSCP_TYPE_MEASUREMENT_SOUND_LEVEL','**Default unit:** decibel (dB) \n\nSound level expressed in decibel. This event is supplied for convenience.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (61,1040,'VSCP_TYPE_MEASUREMENT_RADIATION_DOSE_EQ','**Default unit:** sievert (Sv).\n\n**Optional unit** rem (1)\n\nThis is a measurement of a radiation dose (Equivalent dose of ionizing radiation). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (62,1040,'VSCP_TYPE_MEASUREMENT_RADIATION_DOSE_EXPOSURE','**Default unit:** coulomb per kilogram (C/kg).   \n**Optional unit:** Röntgen/R (1)\n\nThis is a measurement of a radiation dose (Exposed dose of ionizing radiation). \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,1060,'VSCP_TYPE_MEASUREMENT_GENERAL','This is a general (custom) measurement event that can be used if no other event is suitable. \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (1,1060,'VSCP_TYPE_MEASUREMENT_COUNT','This is a discrete value typical for a count. There is no unit for this measurement just a discrete value. \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (2,1060,'VSCP_TYPE_MEASUREMENT_LENGTH','**Default unit:** Meter. \n\nThis is a measurement of a length or a distance.\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (3,1060,'VSCP_TYPE_MEASUREMENT_MASS','**Default unit:** Kilogram.\n\nThis is a measurement of a mass. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (4,1060,'VSCP_TYPE_MEASUREMENT_TIME','A time measurement.\n\n**Default unit:** Seconds.  \n**Opt. unit:** (1) Milliseconds. Absolute: (2) y-y-m-d-h-m-s (binary). String: (3) "HHMMSS". \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (5,1060,'VSCP_TYPE_MEASUREMENT_ELECTRIC_CURRENT','**Default unit:** Ampere.\n\nThis is a measurement of an electric current. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (6,1060,'VSCP_TYPE_MEASUREMENT_TEMPERATURE','**Default unit:** Kelvin.  \n**Opt. unit:** Degree Celsius (1), Fahrenheit (2)\n\nThis is a measurement of a temperature. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (7,1060,'VSCP_TYPE_MEASUREMENT_AMOUNT_OF_SUBSTANCE','**Default unit:** Mole.\n\nThis is a measurement of an amount of a substance. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (8,1060,'VSCP_TYPE_MEASUREMENT_INTENSITY_OF_LIGHT','**Default unit:** Candela.\n\nThis is a measurement of luminous intensity. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (9,1060,'VSCP_TYPE_MEASUREMENT_FREQUENCY','\n**Default unit:** Hertz.\n\nThis is a measurement of regular events during a second. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (10,1060,'VSCP_TYPE_MEASUREMENT_RADIOACTIVITY','**Default unit:** becquerel.\n**Optional unit:** curie (1)\n\nThis is a measurement of rates of things, which happen randomly, or are unpredictable. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (11,1060,'VSCP_TYPE_MEASUREMENT_FORCE','**Default unit:** newton.\n\nThis is a measurement of force. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (12,1060,'VSCP_TYPE_MEASUREMENT_PRESSURE','**Default unit:** pascal.  \n**Opt. unit:** bar (1), psi (2)\n\nThis is a measurement of pressure. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (13,1060,'VSCP_TYPE_MEASUREMENT_ENERGY','**Default unit:** Joule.  \n**Optional unit:** KWh (1)\n\nThis is a measurement of energy. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (14,1060,'VSCP_TYPE_MEASUREMENT_POWER','**Default unit:** watt.  \n**Optional unit:** Horse power (1).\n\nThis is a measurement of power. \n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (15,1060,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_CHARGE','**Default unit:** coulomb.\n\nThis is a measurement electrical charge. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (16,1060,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_POTENTIAL','**Default unit:** volt.\n\nThis is a measurement of electrical potential. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (17,1060,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_CAPACITANCE','**Default unit:** farad (F).\n\nThis is a measurement of electric capacitance.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (18,1060,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_RESISTANCE','**Default unit:** ohm (Ω).\n\nThis is a measurement of resistance. \n\n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (19,1060,'VSCP_TYPE_MEASUREMENT_ELECTRICAL_CONDUCTANCE','**Default unit:** siemens.\n\nThis is a measurement of electrical conductance. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (20,1060,'VSCP_TYPE_MEASUREMENT_MAGNETIC_FIELD_STRENGTH','**Default unit:** amperes per meter (H).  \n**Optional units:** teslas (B) (1)\n\nThis is a measurement of magnetic field strength. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (21,1060,'VSCP_TYPE_MEASUREMENT_MAGNETIC_FLUX','**Default unit:** weber (Wb).\n\nThis is a measurement of magnetic flux. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (22,1060,'VSCP_TYPE_MEASUREMENT_MAGNETIC_FLUX_DENSITY','**Default unit:** tesla (B).\n\n**Optional unit:** Gauss (1)\n\nThis is a measurement of flux density or field strength for magnetic fields (also called the magnetic induction). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (23,1060,'VSCP_TYPE_MEASUREMENT_INDUCTANCE','**Default unit:** henry (H).\n\nThis is a measurement of inductance. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (24,1060,'VSCP_TYPE_MEASUREMENT_FLUX_OF_LIGHT','**Default unit:** Lumen (lm= cd * sr)\n\nThis is a measurement of luminous Flux. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (25,1060,'VSCP_TYPE_MEASUREMENT_ILLUMINANCE','**Default unit:** lux (lx) ( lx = lm / m² )\n\nThis is used to express both Illuminance (incidence of light) and Luminous Emittance (emission of light). \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (26,1060,'VSCP_TYPE_MEASUREMENT_RADIATION_DOSE_ABSORBED','**Default unit:** gray (Gy).   \n\n\nThis is a measurement of a radiation dose (Absorbed dose of ionizing radiation). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (27,1060,'VSCP_TYPE_MEASUREMENT_CATALYTIC_ACITIVITY','**Default unit:** katal (kat).\n\nThis is a measurement of catalytic activity used in biochemistry. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (28,1060,'VSCP_TYPE_MEASUREMENT_VOLUME','**Default unit:** cubic meter (m³)   \n**Opt. unit:** Liter (dm³) (1), decilitre (100 cm³) (2), centilitre (10 cm³) (3), millilitre (cm³) (4) where unit 4 is only available for Level II measurement events where units can hold this value.\n\nThis is a measurement of volume. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (29,1060,'VSCP_TYPE_MEASUREMENT_SOUND_INTENSITY','**Default unit:** W/m2, watt per square meter. \n\nThis is a measurement of sound intensity (acoustic intensity). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (30,1060,'VSCP_TYPE_MEASUREMENT_ANGLE','* **Default unit:** radian (rad) (Plane angles).   \n* **Opt Unit:** degree (1).\n* **Opt Unit:** arcminute (2).\n* **Opt Unit:** arcseconds (3).\n\nThis is a measurement of an angle. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (31,1060,'VSCP_TYPE_MEASUREMENT_POSITION','**Default unit:** Longitude.  \n**Opt. unit:** Latitude.\n\nThis is a (decimal) measurement of a position as of WGS 84. Normally given as a floating point value. See [./class1.gps.md](CLASS1.GPS) for a better candidate to use for position data.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (32,1060,'VSCP_TYPE_MEASUREMENT_SPEED','**Default unit:** Meters per second.   \n**Optional unit:** Kilometers per hour (1) Miles per hour (2)\n\nThis is a measurement of a speed. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (33,1060,'VSCP_TYPE_MEASUREMENT_ACCELERATION','**Default unit:** Meters per second/second (m/s2).\n\nThis is a measurement of acceleration. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (34,1060,'VSCP_TYPE_MEASUREMENT_TENSION','**Default unit:** N/m.\n\nThis is a measurement of tension. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (35,1060,'VSCP_TYPE_MEASUREMENT_HUMIDITY','**Default unit:** Relative percentage 0-100%.\n\nThis is a measurement of relative moistness (Humidity). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (36,1060,'VSCP_TYPE_MEASUREMENT_FLOW','**Default unit:** Cubic meters/second.   \n**Opt Unit:** Liters/Second.\n\nThis is a measurement of flow. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (37,1060,'VSCP_TYPE_MEASUREMENT_THERMAL_RESISTANCE','**Default unit:** Thermal ohm K/W.\n\nThis is a measurement of thermal resistance. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (38,1060,'VSCP_TYPE_MEASUREMENT_REFRACTIVE_POWER','**Default unit:** dioptre (dpt) m-1.\n\nThis is a measurement of refractive (optical) power. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (39,1060,'VSCP_TYPE_MEASUREMENT_DYNAMIC_VISCOSITY','**Default unit:**  pascal second\n**optional units** poiseuille (Pl) = 1, poise (P) = 2\n\nThis is a measurement of dynamic viscosity. \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (40,1060,'VSCP_TYPE_MEASUREMENT_SOUND_IMPEDANCE','**Default unit:** rayl (Pa·s/m)\n\nThis is a measurement of sound impedance. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (41,1060,'VSCP_TYPE_MEASUREMENT_SOUND_RESISTANCE','**Default unit:** Acoustic ohm Pa · s/ m³.\n\nThis is a measurement of sound resistance.\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (42,1060,'VSCP_TYPE_MEASUREMENT_ELECTRIC_ELASTANCE','**Default unit:** daraf (f-1).\n\nThis is a measurement of electric elasticity. \n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (43,1060,'VSCP_TYPE_MEASUREMENT_LUMINOUS_ENERGY','**Default unit:** talbot ( tb = lm * s) \n\nThis is a measurement of luminous energy.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (44,1060,'VSCP_TYPE_MEASUREMENT_LUMINANCE','**Default unit:** cd / m²) (non SI unit = nit)\n\nThis is a measurement of luminance.\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (45,1060,'VSCP_TYPE_MEASUREMENT_CHEMICAL_CONCENTRATION_MOLAR','**Default unit:** mol/m3.\n\nThis is a measurement of chemical mol concentration. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (46,1060,'VSCP_TYPE_MEASUREMENT_CHEMICAL_CONCENTRATION_MASS','**Default unit:** kg/m3.\n\nThis is a measurement of chemical mass concentration. ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (47,1060,'VSCP_TYPE_MEASUREMENT_DOSE_EQVIVALENT','Reserved\n\n\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (48,1060,'VSCP_TYPE_MEASUREMENT_RESERVED48','Reserved \n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (49,1060,'VSCP_TYPE_MEASUREMENT_DEWPOINT','**Default unit:** Kelvin.  \n**Opt. unit:** Degree Celsius (1), Fahrenheit (2)\n\nThis is a measurement of the Dew Point. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (50,1060,'VSCP_TYPE_MEASUREMENT_RELATIVE_LEVEL','**Default unit:** Relative value.\n\nThis is a relative value for a level measurement without a unit. It is just relative to the min/max value for the selected data representation, typically percentage or per mille or similar. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (51,1060,'VSCP_TYPE_MEASUREMENT_ALTITUDE','**Default unit:** Meter.  \n**Opt. unit:** Feet(1), inches (2)\n\nAltitude in meters. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (52,1060,'VSCP_TYPE_MEASUREMENT_AREA','**Default unit:** square meter (m²)\n\nArea in square meter. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (53,1060,'VSCP_TYPE_MEASUREMENT_RADIANT_INTENSITY','**Default unit:** watt per steradian ( W / sr )\n\nRadiated power per room angle. \n\n ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (54,1060,'VSCP_TYPE_MEASUREMENT_RADIANCE','**Default unit:** watt per steradian per square metre ( W / (sr * m²) )\n\nThis is the radiant flux emitted, reflected, transmitted or received by a surface.\n\n  \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (55,1060,'VSCP_TYPE_MEASUREMENT_IRRADIANCE','**Default unit:** watt per square metre ( W / m² )\n\nPower emitted from or striking onto a surface or area. \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (56,1060,'VSCP_TYPE_MEASUREMENT_SPECTRAL_RADIANCE','**Default unit:** watt per steradian per square metre per nm (W·sr-1·m-2·nm-1)    \n**Opt. unit:** watt per steradian per meter3 (W·sr-1·m-3) (1), watt per steradian per square metre per hertz (W·sr-1·m-3) (2)\n\nRadiance of a surface per unit frequency or wavelength.\n\n                        \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (57,1060,'VSCP_TYPE_MEASUREMENT_SPECTRAL_IRRADIANCE','**Default unit:** watt per square metre per nm (W·m-2·nm-1)   \n**Opt. unit:** watt per metre3 (W·m-3) (1), watt per square metre per hertz (W·m-2·Hz-1) (2)\n\nIrradiance of a surface per unit frequency or wavelength.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (58,1060,'VSCP_TYPE_MEASUREMENT_SOUND_PRESSURE','**Default unit:** pascal (Pa) \n\nThis is a measurement of sound pressure (acoustic pressure). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (59,1060,'VSCP_TYPE_MEASUREMENT_SOUND_DENSITY','**Default unit:** pascal (Pa) \n\nSound energy density or sound density is the sound energy per unit volume.\n\n                        ');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (60,1060,'VSCP_TYPE_MEASUREMENT_SOUND_LEVEL','**Default unit:** decibel (dB) \n\nSound level expressed in decibel. This event is supplied for convenience.\n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (61,1060,'VSCP_TYPE_MEASUREMENT_RADIATION_DOSE_EQ','**Default unit:** sievert (Sv).\n\n**Optional unit** rem (1)\n\nThis is a measurement of a radiation dose (Equivalent dose of ionizing radiation). \n\n \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (62,1060,'VSCP_TYPE_MEASUREMENT_RADIATION_DOSE_EXPOSURE','**Default unit:** coulomb per kilogram (C/kg).   \n**Optional unit:** Röntgen/R (1)\n\nThis is a measurement of a radiation dose (Exposed dose of ionizing radiation). \n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (0,65535,'CLASS2.VSCPD','## General Event.\n\n| Data byte | Description |\n| :----: | ----------- |\n| 0-15 | GUID for driver (MSB->LSB). |\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (1,65535,'CLASS2.VSCPD','Reserved\n\n| Data byte | Description |\n| :----: | ----------- |\n| 0-15 | GUID for driver (MSB->LSB). |\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (3,65535,'CLASS2.VSCPD','The machine/daemon is going to a pause state.\n\n| Data byte | Description |\n| :----: | ----------- |\n| 0-15 | GUID for driver (MSB->LSB). |\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (4,65535,'CLASS2.VSCPD','The machine/daemon is going from a pause state. \n\n| Data byte | Description |\n| :----: | ----------- |\n| 0-15 | GUID for driver (MSB->LSB). |\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (5,65535,'CLASS2.VSCPD','The machine/daemon is starting up. This is the first event sent after a machine start up. \n\n| Data byte | Description |\n| :----: | ----------- |\n| 0-15 | GUID for driver (MSB->LSB). |\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (6,65535,'CLASS2.VSCPD','The machine/daemon is shutting down. This is the last event sent before a machine is shutting off.  \n\n| Data byte | Description |\n| :----: | ----------- |\n| 0-15 | GUID for driver (MSB->LSB). |\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (7,65535,'CLASS2.VSCPD','This event is used by the VSCP daemon to stop a Level III driver.\n\n| Data byte | Description |\n | :----: | ----------- |\n | 0-15 | GUID for driver (MSB->LSB). |\n\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (8,65535,'CLASS2.VSCPD','This event is used by the VSCP daemon to pause execution of a Level III driver.\n\n| Data byte | Description |\n | :----: | ----------- |\n | 0-15 | GUID for driver (MSB->LSB). |\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (9,65535,'CLASS2.VSCPD','Reserved\n\n| Data byte | Description |\n| :----: | ----------- |\n| 0-15 | GUID for driver (MSB->LSB). |\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (10,65535,'CLASS2.VSCPD','This event is used by the VSCP daemon to resume execution of a Level III driver.\n\n| Data byte | Description |\n | :----: | ----------- |\n | 0-15 | GUID for driver (MSB->LSB). |');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (11,65535,'CLASS2.VSCPD','This event is used by the VSCP daemon to restart a Level III driver.\n\n| Data byte | Description |\n | :----: | ----------- |\n | 0-15 | GUID for driver (MSB->LSB). |\n\n');
INSERT INTO vscp_type (type,link_to_class,token,description) VALUES (12,65535,'CLASS2.VSCPD','This event is used by the VSCP daemon to (re)configure a Level III driver.\n\nEvent data is GUID for driver followed by a null terminated UTF8 string that is the path to a XML configuration string.\n\n| Data byte | Description |\n | :----: | ----------- |\n | 0-15 | GUID for driver (MSB->LSB). |\n | 16 -| NULL terminated path to config file |\n \n');
 
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,1,0,'Count','Count.','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,2,0,'Meter','Meter.','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,3,0,'Kilogram','Kilogram.','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,4,0,'Seconds','Time in seconds.','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,4,1,'Milliseconds','Time in milliseconds.','{{val}}*1000');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,4,2,'yymdhms','Date.','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,4,3,'HHMMSS','Time.','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,5,0,'Ampere','Ampere','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,6,0,'kelvin','Degrees Kelvin','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,6,1,'celsius','Degrees Celsius','{{val}} + 273.15 ');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,6,2,'fahrenheit','Degrees Fahrenheit','({{val}} + 459.67) * 5/9');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,7,0,'mole','Amount of substance in mole','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,8,0,'candela','Candela','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,9,0,'hertz','Hertz','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,10,0,'becquerel','Becquerel','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,10,1,'curie','Curie','{{val}}/(3.7*10^10)');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,10,2,'rutherford','Rutherford','{{val}}/10^6)');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,11,0,'newton','Newton','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,12,0,'pascal','Pascal','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,12,1,'bar','Bar','{{val}}*10^5');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,12,2,'psi','Psi','{{val}}*6.8948*10^3');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,12,3,'atm','Standard atmosphere','{{val}}*101.325*10^3');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,12,4,'torr','Torr','{{val}}*133.322368');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,12,5,'at','Technical atmosphere','{{val}}*98.0665*10^3');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,12,6,'at','Centimeters of water column','{{val}}*98.0665');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,13,0,'joule','Joule','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,13,1,'kwh','Kilowatt-hour','{{val}}*3600');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,14,0,'watt','Watt','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,14,1,'Horsepower','Horsepower','{{val}}*745.699872');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,15,0,'coulomb','Coulomb','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,16,0,'voltage','Voltage','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,17,0,'farad','Farad','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,18,0,'ohm','Ohm','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,19,0,'siemens','Siemens','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,20,0,'ampere per meter','Ampere per meter','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,20,1,'Oersted','Oersted','{{val}}*79.77');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,21,0,'weber','Weber (B)','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,22,0,'tesla','Tesla (B)','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,22,1,'gauss','Gauss','{{val}}*10^−4');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,23,0,'henry','Henry','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,24,0,'Ampere','Ampere','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,25,0,'lux','Lux','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,26,0,'gray','Gray','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,27,0,'katal','Katal','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,28,0,'cubic meter','Cubic meter','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,28,1,'litre','Litre','{{val}}*10^3');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,28,2,'decilitre','Decilitre','{{val}}*10^4');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,28,3,'centilitre','Centilitre','{{val}}*10^5');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,28,4,'millilitre','Millilitre','{{val}}*10^6');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,29,0,'watt per square meter','watt per square meter','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,30,0,'radian','Radian','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,30,1,'degree','Degree','{{val}}*pi/180');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,30,2,'arcminute','Arcminute','{{val}}*pi/10800');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,30,3,'arcsecond','Arcsecond','{{val}}*pi/648000');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,31,0,'Longitude','Longitude','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,31,1,'Latitude','Latitude','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,32,0,'meter per second','Meters per second','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,32,1,'kilometers per hour','Kilometers per hour','{{val}}/3.6');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,32,2,'miles per hour','Miles per hour','{{val}}*0.44704');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,33,0,'meters per second/second ','Meters per second/second ','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,34,0,'newton meter','Newton meter','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,35,0,'relative humidity (0-100%)','Relative humidity (0-100%)','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,36,0,'cubic meters per second','Cubic meters per second','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,36,1,'litres per second','Litres meters per second','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,37,0,'kelvins per watt','Kelvins per watt','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,38,0,'refractive (optical) power','Refractive (optical) power','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,39,0,'pascal second','Pascal second','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,39,1,'poise','poise','{{val}}/10');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,39,2,'poiseuille','Poiseuille','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,40,0,'pascal second per cubic metre','Pascal second per cubic metre','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,41,0,'acoustic ohm','Acoustic ohm','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,42,0,'reciprocal farad (daraf)','Reciprocal farad (daraf)','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,43,0,'talbot','Talbot','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,44,0,'candela per square metre','Candela per square metre','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,45,0,'mol per cubic metre','Mol per cubic metre','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,45,1,'mol per litre','Mol per litre','{{val}}/1000');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,46,0,'kilogram per cubic metre','Kilogram per cubic metre','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,49,0,'kelvin','Degrees Kelvin','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,49,1,'celsius','Degrees Celsius','{{val}} + 273.15 ');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,49,2,'fahrenheit','Degrees Fahrenheit','({{val}} + 459.67) * 5/9');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,50,0,'relative value','relative','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,51,0,'meter','meter','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,51,1,'feet','Feet','{{val}}*0.3048');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,51,2,'inch','Inch','{{val}}*0.0254');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,52,0,'square meter','Square meter','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,53,0,'watt per steradian','Watt per steradian','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,54,0,'watt per steradian per square metre','Watt per steradian per square metre','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,55,0,'watt per square metre','Watt per square metre','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,56,0,'watt per steradian per square metre, per metre ','Watt per steradian per square metre, per metre ','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,56,1,'watt per square metre, per metre ','Watt per square metre, per metre ','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,56,2,'watt per square metre per hertz ','Watt per square metre per hertz ','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,57,0,'watt per square metre per hertz ','Watt per square metre per hertz ','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,57,1,'watt per square metre, per metre ','Watt per square metre, per metre ','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,57,2,'watt per square metre per hertz ','Watt per square metre per hertz ','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,58,0,'pascal','Pascal','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,59,0,'pascal','Pascal','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,60,0,'decibel','Decibel','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,61,0,'sievert','Sievert','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,61,1,'rem','Rem','{{val}}/100');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,62,0,'coulomb per kilogram','Coulomb per kilogram','{{val}}');
INSERT INTO vscp_unit (link_to_class,link_to_type,nunit,name,description,conversion) VALUES (10,62,1,'röntgen','Röntgen','{{val}}/(2.58*10^-4)');
 
