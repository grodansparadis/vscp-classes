<?xml version="1.0" encoding="utf-8"?>

<class id="1" 
    name="Alarm functionality" 
    token="CLASS1.ALARM" >
    <type id="0" 
        name="General event"
        token="VSCP_TYPE_ALARM_GENERAL" >
        <render>
            <vscpworks 
                variables=""
                template="No data"
            />
        </render>
    </type>    

    <type id="1" 
        name="Warning" 
        token="VSCP_TYPE_ALARM_WARNING" >
        <render>
            <vscpworks 
                variables="
                    alarm:      : function() { return (e.vscpData[0]); } {{{newline}}}
                    state       : function() { if (e.vscpData[0]) return &quot; - ON&quot; else return &quot; - OFF&quot; } {{{newline}}}
                    zone:       : function() { return (e.vscpData[1]); } {{{newline}}}
                    subzone:    : function() { return (e.vscpData[2]); } {{{newline}}}
                "
                template="
                    {{{lbl-start}}}Index: {{{lbl-end}}} {{{val-start}}}{{{index}}}{{{state}}}{{{val-end}}}{{{newline}}}
                    {{{lbl-start}}}Zone: {{{lbl-end}}} {{{val-start}}}{{{zone}}}{{{val-end}}}{{{newline}}}
                    {{{lbl-start}}}Subzone: {{{lbl-end}}} {{{val-start}}}{{{subzone}}}{{{val-end}}}{{{newline}}}
                "
            />
        </render>        
    </type>

    <type id="2" 
        name="Alarm occurred"
        token="VSCP_TYPE_ALARM_ALARM" >
        <render>
            <vscpworks 
                variables="
                    alarm:      : function() { return (e.vscpData[0]); } {{{newline}}}
                    state       : function() { return (&quot;00000000&quot; + e.vscpData[0].toString(2)).substr(-8) } {{{newline}}}
                    zone:       : function() { return (e.vscpData[1]); } {{{newline}}}
                    subzone:    : function() { return (e.vscpData[2]); } {{{newline}}}
                "
                template="
                    {{{lbl-start}}}Alarm: {{{lbl-end}}} {{{val-start}}}{{{alarm}}}{{{state}}}{{{val-end}}}{{{newline}}}
                    {{{lbl-start}}}Zone: {{{lbl-end}}} {{{val-start}}}{{{zone}}}{{{val-end}}}{{{newline}}}
                    {{{lbl-start}}}Subzone: {{{lbl-end}}} {{{val-start}}}{{{subzone}}}{{{val-end}}}{{{newline}}}
                "
            />
        </render>
    </type>

    <type id="3" 
        name="Alarm sound on/off"
        token="VSCP_TYPE_ALARM_SOUND" >
        <render>
            <vscpworks 
                variables="
                    alarm:      : function() { return (e.vscpData[0]); } {{{newline}}}
                    state       : function() { if (e.vscpData[0]) return &quot; - ON&quot; else return &quot; - OFF&quot; } {{{newline}}}
                    zone:       : function() { return (e.vscpData[1]); } {{{newline}}}
                    subzone:    : function() { return (e.vscpData[2]); } {{{newline}}}
                "
                template="
                    {{{lbl-start}}}Index: {{{lbl-end}}} {{{val-start}}}{{{index}}}{{{state}}}{{{val-end}}}{{{newline}}}
                    {{{lbl-start}}}Zone: {{{lbl-end}}} {{{val-start}}}{{{zone}}}{{{val-end}}}{{{newline}}}
                    {{{lbl-start}}}Subzone: {{{lbl-end}}} {{{val-start}}}{{{subzone}}}{{{val-end}}}{{{newline}}}
                "
            />
        </render>
    </type>

    <type id="4" 
        name="Alarm light on/off"
        token="VSCP_TYPE_ALARM_LIGHT" >
        <render>
            <vscpworks 
                variables="
                    alarm:      : function() { return (e.vscpData[0]); } {{{newline}}}
                    state       : function() { if (e.vscpData[0]) return &quot; - ON&quot; else return &quot; - OFF&quot; } {{{newline}}}
                    zone:       : function() { return (e.vscpData[1]); } {{{newline}}}
                    subzone:    : function() { return (e.vscpData[2]); } {{{newline}}}
                "
                template="
                    {{{lbl-start}}}Index: {{{lbl-end}}} {{{val-start}}}{{{index}}}{{{state}}}{{{val-end}}}{{{newline}}}
                    {{{lbl-start}}}Zone: {{{lbl-end}}} {{{val-start}}}{{{zone}}}{{{val-end}}}{{{newline}}}
                    {{{lbl-start}}}Subzone: {{{lbl-end}}} {{{val-start}}}{{{subzone}}}{{{val-end}}}{{{newline}}}
                "
            />
        </render>
    </type>

    <type id="5" 
        name="Power on/off"
        token="VSCP_TYPE_ALARM_POWER" >
        <render>
            <vscpworks 
                variables="
                    alarm:      : function() { return (e.vscpData[0]); } {{{newline}}}
                    state       : function() { if (e.vscpData[0]) return &quot; - ON&quot; else return &quot; - OFF&quot; } {{{newline}}}
                    zone:       : function() { return (e.vscpData[1]); } {{{newline}}}
                    subzone:    : function() { return (e.vscpData[2]); } {{{newline}}}
                "
                template="
                    {{{lbl-start}}}Index: {{{lbl-end}}} {{{val-start}}}{{{index}}}{{{state}}}{{{val-end}}}{{{newline}}}
                    {{{lbl-start}}}Zone: {{{lbl-end}}} {{{val-start}}}{{{zone}}}{{{val-end}}}{{{newline}}}
                    {{{lbl-start}}}Subzone: {{{lbl-end}}} {{{val-start}}}{{{subzone}}}{{{val-end}}}{{{newline}}}
                "
            />
        </render>
    </type>

    <type id="6" 
        name="Emergency Stop"
        token="VSCP_TYPE_ALARM_EMERGENCY_STOP" >
        <render>
            <vscpworks 
                variables="
                    alarm:      : function() { return (e.vscpData[0]); } {{{newline}}}
                    state       : function() { if (e.vscpData[0]) return &quot; - ON&quot; else return &quot; - OFF&quot; } {{{newline}}}
                    zone:       : function() { return (e.vscpData[1]); } {{{newline}}}
                    subzone:    : function() { return (e.vscpData[2]); } {{{newline}}}
                "
                template="
                    {{{lbl-start}}}Index: {{{lbl-end}}} {{{val-start}}}{{{index}}}{{{state}}}{{{val-end}}}{{{newline}}}
                    {{{lbl-start}}}Zone: {{{lbl-end}}} {{{val-start}}}{{{zone}}}{{{val-end}}}{{{newline}}}
                    {{{lbl-start}}}Subzone: {{{lbl-end}}} {{{val-start}}}{{{subzone}}}{{{val-end}}}{{{newline}}}
                "
            />
        </render>
    </type>

    <type id="7" 
        name="Emergency Pause"
        token="VSCP_TYPE_ALARM_EMERGENCY_PAUSE" >
        <render>
            <vscpworks 
                variables="
                    alarm:      : function() { return (e.vscpData[0]); } {{{newline}}}
                    state       : function() { if (e.vscpData[0]) return &quot; - ON&quot; else return &quot; - OFF&quot; } {{{newline}}}
                    zone:       : function() { return (e.vscpData[1]); } {{{newline}}}
                    subzone:    : function() { return (e.vscpData[2]); } {{{newline}}}
                "
                template="
                    {{{lbl-start}}}Index: {{{lbl-end}}} {{{val-start}}}{{{index}}}{{{state}}}{{{val-end}}}{{{newline}}}
                    {{{lbl-start}}}Zone: {{{lbl-end}}} {{{val-start}}}{{{zone}}}{{{val-end}}}{{{newline}}}
                    {{{lbl-start}}}Subzone: {{{lbl-end}}} {{{val-start}}}{{{subzone}}}{{{val-end}}}{{{newline}}}
                "
            />
        </render>
    </type>

    <type id="8" 
        name="Emergency Reset"
        token="VSCP_TYPE_ALARM_EMERGENCY_RESET" >
        <render>
            <vscpworks 
                variables="
                    alarm:      : function() { return (e.vscpData[0]); } {{{newline}}}
                    state       : function() { if (e.vscpData[0]) return &quot; - ON&quot; else return &quot; - OFF&quot; } {{{newline}}}
                    zone:       : function() { return (e.vscpData[1]); } {{{newline}}}
                    subzone:    : function() { return (e.vscpData[2]); } {{{newline}}}
                "
                template="
                    {{{lbl-start}}}Index: {{{lbl-end}}} {{{val-start}}}{{{index}}}{{{state}}}{{{val-end}}}{{{newline}}}
                    {{{lbl-start}}}Zone: {{{lbl-end}}} {{{val-start}}}{{{zone}}}{{{val-end}}}{{{newline}}}
                    {{{lbl-start}}}Subzone: {{{lbl-end}}} {{{val-start}}}{{{subzone}}}{{{val-end}}}{{{newline}}}
                "
            />
        </render>
    </type>

    <type id="9" 
        name="Emergency Resume"
        token="VSCP_TYPE_ALARM_EMERGENCY_RESUME" >
        <render>
            <vscpworks 
                variables="
                    alarm:      : function() { return (e.vscpData[0]); } {{{newline}}}
                    state       : function() { if (e.vscpData[0]) return &quot; - ON&quot; else return &quot; - OFF&quot; } {{{newline}}}
                    zone:       : function() { return (e.vscpData[1]); } {{{newline}}}
                    subzone:    : function() { return (e.vscpData[2]); } {{{newline}}}
                "
                template="
                    {{{lbl-start}}}Index: {{{lbl-end}}} {{{val-start}}}{{{index}}}{{{state}}}{{{val-end}}}{{{newline}}}
                    {{{lbl-start}}}Zone: {{{lbl-end}}} {{{val-start}}}{{{zone}}}{{{val-end}}}{{{newline}}}
                    {{{lbl-start}}}Subzone: {{{lbl-end}}} {{{val-start}}}{{{subzone}}}{{{val-end}}}{{{newline}}}
                "
            />
        </render>
    </type>

    <type id="10"
        name="Arm"
        token="VSCP_TYPE_ALARM_ARM" >
        <render>
            <vscpworks 
                variables="
                    alarm:      : function() { return (e.vscpData[0]); } {{{newline}}}
                    state       : function() { if (e.vscpData[0]) return &quot; - ON&quot; else return &quot; - OFF&quot; } {{{newline}}}
                    zone:       : function() { return (e.vscpData[1]); } {{{newline}}}
                    subzone:    : function() { return (e.vscpData[2]); } {{{newline}}}
                "
                template="
                    {{{lbl-start}}}Index: {{{lbl-end}}} {{{val-start}}}{{{index}}}{{{state}}}{{{val-end}}}{{{newline}}}
                    {{{lbl-start}}}Zone: {{{lbl-end}}} {{{val-start}}}{{{zone}}}{{{val-end}}}{{{newline}}}
                    {{{lbl-start}}}Subzone: {{{lbl-end}}} {{{val-start}}}{{{subzone}}}{{{val-end}}}{{{newline}}}
                "
            />
        </render>
    </type>

    <type id="11" 
        name="Disarm"
        token="VSCP_TYPE_ALARM_DISARM" >
        <render>
            <vscpworks 
                variables="
                    alarm:      : function() { return (e.vscpData[0]); } {{{newline}}}
                    state       : function() { if (e.vscpData[0]) return &quot; - ON&quot; else return &quot; - OFF&quot; } {{{newline}}}
                    zone:       : function() { return (e.vscpData[1]); } {{{newline}}}
                    subzone:    : function() { return (e.vscpData[2]); } {{{newline}}}
                "
                template="
                    {{{lbl-start}}}Index: {{{lbl-end}}} {{{val-start}}}{{{index}}}{{{state}}}{{{val-end}}}{{{newline}}}
                    {{{lbl-start}}}Zone: {{{lbl-end}}} {{{val-start}}}{{{zone}}}{{{val-end}}}{{{newline}}}
                    {{{lbl-start}}}Subzone: {{{lbl-end}}} {{{val-start}}}{{{subzone}}}{{{val-end}}}{{{newline}}}
                "
            />
        </render>
    </type>

    <type id="12" 
        name="Watchdog"
        token="VSCP_TYPE_ALARM_WATCHDOG" >
        <render>
            <vscpworks 
                variables="
                    index:      : function() { return (e.vscpData[0]); } {{{newline}}}
                    zone:       : function() { return (e.vscpData[1]); } {{{newline}}}
                    subzone:    : function() { return (e.vscpData[2]); } {{{newline}}}
                "
                template="
                    {{{lbl-start}}}Index: {{{lbl-end}}} {{{val-start}}}{{{index}}}{{{val-end}}}{{{newline}}}
                    {{{lbl-start}}}Zone: {{{lbl-end}}} {{{val-start}}}{{{zone}}}{{{val-end}}}{{{newline}}}
                    {{{lbl-start}}}Subzone: {{{lbl-end}}} {{{val-start}}}{{{subzone}}}{{{val-end}}}{{{newline}}}
                "
            />
        </render>
    </type>


    <type id="13" 
        name="Alarm reset"
        token="VSCP_TYPE_ALARM_RESET" >
        <render>
            <vscpworks 
                variables="
                    alarm:      : function() { return (e.vscpData[0]); } {{{newline}}}
                    state       : function() { return (&quot;00000000&quot; + e.vscpData[0].toString(2)).substr(-8) } {{{newline}}}
                    zone:       : function() { return (e.vscpData[1]); } {{{newline}}}
                    subzone:    : function() { return (e.vscpData[2]); } {{{newline}}}
                "
                template="
                    {{{lbl-start}}}Alarm: {{{lbl-end}}} {{{val-start}}}{{{alarm}}}{{{state}}}{{{val-end}}}{{{newline}}}
                    {{{lbl-start}}}Zone: {{{lbl-end}}} {{{val-start}}}{{{zone}}}{{{val-end}}}{{{newline}}}
                    {{{lbl-start}}}Subzone: {{{lbl-end}}} {{{val-start}}}{{{subzone}}}{{{val-end}}}{{{newline}}}
                "
            />
        </render>
    </type>


</class>
